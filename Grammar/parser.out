Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> init
Rule 1     init -> instrucciones_g
Rule 2     instrucciones_g -> instrucciones_g instruccion_g
Rule 3     instrucciones_g -> instruccion_g
Rule 4     instruccion_g -> declaracion PCOMA
Rule 5     instruccion_g -> asignacion PCOMA
Rule 6     instruccion_g -> print PCOMA
Rule 7     instruccion_g -> if
Rule 8     instruccion_g -> while
Rule 9     instrucciones_l -> instrucciones_l instruccion_l
Rule 10    instrucciones_l -> instruccion_l
Rule 11    instruccion_l -> print PCOMA
Rule 12    instruccion_l -> declaracion PCOMA
Rule 13    instruccion_l -> asignacion PCOMA
Rule 14    instruccion_l -> llamada PCOMA
Rule 15    instruccion_l -> expstruct PCOMA
Rule 16    instruccion_l -> ID PUNTO exp_native PCOMA
Rule 17    instruccion_l -> sentencia
Rule 18    instruccion_l -> transferencia
Rule 19    instruccion_l -> transferencia PCOMA
Rule 20    funcion -> FN ID LPAR lista_parametros RPAR ARROW tipo_var statement
Rule 21    funcion -> FN ID LPAR lista_parametros RPAR statement
Rule 22    funcion -> FN ID LPAR RPAR ARROW tipo_var statement
Rule 23    funcion -> FN ID LPAR RPAR statement
Rule 24    modulo -> MOD ID mod_statement
Rule 25    mod_statement -> LLLAV instrucciones_mod RLLAV
Rule 26    mod_statement -> LLLAV RLLAV
Rule 27    instrucciones_mod -> instrucciones_mod instruccion_mod
Rule 28    instrucciones_mod -> instruccion_mod
Rule 29    instruccion_mod -> PUB modulo
Rule 30    instruccion_mod -> PUB struct
Rule 31    instruccion_mod -> PUB funcion
Rule 32    instruccion_mod -> modulo
Rule 33    instruccion_mod -> struct
Rule 34    instruccion_mod -> funcion
Rule 35    struct -> STRUCT ID LLLAV lista_var RLLAV
Rule 36    struct -> STRUCT ID LLLAV RLLAV
Rule 37    sentencia -> if
Rule 38    sentencia -> match
Rule 39    sentencia -> loop
Rule 40    sentencia -> while
Rule 41    sentencia -> for
Rule 42    if -> IF exp statement else
Rule 43    else -> ELSE statement
Rule 44    else -> ELSE if
Rule 45    else -> epsilon
Rule 46    epsilon -> <empty>
Rule 47    match -> MATCH exp match_statement
Rule 48    match_statement -> LLLAV lista_brazos RLLAV
Rule 49    match_statement -> LLLAV RLLAV
Rule 50    lista_brazos -> lista_brazos brazo
Rule 51    lista_brazos -> brazo
Rule 52    brazo -> lista_exp_brazos ARROW2 instruccion_match COMA
Rule 53    brazo -> lista_exp_brazos ARROW2 statement COMA
Rule 54    brazo -> lista_exp_brazos ARROW2 statement
Rule 55    lista_exp_brazos -> lista_exp_brazos ORSINGLE exp
Rule 56    lista_exp_brazos -> exp
Rule 57    instruccion_match -> print
Rule 58    instruccion_match -> llamada
Rule 59    instruccion_match -> asignacion
Rule 60    instruccion_match -> sentencia
Rule 61    instruccion_match -> transferencia
Rule 62    loop -> LOOP statement
Rule 63    while -> WHILE exp statement
Rule 64    for -> FOR ID IN foriterative statement
Rule 65    foriterative -> exp PUNTO PUNTO exp
Rule 66    foriterative -> exp
Rule 67    transferencia -> CONTINUE
Rule 68    transferencia -> BREAK
Rule 69    transferencia -> BREAK auxexp
Rule 70    transferencia -> RETURN
Rule 71    transferencia -> RETURN auxexp
Rule 72    transferencia -> auxexp
Rule 73    statement -> LLLAV instrucciones_l RLLAV
Rule 74    statement -> LLLAV RLLAV
Rule 75    lista_var -> lista_var COMA PUB ID DPUNTOS tipo_var
Rule 76    lista_var -> lista_var COMA ID DPUNTOS tipo_var
Rule 77    lista_var -> PUB ID DPUNTOS tipo_var
Rule 78    lista_var -> ID DPUNTOS tipo_var
Rule 79    lista_parametros -> lista_parametros COMA asignacion_simple
Rule 80    lista_parametros -> asignacion_simple
Rule 81    declaracion -> LET asignacion_simple IGUAL auxexp
Rule 82    declaracion -> LET MUT asignacion
Rule 83    declaracion -> LET asignacion
Rule 84    asignacion -> ID IGUAL auxexp
Rule 85    asignacion -> ID lista_assign2 IGUAL auxexp
Rule 86    asignacion -> ID lista_arr IGUAL auxexp
Rule 87    asignacion -> ID lista_arr lista_assign2 IGUAL auxexp
Rule 88    lista_assign2 -> lista_assign2 PUNTO ID
Rule 89    lista_assign2 -> PUNTO ID
Rule 90    lista_assign -> lista_assign PUNTO ID
Rule 91    lista_assign -> ID
Rule 92    lista_acc -> lista_acc PUNTO ID
Rule 93    lista_acc -> lista_acc PUNTO exp_native
Rule 94    lista_acc -> auxacc
Rule 95    auxacc -> exparr
Rule 96    auxacc -> ID
Rule 97    lista_arr -> lista_arr LCOR auxexp RCOR
Rule 98    lista_arr -> LCOR auxexp RCOR
Rule 99    lista_exp -> lista_exp COMA auxexp
Rule 100   lista_exp -> auxexp
Rule 101   asignacion_simple -> ID DPUNTOS tipo_var
Rule 102   asignacion_simple -> MUT ID DPUNTOS tipo_var
Rule 103   asignacion_simple -> ID DPUNTOS ANDSINGLE tipo_var
Rule 104   asignacion_simple -> MUT ID DPUNTOS ANDSINGLE tipo_var
Rule 105   asignacion_simple -> ID DPUNTOS ANDSINGLE MUT tipo_var
Rule 106   asignacion_simple -> MUT ID DPUNTOS ANDSINGLE MUT tipo_var
Rule 107   lista_arr2 -> LCOR tipo_var PCOMA exp RCOR
Rule 108   auxexp -> expstruct
Rule 109   auxexp -> exp
Rule 110   exp -> LPAR exp RPAR
Rule 111   exp -> expmath
Rule 112   exp -> expop
Rule 113   exp -> exprel
Rule 114   exp -> exparr
Rule 115   exp -> newarray
Rule 116   exp -> expvec
Rule 117   exp -> exparam
Rule 118   exp -> exppow
Rule 119   exp -> expcast
Rule 120   exp -> lista_acc
Rule 121   exp -> llamada
Rule 122   exp -> sentencia
Rule 123   exp -> valores
Rule 124   exp -> exp PUNTO exp_native
Rule 125   expmath -> exp MAS exp
Rule 126   expmath -> exp MENOS exp
Rule 127   expmath -> exp MULTIPLICACION exp
Rule 128   expmath -> exp DIVISION exp
Rule 129   expmath -> exp MODULO exp
Rule 130   expmath -> MENOS exp
Rule 131   exppow -> I64 DPUNTOS DPUNTOS POW LPAR exp COMA exp RPAR
Rule 132   exppow -> F64 DPUNTOS DPUNTOS POWF LPAR exp COMA exp RPAR
Rule 133   expop -> exp AND exp
Rule 134   expop -> exp OR exp
Rule 135   expop -> AD exp
Rule 136   expcast -> exp AS tipo_var
Rule 137   exprel -> exp IGUALI exp
Rule 138   exprel -> exp DIF exp
Rule 139   exprel -> exp MAYOR exp
Rule 140   exprel -> exp MENOR exp
Rule 141   exprel -> exp MAYORI exp
Rule 142   exprel -> exp MENORI exp
Rule 143   expstruct -> lista_classtype LLLAV lista_att RLLAV
Rule 144   expstruct -> lista_classtype LLLAV RLLAV
Rule 145   expstruct -> lista_classtype DPUNTOS DPUNTOS llamada
Rule 146   lista_att -> lista_att COMA ID DPUNTOS auxexp
Rule 147   lista_att -> ID DPUNTOS auxexp
Rule 148   exparam -> MUT ID
Rule 149   exparam -> MUT valores
Rule 150   exparam -> ANDSINGLE MUT ID
Rule 151   exparam -> ANDSINGLE MUT valores
Rule 152   exparr -> ID lista_arr
Rule 153   expvec -> VEC AD newarray
Rule 154   expvec -> VECTOR DPUNTOS DPUNTOS exp_natarr
Rule 155   newarray -> LCOR lista_exp RCOR
Rule 156   newarray -> LCOR auxexp PCOMA exp RCOR
Rule 157   valores -> ENTERO
Rule 158   valores -> DECIMAL
Rule 159   valores -> CADENA
Rule 160   valores -> BOOLEANO
Rule 161   valores -> CARACTER
Rule 162   tipo_var -> I64
Rule 163   tipo_var -> F64
Rule 164   tipo_var -> STRING
Rule 165   tipo_var -> ANDSINGLE aSTR
Rule 166   tipo_var -> BOOL
Rule 167   tipo_var -> CHAR
Rule 168   tipo_var -> USIZE
Rule 169   tipo_var -> lista_arr2
Rule 170   tipo_var -> LCOR tipo_var RCOR
Rule 171   tipo_var -> lista_classtype
Rule 172   tipo_var -> VECTOR MENOR tipo_var MAYOR
Rule 173   tipo_var -> VECTOR MENOR lista_classtype MAYOR
Rule 174   lista_classtype -> lista_classtype DPUNTOS DPUNTOS ID
Rule 175   lista_classtype -> ID
Rule 176   llamada -> ID LPAR RPAR
Rule 177   llamada -> ID LPAR lista_exp RPAR
Rule 178   exp_native -> TOSTRING LPAR RPAR
Rule 179   exp_native -> TOOWNED LPAR RPAR
Rule 180   exp_native -> CLONE LPAR RPAR
Rule 181   exp_native -> LEN LPAR RPAR
Rule 182   exp_native -> CAPACITY LPAR RPAR
Rule 183   exp_native -> REMOVE LPAR auxexp RPAR
Rule 184   exp_native -> CONTAINS LPAR ANDSINGLE auxexp RPAR
Rule 185   exp_native -> PUSH LPAR auxexp RPAR
Rule 186   exp_native -> INSERT LPAR lista_exp RPAR
Rule 187   exp_native -> CHARS LPAR RPAR
Rule 188   exp_native -> SQRT LPAR RPAR
Rule 189   exp_native -> ABS LPAR RPAR
Rule 190   exp_natarr -> NEW LPAR RPAR
Rule 191   exp_natarr -> WITHCAPACITY LPAR exp RPAR
Rule 192   print -> PRINT AD LPAR lista_exp RPAR

Terminals, with rules where they appear

ABS                  : 189
AD                   : 135 153 192
AND                  : 133
ANDSINGLE            : 103 104 105 106 150 151 165 184
ARROW                : 20 22
ARROW2               : 52 53 54
AS                   : 136
BOOL                 : 166
BOOLEANO             : 160
BREAK                : 68 69
CADENA               : 159
CAPACITY             : 182
CARACTER             : 161
CHAR                 : 167
CHARS                : 187
CLONE                : 180
COMA                 : 52 53 75 76 79 99 131 132 146
CONTAINS             : 184
CONTINUE             : 67
DECIMAL              : 158
DIF                  : 138
DIVISION             : 128
DPUNTOS              : 75 76 77 78 101 102 103 104 105 106 131 131 132 132 145 145 146 147 154 154 174 174
ELSE                 : 43 44
ENTERO               : 157
F64                  : 132 163
FN                   : 20 21 22 23
FOR                  : 64
I64                  : 131 162
ID                   : 16 20 21 22 23 24 35 36 64 75 76 77 78 84 85 86 87 88 89 90 91 92 96 101 102 103 104 105 106 146 147 148 150 152 174 175 176 177
IF                   : 42
IGUAL                : 81 84 85 86 87
IGUALI               : 137
IN                   : 64
INSERT               : 186
LCOR                 : 97 98 107 155 156 170
LEN                  : 181
LET                  : 81 82 83
LLLAV                : 25 26 35 36 48 49 73 74 143 144
LOOP                 : 62
LPAR                 : 20 21 22 23 110 131 132 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192
MAS                  : 125
MATCH                : 47
MAYOR                : 139 172 173
MAYORI               : 141
MENOR                : 140 172 173
MENORI               : 142
MENOS                : 126 130
MOD                  : 24
MODULO               : 129
MULTIPLICACION       : 127
MUT                  : 82 102 104 105 106 106 148 149 150 151
NEW                  : 190
OR                   : 134
ORSINGLE             : 55
PCOMA                : 4 5 6 11 12 13 14 15 16 19 107 156
POW                  : 131
POWF                 : 132
PRINT                : 192
PUB                  : 29 30 31 75 77
PUNTO                : 16 65 65 88 89 90 92 93 124
PUSH                 : 185
RCOR                 : 97 98 107 155 156 170
REMOVE               : 183
RETURN               : 70 71
RLLAV                : 25 26 35 36 48 49 73 74 143 144
RPAR                 : 20 21 22 23 110 131 132 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192
SQRT                 : 188
STRING               : 164
STRUCT               : 35 36
TOOWNED              : 179
TOSTRING             : 178
USIZE                : 168
VEC                  : 153
VECTOR               : 154 172 173
WHILE                : 63
WITHCAPACITY         : 191
aSTR                 : 165
error                : 

Nonterminals, with rules where they appear

asignacion           : 5 13 59 82 83
asignacion_simple    : 79 80 81
auxacc               : 94
auxexp               : 69 71 72 81 84 85 86 87 97 98 99 100 146 147 156 183 184 185
brazo                : 50 51
declaracion          : 4 12
else                 : 42
epsilon              : 45
exp                  : 42 47 55 56 63 65 65 66 107 109 110 124 125 125 126 126 127 127 128 128 129 129 130 131 131 132 132 133 133 134 134 135 136 137 137 138 138 139 139 140 140 141 141 142 142 156 191
exp_natarr           : 154
exp_native           : 16 93 124
exparam              : 117
exparr               : 95 114
expcast              : 119
expmath              : 111
expop                : 112
exppow               : 118
exprel               : 113
expstruct            : 15 108
expvec               : 116
for                  : 41
foriterative         : 64
funcion              : 31 34
if                   : 7 37 44
init                 : 0
instruccion_g        : 2 3
instruccion_l        : 9 10
instruccion_match    : 52
instruccion_mod      : 27 28
instrucciones_g      : 1 2
instrucciones_l      : 9 73
instrucciones_mod    : 25 27
lista_acc            : 92 93 120
lista_arr            : 86 87 97 152
lista_arr2           : 169
lista_assign         : 90
lista_assign2        : 85 87 88
lista_att            : 143 146
lista_brazos         : 48 50
lista_classtype      : 143 144 145 171 173 174
lista_exp            : 99 155 177 186 192
lista_exp_brazos     : 52 53 54 55
lista_parametros     : 20 21 79
lista_var            : 35 75 76
llamada              : 14 58 121 145
loop                 : 39
match                : 38
match_statement      : 47
mod_statement        : 24
modulo               : 29 32
newarray             : 115 153
print                : 6 11 57
sentencia            : 17 60 122
statement            : 20 21 22 23 42 43 53 54 62 63 64
struct               : 30 33
tipo_var             : 20 22 75 76 77 78 101 102 103 104 105 106 107 136 170 172
transferencia        : 18 19 61
valores              : 123 149 151
while                : 8 40

Parsing method: LALR

state 0

    (0) S' -> . init
    (1) init -> . instrucciones_g
    (2) instrucciones_g -> . instrucciones_g instruccion_g
    (3) instrucciones_g -> . instruccion_g
    (4) instruccion_g -> . declaracion PCOMA
    (5) instruccion_g -> . asignacion PCOMA
    (6) instruccion_g -> . print PCOMA
    (7) instruccion_g -> . if
    (8) instruccion_g -> . while
    (81) declaracion -> . LET asignacion_simple IGUAL auxexp
    (82) declaracion -> . LET MUT asignacion
    (83) declaracion -> . LET asignacion
    (84) asignacion -> . ID IGUAL auxexp
    (85) asignacion -> . ID lista_assign2 IGUAL auxexp
    (86) asignacion -> . ID lista_arr IGUAL auxexp
    (87) asignacion -> . ID lista_arr lista_assign2 IGUAL auxexp
    (192) print -> . PRINT AD LPAR lista_exp RPAR
    (42) if -> . IF exp statement else
    (63) while -> . WHILE exp statement

    LET             shift and go to state 9
    ID              shift and go to state 10
    PRINT           shift and go to state 11
    IF              shift and go to state 12
    WHILE           shift and go to state 13

    init                           shift and go to state 1
    instrucciones_g                shift and go to state 2
    instruccion_g                  shift and go to state 3
    declaracion                    shift and go to state 4
    asignacion                     shift and go to state 5
    print                          shift and go to state 6
    if                             shift and go to state 7
    while                          shift and go to state 8

state 1

    (0) S' -> init .



state 2

    (1) init -> instrucciones_g .
    (2) instrucciones_g -> instrucciones_g . instruccion_g
    (4) instruccion_g -> . declaracion PCOMA
    (5) instruccion_g -> . asignacion PCOMA
    (6) instruccion_g -> . print PCOMA
    (7) instruccion_g -> . if
    (8) instruccion_g -> . while
    (81) declaracion -> . LET asignacion_simple IGUAL auxexp
    (82) declaracion -> . LET MUT asignacion
    (83) declaracion -> . LET asignacion
    (84) asignacion -> . ID IGUAL auxexp
    (85) asignacion -> . ID lista_assign2 IGUAL auxexp
    (86) asignacion -> . ID lista_arr IGUAL auxexp
    (87) asignacion -> . ID lista_arr lista_assign2 IGUAL auxexp
    (192) print -> . PRINT AD LPAR lista_exp RPAR
    (42) if -> . IF exp statement else
    (63) while -> . WHILE exp statement

    $end            reduce using rule 1 (init -> instrucciones_g .)
    LET             shift and go to state 9
    ID              shift and go to state 10
    PRINT           shift and go to state 11
    IF              shift and go to state 12
    WHILE           shift and go to state 13

    instruccion_g                  shift and go to state 14
    declaracion                    shift and go to state 4
    asignacion                     shift and go to state 5
    print                          shift and go to state 6
    if                             shift and go to state 7
    while                          shift and go to state 8

state 3

    (3) instrucciones_g -> instruccion_g .

    LET             reduce using rule 3 (instrucciones_g -> instruccion_g .)
    ID              reduce using rule 3 (instrucciones_g -> instruccion_g .)
    PRINT           reduce using rule 3 (instrucciones_g -> instruccion_g .)
    IF              reduce using rule 3 (instrucciones_g -> instruccion_g .)
    WHILE           reduce using rule 3 (instrucciones_g -> instruccion_g .)
    $end            reduce using rule 3 (instrucciones_g -> instruccion_g .)


state 4

    (4) instruccion_g -> declaracion . PCOMA

    PCOMA           shift and go to state 15


state 5

    (5) instruccion_g -> asignacion . PCOMA

    PCOMA           shift and go to state 16


state 6

    (6) instruccion_g -> print . PCOMA

    PCOMA           shift and go to state 17


state 7

    (7) instruccion_g -> if .

    LET             reduce using rule 7 (instruccion_g -> if .)
    ID              reduce using rule 7 (instruccion_g -> if .)
    PRINT           reduce using rule 7 (instruccion_g -> if .)
    IF              reduce using rule 7 (instruccion_g -> if .)
    WHILE           reduce using rule 7 (instruccion_g -> if .)
    $end            reduce using rule 7 (instruccion_g -> if .)


state 8

    (8) instruccion_g -> while .

    LET             reduce using rule 8 (instruccion_g -> while .)
    ID              reduce using rule 8 (instruccion_g -> while .)
    PRINT           reduce using rule 8 (instruccion_g -> while .)
    IF              reduce using rule 8 (instruccion_g -> while .)
    WHILE           reduce using rule 8 (instruccion_g -> while .)
    $end            reduce using rule 8 (instruccion_g -> while .)


state 9

    (81) declaracion -> LET . asignacion_simple IGUAL auxexp
    (82) declaracion -> LET . MUT asignacion
    (83) declaracion -> LET . asignacion
    (101) asignacion_simple -> . ID DPUNTOS tipo_var
    (102) asignacion_simple -> . MUT ID DPUNTOS tipo_var
    (103) asignacion_simple -> . ID DPUNTOS ANDSINGLE tipo_var
    (104) asignacion_simple -> . MUT ID DPUNTOS ANDSINGLE tipo_var
    (105) asignacion_simple -> . ID DPUNTOS ANDSINGLE MUT tipo_var
    (106) asignacion_simple -> . MUT ID DPUNTOS ANDSINGLE MUT tipo_var
    (84) asignacion -> . ID IGUAL auxexp
    (85) asignacion -> . ID lista_assign2 IGUAL auxexp
    (86) asignacion -> . ID lista_arr IGUAL auxexp
    (87) asignacion -> . ID lista_arr lista_assign2 IGUAL auxexp

    MUT             shift and go to state 19
    ID              shift and go to state 21

    asignacion_simple              shift and go to state 18
    asignacion                     shift and go to state 20

state 10

    (84) asignacion -> ID . IGUAL auxexp
    (85) asignacion -> ID . lista_assign2 IGUAL auxexp
    (86) asignacion -> ID . lista_arr IGUAL auxexp
    (87) asignacion -> ID . lista_arr lista_assign2 IGUAL auxexp
    (88) lista_assign2 -> . lista_assign2 PUNTO ID
    (89) lista_assign2 -> . PUNTO ID
    (97) lista_arr -> . lista_arr LCOR auxexp RCOR
    (98) lista_arr -> . LCOR auxexp RCOR

    IGUAL           shift and go to state 22
    PUNTO           shift and go to state 25
    LCOR            shift and go to state 26

    lista_assign2                  shift and go to state 23
    lista_arr                      shift and go to state 24

state 11

    (192) print -> PRINT . AD LPAR lista_exp RPAR

    AD              shift and go to state 27


state 12

    (42) if -> IF . exp statement else
    (110) exp -> . LPAR exp RPAR
    (111) exp -> . expmath
    (112) exp -> . expop
    (113) exp -> . exprel
    (114) exp -> . exparr
    (115) exp -> . newarray
    (116) exp -> . expvec
    (117) exp -> . exparam
    (118) exp -> . exppow
    (119) exp -> . expcast
    (120) exp -> . lista_acc
    (121) exp -> . llamada
    (122) exp -> . sentencia
    (123) exp -> . valores
    (124) exp -> . exp PUNTO exp_native
    (125) expmath -> . exp MAS exp
    (126) expmath -> . exp MENOS exp
    (127) expmath -> . exp MULTIPLICACION exp
    (128) expmath -> . exp DIVISION exp
    (129) expmath -> . exp MODULO exp
    (130) expmath -> . MENOS exp
    (133) expop -> . exp AND exp
    (134) expop -> . exp OR exp
    (135) expop -> . AD exp
    (137) exprel -> . exp IGUALI exp
    (138) exprel -> . exp DIF exp
    (139) exprel -> . exp MAYOR exp
    (140) exprel -> . exp MENOR exp
    (141) exprel -> . exp MAYORI exp
    (142) exprel -> . exp MENORI exp
    (152) exparr -> . ID lista_arr
    (155) newarray -> . LCOR lista_exp RCOR
    (156) newarray -> . LCOR auxexp PCOMA exp RCOR
    (153) expvec -> . VEC AD newarray
    (154) expvec -> . VECTOR DPUNTOS DPUNTOS exp_natarr
    (148) exparam -> . MUT ID
    (149) exparam -> . MUT valores
    (150) exparam -> . ANDSINGLE MUT ID
    (151) exparam -> . ANDSINGLE MUT valores
    (131) exppow -> . I64 DPUNTOS DPUNTOS POW LPAR exp COMA exp RPAR
    (132) exppow -> . F64 DPUNTOS DPUNTOS POWF LPAR exp COMA exp RPAR
    (136) expcast -> . exp AS tipo_var
    (92) lista_acc -> . lista_acc PUNTO ID
    (93) lista_acc -> . lista_acc PUNTO exp_native
    (94) lista_acc -> . auxacc
    (176) llamada -> . ID LPAR RPAR
    (177) llamada -> . ID LPAR lista_exp RPAR
    (37) sentencia -> . if
    (38) sentencia -> . match
    (39) sentencia -> . loop
    (40) sentencia -> . while
    (41) sentencia -> . for
    (157) valores -> . ENTERO
    (158) valores -> . DECIMAL
    (159) valores -> . CADENA
    (160) valores -> . BOOLEANO
    (161) valores -> . CARACTER
    (95) auxacc -> . exparr
    (96) auxacc -> . ID
    (42) if -> . IF exp statement else
    (47) match -> . MATCH exp match_statement
    (62) loop -> . LOOP statement
    (63) while -> . WHILE exp statement
    (64) for -> . FOR ID IN foriterative statement

    LPAR            shift and go to state 29
    MENOS           shift and go to state 43
    AD              shift and go to state 44
    ID              shift and go to state 45
    LCOR            shift and go to state 46
    VEC             shift and go to state 47
    VECTOR          shift and go to state 48
    MUT             shift and go to state 49
    ANDSINGLE       shift and go to state 50
    I64             shift and go to state 51
    F64             shift and go to state 52
    ENTERO          shift and go to state 59
    DECIMAL         shift and go to state 60
    CADENA          shift and go to state 61
    BOOLEANO        shift and go to state 62
    CARACTER        shift and go to state 63
    IF              shift and go to state 12
    MATCH           shift and go to state 64
    LOOP            shift and go to state 65
    WHILE           shift and go to state 13
    FOR             shift and go to state 66

    exp                            shift and go to state 28
    expmath                        shift and go to state 30
    expop                          shift and go to state 31
    exprel                         shift and go to state 32
    exparr                         shift and go to state 33
    newarray                       shift and go to state 34
    expvec                         shift and go to state 35
    exparam                        shift and go to state 36
    exppow                         shift and go to state 37
    expcast                        shift and go to state 38
    lista_acc                      shift and go to state 39
    llamada                        shift and go to state 40
    sentencia                      shift and go to state 41
    valores                        shift and go to state 42
    auxacc                         shift and go to state 53
    if                             shift and go to state 54
    match                          shift and go to state 55
    loop                           shift and go to state 56
    while                          shift and go to state 57
    for                            shift and go to state 58

state 13

    (63) while -> WHILE . exp statement
    (110) exp -> . LPAR exp RPAR
    (111) exp -> . expmath
    (112) exp -> . expop
    (113) exp -> . exprel
    (114) exp -> . exparr
    (115) exp -> . newarray
    (116) exp -> . expvec
    (117) exp -> . exparam
    (118) exp -> . exppow
    (119) exp -> . expcast
    (120) exp -> . lista_acc
    (121) exp -> . llamada
    (122) exp -> . sentencia
    (123) exp -> . valores
    (124) exp -> . exp PUNTO exp_native
    (125) expmath -> . exp MAS exp
    (126) expmath -> . exp MENOS exp
    (127) expmath -> . exp MULTIPLICACION exp
    (128) expmath -> . exp DIVISION exp
    (129) expmath -> . exp MODULO exp
    (130) expmath -> . MENOS exp
    (133) expop -> . exp AND exp
    (134) expop -> . exp OR exp
    (135) expop -> . AD exp
    (137) exprel -> . exp IGUALI exp
    (138) exprel -> . exp DIF exp
    (139) exprel -> . exp MAYOR exp
    (140) exprel -> . exp MENOR exp
    (141) exprel -> . exp MAYORI exp
    (142) exprel -> . exp MENORI exp
    (152) exparr -> . ID lista_arr
    (155) newarray -> . LCOR lista_exp RCOR
    (156) newarray -> . LCOR auxexp PCOMA exp RCOR
    (153) expvec -> . VEC AD newarray
    (154) expvec -> . VECTOR DPUNTOS DPUNTOS exp_natarr
    (148) exparam -> . MUT ID
    (149) exparam -> . MUT valores
    (150) exparam -> . ANDSINGLE MUT ID
    (151) exparam -> . ANDSINGLE MUT valores
    (131) exppow -> . I64 DPUNTOS DPUNTOS POW LPAR exp COMA exp RPAR
    (132) exppow -> . F64 DPUNTOS DPUNTOS POWF LPAR exp COMA exp RPAR
    (136) expcast -> . exp AS tipo_var
    (92) lista_acc -> . lista_acc PUNTO ID
    (93) lista_acc -> . lista_acc PUNTO exp_native
    (94) lista_acc -> . auxacc
    (176) llamada -> . ID LPAR RPAR
    (177) llamada -> . ID LPAR lista_exp RPAR
    (37) sentencia -> . if
    (38) sentencia -> . match
    (39) sentencia -> . loop
    (40) sentencia -> . while
    (41) sentencia -> . for
    (157) valores -> . ENTERO
    (158) valores -> . DECIMAL
    (159) valores -> . CADENA
    (160) valores -> . BOOLEANO
    (161) valores -> . CARACTER
    (95) auxacc -> . exparr
    (96) auxacc -> . ID
    (42) if -> . IF exp statement else
    (47) match -> . MATCH exp match_statement
    (62) loop -> . LOOP statement
    (63) while -> . WHILE exp statement
    (64) for -> . FOR ID IN foriterative statement

    LPAR            shift and go to state 29
    MENOS           shift and go to state 43
    AD              shift and go to state 44
    ID              shift and go to state 45
    LCOR            shift and go to state 46
    VEC             shift and go to state 47
    VECTOR          shift and go to state 48
    MUT             shift and go to state 49
    ANDSINGLE       shift and go to state 50
    I64             shift and go to state 51
    F64             shift and go to state 52
    ENTERO          shift and go to state 59
    DECIMAL         shift and go to state 60
    CADENA          shift and go to state 61
    BOOLEANO        shift and go to state 62
    CARACTER        shift and go to state 63
    IF              shift and go to state 12
    MATCH           shift and go to state 64
    LOOP            shift and go to state 65
    WHILE           shift and go to state 13
    FOR             shift and go to state 66

    exp                            shift and go to state 67
    expmath                        shift and go to state 30
    expop                          shift and go to state 31
    exprel                         shift and go to state 32
    exparr                         shift and go to state 33
    newarray                       shift and go to state 34
    expvec                         shift and go to state 35
    exparam                        shift and go to state 36
    exppow                         shift and go to state 37
    expcast                        shift and go to state 38
    lista_acc                      shift and go to state 39
    llamada                        shift and go to state 40
    sentencia                      shift and go to state 41
    valores                        shift and go to state 42
    auxacc                         shift and go to state 53
    if                             shift and go to state 54
    match                          shift and go to state 55
    loop                           shift and go to state 56
    while                          shift and go to state 57
    for                            shift and go to state 58

state 14

    (2) instrucciones_g -> instrucciones_g instruccion_g .

    LET             reduce using rule 2 (instrucciones_g -> instrucciones_g instruccion_g .)
    ID              reduce using rule 2 (instrucciones_g -> instrucciones_g instruccion_g .)
    PRINT           reduce using rule 2 (instrucciones_g -> instrucciones_g instruccion_g .)
    IF              reduce using rule 2 (instrucciones_g -> instrucciones_g instruccion_g .)
    WHILE           reduce using rule 2 (instrucciones_g -> instrucciones_g instruccion_g .)
    $end            reduce using rule 2 (instrucciones_g -> instrucciones_g instruccion_g .)


state 15

    (4) instruccion_g -> declaracion PCOMA .

    LET             reduce using rule 4 (instruccion_g -> declaracion PCOMA .)
    ID              reduce using rule 4 (instruccion_g -> declaracion PCOMA .)
    PRINT           reduce using rule 4 (instruccion_g -> declaracion PCOMA .)
    IF              reduce using rule 4 (instruccion_g -> declaracion PCOMA .)
    WHILE           reduce using rule 4 (instruccion_g -> declaracion PCOMA .)
    $end            reduce using rule 4 (instruccion_g -> declaracion PCOMA .)


state 16

    (5) instruccion_g -> asignacion PCOMA .

    LET             reduce using rule 5 (instruccion_g -> asignacion PCOMA .)
    ID              reduce using rule 5 (instruccion_g -> asignacion PCOMA .)
    PRINT           reduce using rule 5 (instruccion_g -> asignacion PCOMA .)
    IF              reduce using rule 5 (instruccion_g -> asignacion PCOMA .)
    WHILE           reduce using rule 5 (instruccion_g -> asignacion PCOMA .)
    $end            reduce using rule 5 (instruccion_g -> asignacion PCOMA .)


state 17

    (6) instruccion_g -> print PCOMA .

    LET             reduce using rule 6 (instruccion_g -> print PCOMA .)
    ID              reduce using rule 6 (instruccion_g -> print PCOMA .)
    PRINT           reduce using rule 6 (instruccion_g -> print PCOMA .)
    IF              reduce using rule 6 (instruccion_g -> print PCOMA .)
    WHILE           reduce using rule 6 (instruccion_g -> print PCOMA .)
    $end            reduce using rule 6 (instruccion_g -> print PCOMA .)


state 18

    (81) declaracion -> LET asignacion_simple . IGUAL auxexp

    IGUAL           shift and go to state 68


state 19

    (82) declaracion -> LET MUT . asignacion
    (102) asignacion_simple -> MUT . ID DPUNTOS tipo_var
    (104) asignacion_simple -> MUT . ID DPUNTOS ANDSINGLE tipo_var
    (106) asignacion_simple -> MUT . ID DPUNTOS ANDSINGLE MUT tipo_var
    (84) asignacion -> . ID IGUAL auxexp
    (85) asignacion -> . ID lista_assign2 IGUAL auxexp
    (86) asignacion -> . ID lista_arr IGUAL auxexp
    (87) asignacion -> . ID lista_arr lista_assign2 IGUAL auxexp

    ID              shift and go to state 70

    asignacion                     shift and go to state 69

state 20

    (83) declaracion -> LET asignacion .

    PCOMA           reduce using rule 83 (declaracion -> LET asignacion .)


state 21

    (101) asignacion_simple -> ID . DPUNTOS tipo_var
    (103) asignacion_simple -> ID . DPUNTOS ANDSINGLE tipo_var
    (105) asignacion_simple -> ID . DPUNTOS ANDSINGLE MUT tipo_var
    (84) asignacion -> ID . IGUAL auxexp
    (85) asignacion -> ID . lista_assign2 IGUAL auxexp
    (86) asignacion -> ID . lista_arr IGUAL auxexp
    (87) asignacion -> ID . lista_arr lista_assign2 IGUAL auxexp
    (88) lista_assign2 -> . lista_assign2 PUNTO ID
    (89) lista_assign2 -> . PUNTO ID
    (97) lista_arr -> . lista_arr LCOR auxexp RCOR
    (98) lista_arr -> . LCOR auxexp RCOR

    DPUNTOS         shift and go to state 71
    IGUAL           shift and go to state 22
    PUNTO           shift and go to state 25
    LCOR            shift and go to state 26

    lista_assign2                  shift and go to state 23
    lista_arr                      shift and go to state 24

state 22

    (84) asignacion -> ID IGUAL . auxexp
    (108) auxexp -> . expstruct
    (109) auxexp -> . exp
    (143) expstruct -> . lista_classtype LLLAV lista_att RLLAV
    (144) expstruct -> . lista_classtype LLLAV RLLAV
    (145) expstruct -> . lista_classtype DPUNTOS DPUNTOS llamada
    (110) exp -> . LPAR exp RPAR
    (111) exp -> . expmath
    (112) exp -> . expop
    (113) exp -> . exprel
    (114) exp -> . exparr
    (115) exp -> . newarray
    (116) exp -> . expvec
    (117) exp -> . exparam
    (118) exp -> . exppow
    (119) exp -> . expcast
    (120) exp -> . lista_acc
    (121) exp -> . llamada
    (122) exp -> . sentencia
    (123) exp -> . valores
    (124) exp -> . exp PUNTO exp_native
    (174) lista_classtype -> . lista_classtype DPUNTOS DPUNTOS ID
    (175) lista_classtype -> . ID
    (125) expmath -> . exp MAS exp
    (126) expmath -> . exp MENOS exp
    (127) expmath -> . exp MULTIPLICACION exp
    (128) expmath -> . exp DIVISION exp
    (129) expmath -> . exp MODULO exp
    (130) expmath -> . MENOS exp
    (133) expop -> . exp AND exp
    (134) expop -> . exp OR exp
    (135) expop -> . AD exp
    (137) exprel -> . exp IGUALI exp
    (138) exprel -> . exp DIF exp
    (139) exprel -> . exp MAYOR exp
    (140) exprel -> . exp MENOR exp
    (141) exprel -> . exp MAYORI exp
    (142) exprel -> . exp MENORI exp
    (152) exparr -> . ID lista_arr
    (155) newarray -> . LCOR lista_exp RCOR
    (156) newarray -> . LCOR auxexp PCOMA exp RCOR
    (153) expvec -> . VEC AD newarray
    (154) expvec -> . VECTOR DPUNTOS DPUNTOS exp_natarr
    (148) exparam -> . MUT ID
    (149) exparam -> . MUT valores
    (150) exparam -> . ANDSINGLE MUT ID
    (151) exparam -> . ANDSINGLE MUT valores
    (131) exppow -> . I64 DPUNTOS DPUNTOS POW LPAR exp COMA exp RPAR
    (132) exppow -> . F64 DPUNTOS DPUNTOS POWF LPAR exp COMA exp RPAR
    (136) expcast -> . exp AS tipo_var
    (92) lista_acc -> . lista_acc PUNTO ID
    (93) lista_acc -> . lista_acc PUNTO exp_native
    (94) lista_acc -> . auxacc
    (176) llamada -> . ID LPAR RPAR
    (177) llamada -> . ID LPAR lista_exp RPAR
    (37) sentencia -> . if
    (38) sentencia -> . match
    (39) sentencia -> . loop
    (40) sentencia -> . while
    (41) sentencia -> . for
    (157) valores -> . ENTERO
    (158) valores -> . DECIMAL
    (159) valores -> . CADENA
    (160) valores -> . BOOLEANO
    (161) valores -> . CARACTER
    (95) auxacc -> . exparr
    (96) auxacc -> . ID
    (42) if -> . IF exp statement else
    (47) match -> . MATCH exp match_statement
    (62) loop -> . LOOP statement
    (63) while -> . WHILE exp statement
    (64) for -> . FOR ID IN foriterative statement

    LPAR            shift and go to state 29
    ID              shift and go to state 72
    MENOS           shift and go to state 43
    AD              shift and go to state 44
    LCOR            shift and go to state 46
    VEC             shift and go to state 47
    VECTOR          shift and go to state 48
    MUT             shift and go to state 49
    ANDSINGLE       shift and go to state 50
    I64             shift and go to state 51
    F64             shift and go to state 52
    ENTERO          shift and go to state 59
    DECIMAL         shift and go to state 60
    CADENA          shift and go to state 61
    BOOLEANO        shift and go to state 62
    CARACTER        shift and go to state 63
    IF              shift and go to state 12
    MATCH           shift and go to state 64
    LOOP            shift and go to state 65
    WHILE           shift and go to state 13
    FOR             shift and go to state 66

    auxexp                         shift and go to state 73
    expstruct                      shift and go to state 74
    exp                            shift and go to state 75
    lista_classtype                shift and go to state 76
    llamada                        shift and go to state 40
    expmath                        shift and go to state 30
    expop                          shift and go to state 31
    exprel                         shift and go to state 32
    exparr                         shift and go to state 33
    newarray                       shift and go to state 34
    expvec                         shift and go to state 35
    exparam                        shift and go to state 36
    exppow                         shift and go to state 37
    expcast                        shift and go to state 38
    lista_acc                      shift and go to state 39
    sentencia                      shift and go to state 41
    valores                        shift and go to state 42
    auxacc                         shift and go to state 53
    if                             shift and go to state 54
    match                          shift and go to state 55
    loop                           shift and go to state 56
    while                          shift and go to state 57
    for                            shift and go to state 58

state 23

    (85) asignacion -> ID lista_assign2 . IGUAL auxexp
    (88) lista_assign2 -> lista_assign2 . PUNTO ID

    IGUAL           shift and go to state 77
    PUNTO           shift and go to state 78


state 24

    (86) asignacion -> ID lista_arr . IGUAL auxexp
    (87) asignacion -> ID lista_arr . lista_assign2 IGUAL auxexp
    (97) lista_arr -> lista_arr . LCOR auxexp RCOR
    (88) lista_assign2 -> . lista_assign2 PUNTO ID
    (89) lista_assign2 -> . PUNTO ID

    IGUAL           shift and go to state 79
    LCOR            shift and go to state 81
    PUNTO           shift and go to state 25

    lista_assign2                  shift and go to state 80

state 25

    (89) lista_assign2 -> PUNTO . ID

    ID              shift and go to state 82


state 26

    (98) lista_arr -> LCOR . auxexp RCOR
    (108) auxexp -> . expstruct
    (109) auxexp -> . exp
    (143) expstruct -> . lista_classtype LLLAV lista_att RLLAV
    (144) expstruct -> . lista_classtype LLLAV RLLAV
    (145) expstruct -> . lista_classtype DPUNTOS DPUNTOS llamada
    (110) exp -> . LPAR exp RPAR
    (111) exp -> . expmath
    (112) exp -> . expop
    (113) exp -> . exprel
    (114) exp -> . exparr
    (115) exp -> . newarray
    (116) exp -> . expvec
    (117) exp -> . exparam
    (118) exp -> . exppow
    (119) exp -> . expcast
    (120) exp -> . lista_acc
    (121) exp -> . llamada
    (122) exp -> . sentencia
    (123) exp -> . valores
    (124) exp -> . exp PUNTO exp_native
    (174) lista_classtype -> . lista_classtype DPUNTOS DPUNTOS ID
    (175) lista_classtype -> . ID
    (125) expmath -> . exp MAS exp
    (126) expmath -> . exp MENOS exp
    (127) expmath -> . exp MULTIPLICACION exp
    (128) expmath -> . exp DIVISION exp
    (129) expmath -> . exp MODULO exp
    (130) expmath -> . MENOS exp
    (133) expop -> . exp AND exp
    (134) expop -> . exp OR exp
    (135) expop -> . AD exp
    (137) exprel -> . exp IGUALI exp
    (138) exprel -> . exp DIF exp
    (139) exprel -> . exp MAYOR exp
    (140) exprel -> . exp MENOR exp
    (141) exprel -> . exp MAYORI exp
    (142) exprel -> . exp MENORI exp
    (152) exparr -> . ID lista_arr
    (155) newarray -> . LCOR lista_exp RCOR
    (156) newarray -> . LCOR auxexp PCOMA exp RCOR
    (153) expvec -> . VEC AD newarray
    (154) expvec -> . VECTOR DPUNTOS DPUNTOS exp_natarr
    (148) exparam -> . MUT ID
    (149) exparam -> . MUT valores
    (150) exparam -> . ANDSINGLE MUT ID
    (151) exparam -> . ANDSINGLE MUT valores
    (131) exppow -> . I64 DPUNTOS DPUNTOS POW LPAR exp COMA exp RPAR
    (132) exppow -> . F64 DPUNTOS DPUNTOS POWF LPAR exp COMA exp RPAR
    (136) expcast -> . exp AS tipo_var
    (92) lista_acc -> . lista_acc PUNTO ID
    (93) lista_acc -> . lista_acc PUNTO exp_native
    (94) lista_acc -> . auxacc
    (176) llamada -> . ID LPAR RPAR
    (177) llamada -> . ID LPAR lista_exp RPAR
    (37) sentencia -> . if
    (38) sentencia -> . match
    (39) sentencia -> . loop
    (40) sentencia -> . while
    (41) sentencia -> . for
    (157) valores -> . ENTERO
    (158) valores -> . DECIMAL
    (159) valores -> . CADENA
    (160) valores -> . BOOLEANO
    (161) valores -> . CARACTER
    (95) auxacc -> . exparr
    (96) auxacc -> . ID
    (42) if -> . IF exp statement else
    (47) match -> . MATCH exp match_statement
    (62) loop -> . LOOP statement
    (63) while -> . WHILE exp statement
    (64) for -> . FOR ID IN foriterative statement

    LPAR            shift and go to state 29
    ID              shift and go to state 72
    MENOS           shift and go to state 43
    AD              shift and go to state 44
    LCOR            shift and go to state 46
    VEC             shift and go to state 47
    VECTOR          shift and go to state 48
    MUT             shift and go to state 49
    ANDSINGLE       shift and go to state 50
    I64             shift and go to state 51
    F64             shift and go to state 52
    ENTERO          shift and go to state 59
    DECIMAL         shift and go to state 60
    CADENA          shift and go to state 61
    BOOLEANO        shift and go to state 62
    CARACTER        shift and go to state 63
    IF              shift and go to state 12
    MATCH           shift and go to state 64
    LOOP            shift and go to state 65
    WHILE           shift and go to state 13
    FOR             shift and go to state 66

    auxexp                         shift and go to state 83
    expstruct                      shift and go to state 74
    exp                            shift and go to state 75
    lista_classtype                shift and go to state 76
    llamada                        shift and go to state 40
    expmath                        shift and go to state 30
    expop                          shift and go to state 31
    exprel                         shift and go to state 32
    exparr                         shift and go to state 33
    newarray                       shift and go to state 34
    expvec                         shift and go to state 35
    exparam                        shift and go to state 36
    exppow                         shift and go to state 37
    expcast                        shift and go to state 38
    lista_acc                      shift and go to state 39
    sentencia                      shift and go to state 41
    valores                        shift and go to state 42
    auxacc                         shift and go to state 53
    if                             shift and go to state 54
    match                          shift and go to state 55
    loop                           shift and go to state 56
    while                          shift and go to state 57
    for                            shift and go to state 58

state 27

    (192) print -> PRINT AD . LPAR lista_exp RPAR

    LPAR            shift and go to state 84


state 28

    (42) if -> IF exp . statement else
    (124) exp -> exp . PUNTO exp_native
    (125) expmath -> exp . MAS exp
    (126) expmath -> exp . MENOS exp
    (127) expmath -> exp . MULTIPLICACION exp
    (128) expmath -> exp . DIVISION exp
    (129) expmath -> exp . MODULO exp
    (133) expop -> exp . AND exp
    (134) expop -> exp . OR exp
    (137) exprel -> exp . IGUALI exp
    (138) exprel -> exp . DIF exp
    (139) exprel -> exp . MAYOR exp
    (140) exprel -> exp . MENOR exp
    (141) exprel -> exp . MAYORI exp
    (142) exprel -> exp . MENORI exp
    (136) expcast -> exp . AS tipo_var
    (73) statement -> . LLLAV instrucciones_l RLLAV
    (74) statement -> . LLLAV RLLAV

    PUNTO           shift and go to state 86
    MAS             shift and go to state 87
    MENOS           shift and go to state 88
    MULTIPLICACION  shift and go to state 89
    DIVISION        shift and go to state 90
    MODULO          shift and go to state 91
    AND             shift and go to state 92
    OR              shift and go to state 93
    IGUALI          shift and go to state 94
    DIF             shift and go to state 95
    MAYOR           shift and go to state 96
    MENOR           shift and go to state 97
    MAYORI          shift and go to state 98
    MENORI          shift and go to state 99
    AS              shift and go to state 100
    LLLAV           shift and go to state 101

    statement                      shift and go to state 85

state 29

    (110) exp -> LPAR . exp RPAR
    (110) exp -> . LPAR exp RPAR
    (111) exp -> . expmath
    (112) exp -> . expop
    (113) exp -> . exprel
    (114) exp -> . exparr
    (115) exp -> . newarray
    (116) exp -> . expvec
    (117) exp -> . exparam
    (118) exp -> . exppow
    (119) exp -> . expcast
    (120) exp -> . lista_acc
    (121) exp -> . llamada
    (122) exp -> . sentencia
    (123) exp -> . valores
    (124) exp -> . exp PUNTO exp_native
    (125) expmath -> . exp MAS exp
    (126) expmath -> . exp MENOS exp
    (127) expmath -> . exp MULTIPLICACION exp
    (128) expmath -> . exp DIVISION exp
    (129) expmath -> . exp MODULO exp
    (130) expmath -> . MENOS exp
    (133) expop -> . exp AND exp
    (134) expop -> . exp OR exp
    (135) expop -> . AD exp
    (137) exprel -> . exp IGUALI exp
    (138) exprel -> . exp DIF exp
    (139) exprel -> . exp MAYOR exp
    (140) exprel -> . exp MENOR exp
    (141) exprel -> . exp MAYORI exp
    (142) exprel -> . exp MENORI exp
    (152) exparr -> . ID lista_arr
    (155) newarray -> . LCOR lista_exp RCOR
    (156) newarray -> . LCOR auxexp PCOMA exp RCOR
    (153) expvec -> . VEC AD newarray
    (154) expvec -> . VECTOR DPUNTOS DPUNTOS exp_natarr
    (148) exparam -> . MUT ID
    (149) exparam -> . MUT valores
    (150) exparam -> . ANDSINGLE MUT ID
    (151) exparam -> . ANDSINGLE MUT valores
    (131) exppow -> . I64 DPUNTOS DPUNTOS POW LPAR exp COMA exp RPAR
    (132) exppow -> . F64 DPUNTOS DPUNTOS POWF LPAR exp COMA exp RPAR
    (136) expcast -> . exp AS tipo_var
    (92) lista_acc -> . lista_acc PUNTO ID
    (93) lista_acc -> . lista_acc PUNTO exp_native
    (94) lista_acc -> . auxacc
    (176) llamada -> . ID LPAR RPAR
    (177) llamada -> . ID LPAR lista_exp RPAR
    (37) sentencia -> . if
    (38) sentencia -> . match
    (39) sentencia -> . loop
    (40) sentencia -> . while
    (41) sentencia -> . for
    (157) valores -> . ENTERO
    (158) valores -> . DECIMAL
    (159) valores -> . CADENA
    (160) valores -> . BOOLEANO
    (161) valores -> . CARACTER
    (95) auxacc -> . exparr
    (96) auxacc -> . ID
    (42) if -> . IF exp statement else
    (47) match -> . MATCH exp match_statement
    (62) loop -> . LOOP statement
    (63) while -> . WHILE exp statement
    (64) for -> . FOR ID IN foriterative statement

    LPAR            shift and go to state 29
    MENOS           shift and go to state 43
    AD              shift and go to state 44
    ID              shift and go to state 45
    LCOR            shift and go to state 46
    VEC             shift and go to state 47
    VECTOR          shift and go to state 48
    MUT             shift and go to state 49
    ANDSINGLE       shift and go to state 50
    I64             shift and go to state 51
    F64             shift and go to state 52
    ENTERO          shift and go to state 59
    DECIMAL         shift and go to state 60
    CADENA          shift and go to state 61
    BOOLEANO        shift and go to state 62
    CARACTER        shift and go to state 63
    IF              shift and go to state 12
    MATCH           shift and go to state 64
    LOOP            shift and go to state 65
    WHILE           shift and go to state 13
    FOR             shift and go to state 66

    exp                            shift and go to state 102
    expmath                        shift and go to state 30
    expop                          shift and go to state 31
    exprel                         shift and go to state 32
    exparr                         shift and go to state 33
    newarray                       shift and go to state 34
    expvec                         shift and go to state 35
    exparam                        shift and go to state 36
    exppow                         shift and go to state 37
    expcast                        shift and go to state 38
    lista_acc                      shift and go to state 39
    llamada                        shift and go to state 40
    sentencia                      shift and go to state 41
    valores                        shift and go to state 42
    auxacc                         shift and go to state 53
    if                             shift and go to state 54
    match                          shift and go to state 55
    loop                           shift and go to state 56
    while                          shift and go to state 57
    for                            shift and go to state 58

state 30

    (111) exp -> expmath .

    PUNTO           reduce using rule 111 (exp -> expmath .)
    MAS             reduce using rule 111 (exp -> expmath .)
    MENOS           reduce using rule 111 (exp -> expmath .)
    MULTIPLICACION  reduce using rule 111 (exp -> expmath .)
    DIVISION        reduce using rule 111 (exp -> expmath .)
    MODULO          reduce using rule 111 (exp -> expmath .)
    AND             reduce using rule 111 (exp -> expmath .)
    OR              reduce using rule 111 (exp -> expmath .)
    IGUALI          reduce using rule 111 (exp -> expmath .)
    DIF             reduce using rule 111 (exp -> expmath .)
    MAYOR           reduce using rule 111 (exp -> expmath .)
    MENOR           reduce using rule 111 (exp -> expmath .)
    MAYORI          reduce using rule 111 (exp -> expmath .)
    MENORI          reduce using rule 111 (exp -> expmath .)
    AS              reduce using rule 111 (exp -> expmath .)
    LLLAV           reduce using rule 111 (exp -> expmath .)
    PCOMA           reduce using rule 111 (exp -> expmath .)
    COMA            reduce using rule 111 (exp -> expmath .)
    RCOR            reduce using rule 111 (exp -> expmath .)
    RPAR            reduce using rule 111 (exp -> expmath .)
    RLLAV           reduce using rule 111 (exp -> expmath .)
    ID              reduce using rule 111 (exp -> expmath .)
    PRINT           reduce using rule 111 (exp -> expmath .)
    LET             reduce using rule 111 (exp -> expmath .)
    CONTINUE        reduce using rule 111 (exp -> expmath .)
    BREAK           reduce using rule 111 (exp -> expmath .)
    RETURN          reduce using rule 111 (exp -> expmath .)
    IF              reduce using rule 111 (exp -> expmath .)
    MATCH           reduce using rule 111 (exp -> expmath .)
    LOOP            reduce using rule 111 (exp -> expmath .)
    WHILE           reduce using rule 111 (exp -> expmath .)
    FOR             reduce using rule 111 (exp -> expmath .)
    LPAR            reduce using rule 111 (exp -> expmath .)
    AD              reduce using rule 111 (exp -> expmath .)
    LCOR            reduce using rule 111 (exp -> expmath .)
    VEC             reduce using rule 111 (exp -> expmath .)
    VECTOR          reduce using rule 111 (exp -> expmath .)
    MUT             reduce using rule 111 (exp -> expmath .)
    ANDSINGLE       reduce using rule 111 (exp -> expmath .)
    I64             reduce using rule 111 (exp -> expmath .)
    F64             reduce using rule 111 (exp -> expmath .)
    ENTERO          reduce using rule 111 (exp -> expmath .)
    DECIMAL         reduce using rule 111 (exp -> expmath .)
    CADENA          reduce using rule 111 (exp -> expmath .)
    BOOLEANO        reduce using rule 111 (exp -> expmath .)
    CARACTER        reduce using rule 111 (exp -> expmath .)
    ARROW2          reduce using rule 111 (exp -> expmath .)
    ORSINGLE        reduce using rule 111 (exp -> expmath .)


state 31

    (112) exp -> expop .

    PUNTO           reduce using rule 112 (exp -> expop .)
    MAS             reduce using rule 112 (exp -> expop .)
    MENOS           reduce using rule 112 (exp -> expop .)
    MULTIPLICACION  reduce using rule 112 (exp -> expop .)
    DIVISION        reduce using rule 112 (exp -> expop .)
    MODULO          reduce using rule 112 (exp -> expop .)
    AND             reduce using rule 112 (exp -> expop .)
    OR              reduce using rule 112 (exp -> expop .)
    IGUALI          reduce using rule 112 (exp -> expop .)
    DIF             reduce using rule 112 (exp -> expop .)
    MAYOR           reduce using rule 112 (exp -> expop .)
    MENOR           reduce using rule 112 (exp -> expop .)
    MAYORI          reduce using rule 112 (exp -> expop .)
    MENORI          reduce using rule 112 (exp -> expop .)
    AS              reduce using rule 112 (exp -> expop .)
    LLLAV           reduce using rule 112 (exp -> expop .)
    PCOMA           reduce using rule 112 (exp -> expop .)
    COMA            reduce using rule 112 (exp -> expop .)
    RCOR            reduce using rule 112 (exp -> expop .)
    RPAR            reduce using rule 112 (exp -> expop .)
    RLLAV           reduce using rule 112 (exp -> expop .)
    ID              reduce using rule 112 (exp -> expop .)
    PRINT           reduce using rule 112 (exp -> expop .)
    LET             reduce using rule 112 (exp -> expop .)
    CONTINUE        reduce using rule 112 (exp -> expop .)
    BREAK           reduce using rule 112 (exp -> expop .)
    RETURN          reduce using rule 112 (exp -> expop .)
    IF              reduce using rule 112 (exp -> expop .)
    MATCH           reduce using rule 112 (exp -> expop .)
    LOOP            reduce using rule 112 (exp -> expop .)
    WHILE           reduce using rule 112 (exp -> expop .)
    FOR             reduce using rule 112 (exp -> expop .)
    LPAR            reduce using rule 112 (exp -> expop .)
    AD              reduce using rule 112 (exp -> expop .)
    LCOR            reduce using rule 112 (exp -> expop .)
    VEC             reduce using rule 112 (exp -> expop .)
    VECTOR          reduce using rule 112 (exp -> expop .)
    MUT             reduce using rule 112 (exp -> expop .)
    ANDSINGLE       reduce using rule 112 (exp -> expop .)
    I64             reduce using rule 112 (exp -> expop .)
    F64             reduce using rule 112 (exp -> expop .)
    ENTERO          reduce using rule 112 (exp -> expop .)
    DECIMAL         reduce using rule 112 (exp -> expop .)
    CADENA          reduce using rule 112 (exp -> expop .)
    BOOLEANO        reduce using rule 112 (exp -> expop .)
    CARACTER        reduce using rule 112 (exp -> expop .)
    ARROW2          reduce using rule 112 (exp -> expop .)
    ORSINGLE        reduce using rule 112 (exp -> expop .)


state 32

    (113) exp -> exprel .

    PUNTO           reduce using rule 113 (exp -> exprel .)
    MAS             reduce using rule 113 (exp -> exprel .)
    MENOS           reduce using rule 113 (exp -> exprel .)
    MULTIPLICACION  reduce using rule 113 (exp -> exprel .)
    DIVISION        reduce using rule 113 (exp -> exprel .)
    MODULO          reduce using rule 113 (exp -> exprel .)
    AND             reduce using rule 113 (exp -> exprel .)
    OR              reduce using rule 113 (exp -> exprel .)
    IGUALI          reduce using rule 113 (exp -> exprel .)
    DIF             reduce using rule 113 (exp -> exprel .)
    MAYOR           reduce using rule 113 (exp -> exprel .)
    MENOR           reduce using rule 113 (exp -> exprel .)
    MAYORI          reduce using rule 113 (exp -> exprel .)
    MENORI          reduce using rule 113 (exp -> exprel .)
    AS              reduce using rule 113 (exp -> exprel .)
    LLLAV           reduce using rule 113 (exp -> exprel .)
    PCOMA           reduce using rule 113 (exp -> exprel .)
    COMA            reduce using rule 113 (exp -> exprel .)
    RCOR            reduce using rule 113 (exp -> exprel .)
    RPAR            reduce using rule 113 (exp -> exprel .)
    RLLAV           reduce using rule 113 (exp -> exprel .)
    ID              reduce using rule 113 (exp -> exprel .)
    PRINT           reduce using rule 113 (exp -> exprel .)
    LET             reduce using rule 113 (exp -> exprel .)
    CONTINUE        reduce using rule 113 (exp -> exprel .)
    BREAK           reduce using rule 113 (exp -> exprel .)
    RETURN          reduce using rule 113 (exp -> exprel .)
    IF              reduce using rule 113 (exp -> exprel .)
    MATCH           reduce using rule 113 (exp -> exprel .)
    LOOP            reduce using rule 113 (exp -> exprel .)
    WHILE           reduce using rule 113 (exp -> exprel .)
    FOR             reduce using rule 113 (exp -> exprel .)
    LPAR            reduce using rule 113 (exp -> exprel .)
    AD              reduce using rule 113 (exp -> exprel .)
    LCOR            reduce using rule 113 (exp -> exprel .)
    VEC             reduce using rule 113 (exp -> exprel .)
    VECTOR          reduce using rule 113 (exp -> exprel .)
    MUT             reduce using rule 113 (exp -> exprel .)
    ANDSINGLE       reduce using rule 113 (exp -> exprel .)
    I64             reduce using rule 113 (exp -> exprel .)
    F64             reduce using rule 113 (exp -> exprel .)
    ENTERO          reduce using rule 113 (exp -> exprel .)
    DECIMAL         reduce using rule 113 (exp -> exprel .)
    CADENA          reduce using rule 113 (exp -> exprel .)
    BOOLEANO        reduce using rule 113 (exp -> exprel .)
    CARACTER        reduce using rule 113 (exp -> exprel .)
    ARROW2          reduce using rule 113 (exp -> exprel .)
    ORSINGLE        reduce using rule 113 (exp -> exprel .)


state 33

    (114) exp -> exparr .
    (95) auxacc -> exparr .

  ! reduce/reduce conflict for PUNTO resolved using rule 95 (auxacc -> exparr .)
  ! reduce/reduce conflict for MAS resolved using rule 95 (auxacc -> exparr .)
  ! reduce/reduce conflict for MENOS resolved using rule 95 (auxacc -> exparr .)
  ! reduce/reduce conflict for MULTIPLICACION resolved using rule 95 (auxacc -> exparr .)
  ! reduce/reduce conflict for DIVISION resolved using rule 95 (auxacc -> exparr .)
  ! reduce/reduce conflict for MODULO resolved using rule 95 (auxacc -> exparr .)
  ! reduce/reduce conflict for AND resolved using rule 95 (auxacc -> exparr .)
  ! reduce/reduce conflict for OR resolved using rule 95 (auxacc -> exparr .)
  ! reduce/reduce conflict for IGUALI resolved using rule 95 (auxacc -> exparr .)
  ! reduce/reduce conflict for DIF resolved using rule 95 (auxacc -> exparr .)
  ! reduce/reduce conflict for MAYOR resolved using rule 95 (auxacc -> exparr .)
  ! reduce/reduce conflict for MENOR resolved using rule 95 (auxacc -> exparr .)
  ! reduce/reduce conflict for MAYORI resolved using rule 95 (auxacc -> exparr .)
  ! reduce/reduce conflict for MENORI resolved using rule 95 (auxacc -> exparr .)
  ! reduce/reduce conflict for AS resolved using rule 95 (auxacc -> exparr .)
  ! reduce/reduce conflict for LLLAV resolved using rule 95 (auxacc -> exparr .)
  ! reduce/reduce conflict for PCOMA resolved using rule 95 (auxacc -> exparr .)
  ! reduce/reduce conflict for COMA resolved using rule 95 (auxacc -> exparr .)
  ! reduce/reduce conflict for RCOR resolved using rule 95 (auxacc -> exparr .)
  ! reduce/reduce conflict for RPAR resolved using rule 95 (auxacc -> exparr .)
  ! reduce/reduce conflict for RLLAV resolved using rule 95 (auxacc -> exparr .)
  ! reduce/reduce conflict for ID resolved using rule 95 (auxacc -> exparr .)
  ! reduce/reduce conflict for PRINT resolved using rule 95 (auxacc -> exparr .)
  ! reduce/reduce conflict for LET resolved using rule 95 (auxacc -> exparr .)
  ! reduce/reduce conflict for CONTINUE resolved using rule 95 (auxacc -> exparr .)
  ! reduce/reduce conflict for BREAK resolved using rule 95 (auxacc -> exparr .)
  ! reduce/reduce conflict for RETURN resolved using rule 95 (auxacc -> exparr .)
  ! reduce/reduce conflict for IF resolved using rule 95 (auxacc -> exparr .)
  ! reduce/reduce conflict for MATCH resolved using rule 95 (auxacc -> exparr .)
  ! reduce/reduce conflict for LOOP resolved using rule 95 (auxacc -> exparr .)
  ! reduce/reduce conflict for WHILE resolved using rule 95 (auxacc -> exparr .)
  ! reduce/reduce conflict for FOR resolved using rule 95 (auxacc -> exparr .)
  ! reduce/reduce conflict for LPAR resolved using rule 95 (auxacc -> exparr .)
  ! reduce/reduce conflict for AD resolved using rule 95 (auxacc -> exparr .)
  ! reduce/reduce conflict for LCOR resolved using rule 95 (auxacc -> exparr .)
  ! reduce/reduce conflict for VEC resolved using rule 95 (auxacc -> exparr .)
  ! reduce/reduce conflict for VECTOR resolved using rule 95 (auxacc -> exparr .)
  ! reduce/reduce conflict for MUT resolved using rule 95 (auxacc -> exparr .)
  ! reduce/reduce conflict for ANDSINGLE resolved using rule 95 (auxacc -> exparr .)
  ! reduce/reduce conflict for I64 resolved using rule 95 (auxacc -> exparr .)
  ! reduce/reduce conflict for F64 resolved using rule 95 (auxacc -> exparr .)
  ! reduce/reduce conflict for ENTERO resolved using rule 95 (auxacc -> exparr .)
  ! reduce/reduce conflict for DECIMAL resolved using rule 95 (auxacc -> exparr .)
  ! reduce/reduce conflict for CADENA resolved using rule 95 (auxacc -> exparr .)
  ! reduce/reduce conflict for BOOLEANO resolved using rule 95 (auxacc -> exparr .)
  ! reduce/reduce conflict for CARACTER resolved using rule 95 (auxacc -> exparr .)
  ! reduce/reduce conflict for ARROW2 resolved using rule 95 (auxacc -> exparr .)
  ! reduce/reduce conflict for ORSINGLE resolved using rule 95 (auxacc -> exparr .)
    PUNTO           reduce using rule 95 (auxacc -> exparr .)
    MAS             reduce using rule 95 (auxacc -> exparr .)
    MENOS           reduce using rule 95 (auxacc -> exparr .)
    MULTIPLICACION  reduce using rule 95 (auxacc -> exparr .)
    DIVISION        reduce using rule 95 (auxacc -> exparr .)
    MODULO          reduce using rule 95 (auxacc -> exparr .)
    AND             reduce using rule 95 (auxacc -> exparr .)
    OR              reduce using rule 95 (auxacc -> exparr .)
    IGUALI          reduce using rule 95 (auxacc -> exparr .)
    DIF             reduce using rule 95 (auxacc -> exparr .)
    MAYOR           reduce using rule 95 (auxacc -> exparr .)
    MENOR           reduce using rule 95 (auxacc -> exparr .)
    MAYORI          reduce using rule 95 (auxacc -> exparr .)
    MENORI          reduce using rule 95 (auxacc -> exparr .)
    AS              reduce using rule 95 (auxacc -> exparr .)
    LLLAV           reduce using rule 95 (auxacc -> exparr .)
    PCOMA           reduce using rule 95 (auxacc -> exparr .)
    COMA            reduce using rule 95 (auxacc -> exparr .)
    RCOR            reduce using rule 95 (auxacc -> exparr .)
    RPAR            reduce using rule 95 (auxacc -> exparr .)
    RLLAV           reduce using rule 95 (auxacc -> exparr .)
    ID              reduce using rule 95 (auxacc -> exparr .)
    PRINT           reduce using rule 95 (auxacc -> exparr .)
    LET             reduce using rule 95 (auxacc -> exparr .)
    CONTINUE        reduce using rule 95 (auxacc -> exparr .)
    BREAK           reduce using rule 95 (auxacc -> exparr .)
    RETURN          reduce using rule 95 (auxacc -> exparr .)
    IF              reduce using rule 95 (auxacc -> exparr .)
    MATCH           reduce using rule 95 (auxacc -> exparr .)
    LOOP            reduce using rule 95 (auxacc -> exparr .)
    WHILE           reduce using rule 95 (auxacc -> exparr .)
    FOR             reduce using rule 95 (auxacc -> exparr .)
    LPAR            reduce using rule 95 (auxacc -> exparr .)
    AD              reduce using rule 95 (auxacc -> exparr .)
    LCOR            reduce using rule 95 (auxacc -> exparr .)
    VEC             reduce using rule 95 (auxacc -> exparr .)
    VECTOR          reduce using rule 95 (auxacc -> exparr .)
    MUT             reduce using rule 95 (auxacc -> exparr .)
    ANDSINGLE       reduce using rule 95 (auxacc -> exparr .)
    I64             reduce using rule 95 (auxacc -> exparr .)
    F64             reduce using rule 95 (auxacc -> exparr .)
    ENTERO          reduce using rule 95 (auxacc -> exparr .)
    DECIMAL         reduce using rule 95 (auxacc -> exparr .)
    CADENA          reduce using rule 95 (auxacc -> exparr .)
    BOOLEANO        reduce using rule 95 (auxacc -> exparr .)
    CARACTER        reduce using rule 95 (auxacc -> exparr .)
    ARROW2          reduce using rule 95 (auxacc -> exparr .)
    ORSINGLE        reduce using rule 95 (auxacc -> exparr .)

  ! PUNTO           [ reduce using rule 114 (exp -> exparr .) ]
  ! MAS             [ reduce using rule 114 (exp -> exparr .) ]
  ! MENOS           [ reduce using rule 114 (exp -> exparr .) ]
  ! MULTIPLICACION  [ reduce using rule 114 (exp -> exparr .) ]
  ! DIVISION        [ reduce using rule 114 (exp -> exparr .) ]
  ! MODULO          [ reduce using rule 114 (exp -> exparr .) ]
  ! AND             [ reduce using rule 114 (exp -> exparr .) ]
  ! OR              [ reduce using rule 114 (exp -> exparr .) ]
  ! IGUALI          [ reduce using rule 114 (exp -> exparr .) ]
  ! DIF             [ reduce using rule 114 (exp -> exparr .) ]
  ! MAYOR           [ reduce using rule 114 (exp -> exparr .) ]
  ! MENOR           [ reduce using rule 114 (exp -> exparr .) ]
  ! MAYORI          [ reduce using rule 114 (exp -> exparr .) ]
  ! MENORI          [ reduce using rule 114 (exp -> exparr .) ]
  ! AS              [ reduce using rule 114 (exp -> exparr .) ]
  ! LLLAV           [ reduce using rule 114 (exp -> exparr .) ]
  ! PCOMA           [ reduce using rule 114 (exp -> exparr .) ]
  ! COMA            [ reduce using rule 114 (exp -> exparr .) ]
  ! RCOR            [ reduce using rule 114 (exp -> exparr .) ]
  ! RPAR            [ reduce using rule 114 (exp -> exparr .) ]
  ! RLLAV           [ reduce using rule 114 (exp -> exparr .) ]
  ! ID              [ reduce using rule 114 (exp -> exparr .) ]
  ! PRINT           [ reduce using rule 114 (exp -> exparr .) ]
  ! LET             [ reduce using rule 114 (exp -> exparr .) ]
  ! CONTINUE        [ reduce using rule 114 (exp -> exparr .) ]
  ! BREAK           [ reduce using rule 114 (exp -> exparr .) ]
  ! RETURN          [ reduce using rule 114 (exp -> exparr .) ]
  ! IF              [ reduce using rule 114 (exp -> exparr .) ]
  ! MATCH           [ reduce using rule 114 (exp -> exparr .) ]
  ! LOOP            [ reduce using rule 114 (exp -> exparr .) ]
  ! WHILE           [ reduce using rule 114 (exp -> exparr .) ]
  ! FOR             [ reduce using rule 114 (exp -> exparr .) ]
  ! LPAR            [ reduce using rule 114 (exp -> exparr .) ]
  ! AD              [ reduce using rule 114 (exp -> exparr .) ]
  ! LCOR            [ reduce using rule 114 (exp -> exparr .) ]
  ! VEC             [ reduce using rule 114 (exp -> exparr .) ]
  ! VECTOR          [ reduce using rule 114 (exp -> exparr .) ]
  ! MUT             [ reduce using rule 114 (exp -> exparr .) ]
  ! ANDSINGLE       [ reduce using rule 114 (exp -> exparr .) ]
  ! I64             [ reduce using rule 114 (exp -> exparr .) ]
  ! F64             [ reduce using rule 114 (exp -> exparr .) ]
  ! ENTERO          [ reduce using rule 114 (exp -> exparr .) ]
  ! DECIMAL         [ reduce using rule 114 (exp -> exparr .) ]
  ! CADENA          [ reduce using rule 114 (exp -> exparr .) ]
  ! BOOLEANO        [ reduce using rule 114 (exp -> exparr .) ]
  ! CARACTER        [ reduce using rule 114 (exp -> exparr .) ]
  ! ARROW2          [ reduce using rule 114 (exp -> exparr .) ]
  ! ORSINGLE        [ reduce using rule 114 (exp -> exparr .) ]


state 34

    (115) exp -> newarray .

    PUNTO           reduce using rule 115 (exp -> newarray .)
    MAS             reduce using rule 115 (exp -> newarray .)
    MENOS           reduce using rule 115 (exp -> newarray .)
    MULTIPLICACION  reduce using rule 115 (exp -> newarray .)
    DIVISION        reduce using rule 115 (exp -> newarray .)
    MODULO          reduce using rule 115 (exp -> newarray .)
    AND             reduce using rule 115 (exp -> newarray .)
    OR              reduce using rule 115 (exp -> newarray .)
    IGUALI          reduce using rule 115 (exp -> newarray .)
    DIF             reduce using rule 115 (exp -> newarray .)
    MAYOR           reduce using rule 115 (exp -> newarray .)
    MENOR           reduce using rule 115 (exp -> newarray .)
    MAYORI          reduce using rule 115 (exp -> newarray .)
    MENORI          reduce using rule 115 (exp -> newarray .)
    AS              reduce using rule 115 (exp -> newarray .)
    LLLAV           reduce using rule 115 (exp -> newarray .)
    PCOMA           reduce using rule 115 (exp -> newarray .)
    COMA            reduce using rule 115 (exp -> newarray .)
    RCOR            reduce using rule 115 (exp -> newarray .)
    RPAR            reduce using rule 115 (exp -> newarray .)
    RLLAV           reduce using rule 115 (exp -> newarray .)
    ID              reduce using rule 115 (exp -> newarray .)
    PRINT           reduce using rule 115 (exp -> newarray .)
    LET             reduce using rule 115 (exp -> newarray .)
    CONTINUE        reduce using rule 115 (exp -> newarray .)
    BREAK           reduce using rule 115 (exp -> newarray .)
    RETURN          reduce using rule 115 (exp -> newarray .)
    IF              reduce using rule 115 (exp -> newarray .)
    MATCH           reduce using rule 115 (exp -> newarray .)
    LOOP            reduce using rule 115 (exp -> newarray .)
    WHILE           reduce using rule 115 (exp -> newarray .)
    FOR             reduce using rule 115 (exp -> newarray .)
    LPAR            reduce using rule 115 (exp -> newarray .)
    AD              reduce using rule 115 (exp -> newarray .)
    LCOR            reduce using rule 115 (exp -> newarray .)
    VEC             reduce using rule 115 (exp -> newarray .)
    VECTOR          reduce using rule 115 (exp -> newarray .)
    MUT             reduce using rule 115 (exp -> newarray .)
    ANDSINGLE       reduce using rule 115 (exp -> newarray .)
    I64             reduce using rule 115 (exp -> newarray .)
    F64             reduce using rule 115 (exp -> newarray .)
    ENTERO          reduce using rule 115 (exp -> newarray .)
    DECIMAL         reduce using rule 115 (exp -> newarray .)
    CADENA          reduce using rule 115 (exp -> newarray .)
    BOOLEANO        reduce using rule 115 (exp -> newarray .)
    CARACTER        reduce using rule 115 (exp -> newarray .)
    ARROW2          reduce using rule 115 (exp -> newarray .)
    ORSINGLE        reduce using rule 115 (exp -> newarray .)


state 35

    (116) exp -> expvec .

    PUNTO           reduce using rule 116 (exp -> expvec .)
    MAS             reduce using rule 116 (exp -> expvec .)
    MENOS           reduce using rule 116 (exp -> expvec .)
    MULTIPLICACION  reduce using rule 116 (exp -> expvec .)
    DIVISION        reduce using rule 116 (exp -> expvec .)
    MODULO          reduce using rule 116 (exp -> expvec .)
    AND             reduce using rule 116 (exp -> expvec .)
    OR              reduce using rule 116 (exp -> expvec .)
    IGUALI          reduce using rule 116 (exp -> expvec .)
    DIF             reduce using rule 116 (exp -> expvec .)
    MAYOR           reduce using rule 116 (exp -> expvec .)
    MENOR           reduce using rule 116 (exp -> expvec .)
    MAYORI          reduce using rule 116 (exp -> expvec .)
    MENORI          reduce using rule 116 (exp -> expvec .)
    AS              reduce using rule 116 (exp -> expvec .)
    LLLAV           reduce using rule 116 (exp -> expvec .)
    PCOMA           reduce using rule 116 (exp -> expvec .)
    COMA            reduce using rule 116 (exp -> expvec .)
    RCOR            reduce using rule 116 (exp -> expvec .)
    RPAR            reduce using rule 116 (exp -> expvec .)
    RLLAV           reduce using rule 116 (exp -> expvec .)
    ID              reduce using rule 116 (exp -> expvec .)
    PRINT           reduce using rule 116 (exp -> expvec .)
    LET             reduce using rule 116 (exp -> expvec .)
    CONTINUE        reduce using rule 116 (exp -> expvec .)
    BREAK           reduce using rule 116 (exp -> expvec .)
    RETURN          reduce using rule 116 (exp -> expvec .)
    IF              reduce using rule 116 (exp -> expvec .)
    MATCH           reduce using rule 116 (exp -> expvec .)
    LOOP            reduce using rule 116 (exp -> expvec .)
    WHILE           reduce using rule 116 (exp -> expvec .)
    FOR             reduce using rule 116 (exp -> expvec .)
    LPAR            reduce using rule 116 (exp -> expvec .)
    AD              reduce using rule 116 (exp -> expvec .)
    LCOR            reduce using rule 116 (exp -> expvec .)
    VEC             reduce using rule 116 (exp -> expvec .)
    VECTOR          reduce using rule 116 (exp -> expvec .)
    MUT             reduce using rule 116 (exp -> expvec .)
    ANDSINGLE       reduce using rule 116 (exp -> expvec .)
    I64             reduce using rule 116 (exp -> expvec .)
    F64             reduce using rule 116 (exp -> expvec .)
    ENTERO          reduce using rule 116 (exp -> expvec .)
    DECIMAL         reduce using rule 116 (exp -> expvec .)
    CADENA          reduce using rule 116 (exp -> expvec .)
    BOOLEANO        reduce using rule 116 (exp -> expvec .)
    CARACTER        reduce using rule 116 (exp -> expvec .)
    ARROW2          reduce using rule 116 (exp -> expvec .)
    ORSINGLE        reduce using rule 116 (exp -> expvec .)


state 36

    (117) exp -> exparam .

    PUNTO           reduce using rule 117 (exp -> exparam .)
    MAS             reduce using rule 117 (exp -> exparam .)
    MENOS           reduce using rule 117 (exp -> exparam .)
    MULTIPLICACION  reduce using rule 117 (exp -> exparam .)
    DIVISION        reduce using rule 117 (exp -> exparam .)
    MODULO          reduce using rule 117 (exp -> exparam .)
    AND             reduce using rule 117 (exp -> exparam .)
    OR              reduce using rule 117 (exp -> exparam .)
    IGUALI          reduce using rule 117 (exp -> exparam .)
    DIF             reduce using rule 117 (exp -> exparam .)
    MAYOR           reduce using rule 117 (exp -> exparam .)
    MENOR           reduce using rule 117 (exp -> exparam .)
    MAYORI          reduce using rule 117 (exp -> exparam .)
    MENORI          reduce using rule 117 (exp -> exparam .)
    AS              reduce using rule 117 (exp -> exparam .)
    LLLAV           reduce using rule 117 (exp -> exparam .)
    PCOMA           reduce using rule 117 (exp -> exparam .)
    COMA            reduce using rule 117 (exp -> exparam .)
    RCOR            reduce using rule 117 (exp -> exparam .)
    RPAR            reduce using rule 117 (exp -> exparam .)
    RLLAV           reduce using rule 117 (exp -> exparam .)
    ID              reduce using rule 117 (exp -> exparam .)
    PRINT           reduce using rule 117 (exp -> exparam .)
    LET             reduce using rule 117 (exp -> exparam .)
    CONTINUE        reduce using rule 117 (exp -> exparam .)
    BREAK           reduce using rule 117 (exp -> exparam .)
    RETURN          reduce using rule 117 (exp -> exparam .)
    IF              reduce using rule 117 (exp -> exparam .)
    MATCH           reduce using rule 117 (exp -> exparam .)
    LOOP            reduce using rule 117 (exp -> exparam .)
    WHILE           reduce using rule 117 (exp -> exparam .)
    FOR             reduce using rule 117 (exp -> exparam .)
    LPAR            reduce using rule 117 (exp -> exparam .)
    AD              reduce using rule 117 (exp -> exparam .)
    LCOR            reduce using rule 117 (exp -> exparam .)
    VEC             reduce using rule 117 (exp -> exparam .)
    VECTOR          reduce using rule 117 (exp -> exparam .)
    MUT             reduce using rule 117 (exp -> exparam .)
    ANDSINGLE       reduce using rule 117 (exp -> exparam .)
    I64             reduce using rule 117 (exp -> exparam .)
    F64             reduce using rule 117 (exp -> exparam .)
    ENTERO          reduce using rule 117 (exp -> exparam .)
    DECIMAL         reduce using rule 117 (exp -> exparam .)
    CADENA          reduce using rule 117 (exp -> exparam .)
    BOOLEANO        reduce using rule 117 (exp -> exparam .)
    CARACTER        reduce using rule 117 (exp -> exparam .)
    ARROW2          reduce using rule 117 (exp -> exparam .)
    ORSINGLE        reduce using rule 117 (exp -> exparam .)


state 37

    (118) exp -> exppow .

    PUNTO           reduce using rule 118 (exp -> exppow .)
    MAS             reduce using rule 118 (exp -> exppow .)
    MENOS           reduce using rule 118 (exp -> exppow .)
    MULTIPLICACION  reduce using rule 118 (exp -> exppow .)
    DIVISION        reduce using rule 118 (exp -> exppow .)
    MODULO          reduce using rule 118 (exp -> exppow .)
    AND             reduce using rule 118 (exp -> exppow .)
    OR              reduce using rule 118 (exp -> exppow .)
    IGUALI          reduce using rule 118 (exp -> exppow .)
    DIF             reduce using rule 118 (exp -> exppow .)
    MAYOR           reduce using rule 118 (exp -> exppow .)
    MENOR           reduce using rule 118 (exp -> exppow .)
    MAYORI          reduce using rule 118 (exp -> exppow .)
    MENORI          reduce using rule 118 (exp -> exppow .)
    AS              reduce using rule 118 (exp -> exppow .)
    LLLAV           reduce using rule 118 (exp -> exppow .)
    PCOMA           reduce using rule 118 (exp -> exppow .)
    COMA            reduce using rule 118 (exp -> exppow .)
    RCOR            reduce using rule 118 (exp -> exppow .)
    RPAR            reduce using rule 118 (exp -> exppow .)
    RLLAV           reduce using rule 118 (exp -> exppow .)
    ID              reduce using rule 118 (exp -> exppow .)
    PRINT           reduce using rule 118 (exp -> exppow .)
    LET             reduce using rule 118 (exp -> exppow .)
    CONTINUE        reduce using rule 118 (exp -> exppow .)
    BREAK           reduce using rule 118 (exp -> exppow .)
    RETURN          reduce using rule 118 (exp -> exppow .)
    IF              reduce using rule 118 (exp -> exppow .)
    MATCH           reduce using rule 118 (exp -> exppow .)
    LOOP            reduce using rule 118 (exp -> exppow .)
    WHILE           reduce using rule 118 (exp -> exppow .)
    FOR             reduce using rule 118 (exp -> exppow .)
    LPAR            reduce using rule 118 (exp -> exppow .)
    AD              reduce using rule 118 (exp -> exppow .)
    LCOR            reduce using rule 118 (exp -> exppow .)
    VEC             reduce using rule 118 (exp -> exppow .)
    VECTOR          reduce using rule 118 (exp -> exppow .)
    MUT             reduce using rule 118 (exp -> exppow .)
    ANDSINGLE       reduce using rule 118 (exp -> exppow .)
    I64             reduce using rule 118 (exp -> exppow .)
    F64             reduce using rule 118 (exp -> exppow .)
    ENTERO          reduce using rule 118 (exp -> exppow .)
    DECIMAL         reduce using rule 118 (exp -> exppow .)
    CADENA          reduce using rule 118 (exp -> exppow .)
    BOOLEANO        reduce using rule 118 (exp -> exppow .)
    CARACTER        reduce using rule 118 (exp -> exppow .)
    ARROW2          reduce using rule 118 (exp -> exppow .)
    ORSINGLE        reduce using rule 118 (exp -> exppow .)


state 38

    (119) exp -> expcast .

    PUNTO           reduce using rule 119 (exp -> expcast .)
    MAS             reduce using rule 119 (exp -> expcast .)
    MENOS           reduce using rule 119 (exp -> expcast .)
    MULTIPLICACION  reduce using rule 119 (exp -> expcast .)
    DIVISION        reduce using rule 119 (exp -> expcast .)
    MODULO          reduce using rule 119 (exp -> expcast .)
    AND             reduce using rule 119 (exp -> expcast .)
    OR              reduce using rule 119 (exp -> expcast .)
    IGUALI          reduce using rule 119 (exp -> expcast .)
    DIF             reduce using rule 119 (exp -> expcast .)
    MAYOR           reduce using rule 119 (exp -> expcast .)
    MENOR           reduce using rule 119 (exp -> expcast .)
    MAYORI          reduce using rule 119 (exp -> expcast .)
    MENORI          reduce using rule 119 (exp -> expcast .)
    AS              reduce using rule 119 (exp -> expcast .)
    LLLAV           reduce using rule 119 (exp -> expcast .)
    PCOMA           reduce using rule 119 (exp -> expcast .)
    COMA            reduce using rule 119 (exp -> expcast .)
    RCOR            reduce using rule 119 (exp -> expcast .)
    RPAR            reduce using rule 119 (exp -> expcast .)
    RLLAV           reduce using rule 119 (exp -> expcast .)
    ID              reduce using rule 119 (exp -> expcast .)
    PRINT           reduce using rule 119 (exp -> expcast .)
    LET             reduce using rule 119 (exp -> expcast .)
    CONTINUE        reduce using rule 119 (exp -> expcast .)
    BREAK           reduce using rule 119 (exp -> expcast .)
    RETURN          reduce using rule 119 (exp -> expcast .)
    IF              reduce using rule 119 (exp -> expcast .)
    MATCH           reduce using rule 119 (exp -> expcast .)
    LOOP            reduce using rule 119 (exp -> expcast .)
    WHILE           reduce using rule 119 (exp -> expcast .)
    FOR             reduce using rule 119 (exp -> expcast .)
    LPAR            reduce using rule 119 (exp -> expcast .)
    AD              reduce using rule 119 (exp -> expcast .)
    LCOR            reduce using rule 119 (exp -> expcast .)
    VEC             reduce using rule 119 (exp -> expcast .)
    VECTOR          reduce using rule 119 (exp -> expcast .)
    MUT             reduce using rule 119 (exp -> expcast .)
    ANDSINGLE       reduce using rule 119 (exp -> expcast .)
    I64             reduce using rule 119 (exp -> expcast .)
    F64             reduce using rule 119 (exp -> expcast .)
    ENTERO          reduce using rule 119 (exp -> expcast .)
    DECIMAL         reduce using rule 119 (exp -> expcast .)
    CADENA          reduce using rule 119 (exp -> expcast .)
    BOOLEANO        reduce using rule 119 (exp -> expcast .)
    CARACTER        reduce using rule 119 (exp -> expcast .)
    ARROW2          reduce using rule 119 (exp -> expcast .)
    ORSINGLE        reduce using rule 119 (exp -> expcast .)


state 39

    (120) exp -> lista_acc .
    (92) lista_acc -> lista_acc . PUNTO ID
    (93) lista_acc -> lista_acc . PUNTO exp_native

  ! shift/reduce conflict for PUNTO resolved as shift
    MAS             reduce using rule 120 (exp -> lista_acc .)
    MENOS           reduce using rule 120 (exp -> lista_acc .)
    MULTIPLICACION  reduce using rule 120 (exp -> lista_acc .)
    DIVISION        reduce using rule 120 (exp -> lista_acc .)
    MODULO          reduce using rule 120 (exp -> lista_acc .)
    AND             reduce using rule 120 (exp -> lista_acc .)
    OR              reduce using rule 120 (exp -> lista_acc .)
    IGUALI          reduce using rule 120 (exp -> lista_acc .)
    DIF             reduce using rule 120 (exp -> lista_acc .)
    MAYOR           reduce using rule 120 (exp -> lista_acc .)
    MENOR           reduce using rule 120 (exp -> lista_acc .)
    MAYORI          reduce using rule 120 (exp -> lista_acc .)
    MENORI          reduce using rule 120 (exp -> lista_acc .)
    AS              reduce using rule 120 (exp -> lista_acc .)
    LLLAV           reduce using rule 120 (exp -> lista_acc .)
    PCOMA           reduce using rule 120 (exp -> lista_acc .)
    COMA            reduce using rule 120 (exp -> lista_acc .)
    RCOR            reduce using rule 120 (exp -> lista_acc .)
    RPAR            reduce using rule 120 (exp -> lista_acc .)
    RLLAV           reduce using rule 120 (exp -> lista_acc .)
    ID              reduce using rule 120 (exp -> lista_acc .)
    PRINT           reduce using rule 120 (exp -> lista_acc .)
    LET             reduce using rule 120 (exp -> lista_acc .)
    CONTINUE        reduce using rule 120 (exp -> lista_acc .)
    BREAK           reduce using rule 120 (exp -> lista_acc .)
    RETURN          reduce using rule 120 (exp -> lista_acc .)
    IF              reduce using rule 120 (exp -> lista_acc .)
    MATCH           reduce using rule 120 (exp -> lista_acc .)
    LOOP            reduce using rule 120 (exp -> lista_acc .)
    WHILE           reduce using rule 120 (exp -> lista_acc .)
    FOR             reduce using rule 120 (exp -> lista_acc .)
    LPAR            reduce using rule 120 (exp -> lista_acc .)
    AD              reduce using rule 120 (exp -> lista_acc .)
    LCOR            reduce using rule 120 (exp -> lista_acc .)
    VEC             reduce using rule 120 (exp -> lista_acc .)
    VECTOR          reduce using rule 120 (exp -> lista_acc .)
    MUT             reduce using rule 120 (exp -> lista_acc .)
    ANDSINGLE       reduce using rule 120 (exp -> lista_acc .)
    I64             reduce using rule 120 (exp -> lista_acc .)
    F64             reduce using rule 120 (exp -> lista_acc .)
    ENTERO          reduce using rule 120 (exp -> lista_acc .)
    DECIMAL         reduce using rule 120 (exp -> lista_acc .)
    CADENA          reduce using rule 120 (exp -> lista_acc .)
    BOOLEANO        reduce using rule 120 (exp -> lista_acc .)
    CARACTER        reduce using rule 120 (exp -> lista_acc .)
    ARROW2          reduce using rule 120 (exp -> lista_acc .)
    ORSINGLE        reduce using rule 120 (exp -> lista_acc .)
    PUNTO           shift and go to state 103

  ! PUNTO           [ reduce using rule 120 (exp -> lista_acc .) ]


state 40

    (121) exp -> llamada .

    PUNTO           reduce using rule 121 (exp -> llamada .)
    MAS             reduce using rule 121 (exp -> llamada .)
    MENOS           reduce using rule 121 (exp -> llamada .)
    MULTIPLICACION  reduce using rule 121 (exp -> llamada .)
    DIVISION        reduce using rule 121 (exp -> llamada .)
    MODULO          reduce using rule 121 (exp -> llamada .)
    AND             reduce using rule 121 (exp -> llamada .)
    OR              reduce using rule 121 (exp -> llamada .)
    IGUALI          reduce using rule 121 (exp -> llamada .)
    DIF             reduce using rule 121 (exp -> llamada .)
    MAYOR           reduce using rule 121 (exp -> llamada .)
    MENOR           reduce using rule 121 (exp -> llamada .)
    MAYORI          reduce using rule 121 (exp -> llamada .)
    MENORI          reduce using rule 121 (exp -> llamada .)
    AS              reduce using rule 121 (exp -> llamada .)
    LLLAV           reduce using rule 121 (exp -> llamada .)
    PCOMA           reduce using rule 121 (exp -> llamada .)
    COMA            reduce using rule 121 (exp -> llamada .)
    RCOR            reduce using rule 121 (exp -> llamada .)
    RPAR            reduce using rule 121 (exp -> llamada .)
    RLLAV           reduce using rule 121 (exp -> llamada .)
    ID              reduce using rule 121 (exp -> llamada .)
    PRINT           reduce using rule 121 (exp -> llamada .)
    LET             reduce using rule 121 (exp -> llamada .)
    CONTINUE        reduce using rule 121 (exp -> llamada .)
    BREAK           reduce using rule 121 (exp -> llamada .)
    RETURN          reduce using rule 121 (exp -> llamada .)
    IF              reduce using rule 121 (exp -> llamada .)
    MATCH           reduce using rule 121 (exp -> llamada .)
    LOOP            reduce using rule 121 (exp -> llamada .)
    WHILE           reduce using rule 121 (exp -> llamada .)
    FOR             reduce using rule 121 (exp -> llamada .)
    LPAR            reduce using rule 121 (exp -> llamada .)
    AD              reduce using rule 121 (exp -> llamada .)
    LCOR            reduce using rule 121 (exp -> llamada .)
    VEC             reduce using rule 121 (exp -> llamada .)
    VECTOR          reduce using rule 121 (exp -> llamada .)
    MUT             reduce using rule 121 (exp -> llamada .)
    ANDSINGLE       reduce using rule 121 (exp -> llamada .)
    I64             reduce using rule 121 (exp -> llamada .)
    F64             reduce using rule 121 (exp -> llamada .)
    ENTERO          reduce using rule 121 (exp -> llamada .)
    DECIMAL         reduce using rule 121 (exp -> llamada .)
    CADENA          reduce using rule 121 (exp -> llamada .)
    BOOLEANO        reduce using rule 121 (exp -> llamada .)
    CARACTER        reduce using rule 121 (exp -> llamada .)
    ARROW2          reduce using rule 121 (exp -> llamada .)
    ORSINGLE        reduce using rule 121 (exp -> llamada .)


state 41

    (122) exp -> sentencia .

    PUNTO           reduce using rule 122 (exp -> sentencia .)
    MAS             reduce using rule 122 (exp -> sentencia .)
    MENOS           reduce using rule 122 (exp -> sentencia .)
    MULTIPLICACION  reduce using rule 122 (exp -> sentencia .)
    DIVISION        reduce using rule 122 (exp -> sentencia .)
    MODULO          reduce using rule 122 (exp -> sentencia .)
    AND             reduce using rule 122 (exp -> sentencia .)
    OR              reduce using rule 122 (exp -> sentencia .)
    IGUALI          reduce using rule 122 (exp -> sentencia .)
    DIF             reduce using rule 122 (exp -> sentencia .)
    MAYOR           reduce using rule 122 (exp -> sentencia .)
    MENOR           reduce using rule 122 (exp -> sentencia .)
    MAYORI          reduce using rule 122 (exp -> sentencia .)
    MENORI          reduce using rule 122 (exp -> sentencia .)
    AS              reduce using rule 122 (exp -> sentencia .)
    LLLAV           reduce using rule 122 (exp -> sentencia .)
    PCOMA           reduce using rule 122 (exp -> sentencia .)
    COMA            reduce using rule 122 (exp -> sentencia .)
    RCOR            reduce using rule 122 (exp -> sentencia .)
    RPAR            reduce using rule 122 (exp -> sentencia .)
    RLLAV           reduce using rule 122 (exp -> sentencia .)
    ID              reduce using rule 122 (exp -> sentencia .)
    PRINT           reduce using rule 122 (exp -> sentencia .)
    LET             reduce using rule 122 (exp -> sentencia .)
    CONTINUE        reduce using rule 122 (exp -> sentencia .)
    BREAK           reduce using rule 122 (exp -> sentencia .)
    RETURN          reduce using rule 122 (exp -> sentencia .)
    IF              reduce using rule 122 (exp -> sentencia .)
    MATCH           reduce using rule 122 (exp -> sentencia .)
    LOOP            reduce using rule 122 (exp -> sentencia .)
    WHILE           reduce using rule 122 (exp -> sentencia .)
    FOR             reduce using rule 122 (exp -> sentencia .)
    LPAR            reduce using rule 122 (exp -> sentencia .)
    AD              reduce using rule 122 (exp -> sentencia .)
    LCOR            reduce using rule 122 (exp -> sentencia .)
    VEC             reduce using rule 122 (exp -> sentencia .)
    VECTOR          reduce using rule 122 (exp -> sentencia .)
    MUT             reduce using rule 122 (exp -> sentencia .)
    ANDSINGLE       reduce using rule 122 (exp -> sentencia .)
    I64             reduce using rule 122 (exp -> sentencia .)
    F64             reduce using rule 122 (exp -> sentencia .)
    ENTERO          reduce using rule 122 (exp -> sentencia .)
    DECIMAL         reduce using rule 122 (exp -> sentencia .)
    CADENA          reduce using rule 122 (exp -> sentencia .)
    BOOLEANO        reduce using rule 122 (exp -> sentencia .)
    CARACTER        reduce using rule 122 (exp -> sentencia .)
    ARROW2          reduce using rule 122 (exp -> sentencia .)
    ORSINGLE        reduce using rule 122 (exp -> sentencia .)


state 42

    (123) exp -> valores .

    PUNTO           reduce using rule 123 (exp -> valores .)
    MAS             reduce using rule 123 (exp -> valores .)
    MENOS           reduce using rule 123 (exp -> valores .)
    MULTIPLICACION  reduce using rule 123 (exp -> valores .)
    DIVISION        reduce using rule 123 (exp -> valores .)
    MODULO          reduce using rule 123 (exp -> valores .)
    AND             reduce using rule 123 (exp -> valores .)
    OR              reduce using rule 123 (exp -> valores .)
    IGUALI          reduce using rule 123 (exp -> valores .)
    DIF             reduce using rule 123 (exp -> valores .)
    MAYOR           reduce using rule 123 (exp -> valores .)
    MENOR           reduce using rule 123 (exp -> valores .)
    MAYORI          reduce using rule 123 (exp -> valores .)
    MENORI          reduce using rule 123 (exp -> valores .)
    AS              reduce using rule 123 (exp -> valores .)
    LLLAV           reduce using rule 123 (exp -> valores .)
    PCOMA           reduce using rule 123 (exp -> valores .)
    COMA            reduce using rule 123 (exp -> valores .)
    RCOR            reduce using rule 123 (exp -> valores .)
    RPAR            reduce using rule 123 (exp -> valores .)
    RLLAV           reduce using rule 123 (exp -> valores .)
    ID              reduce using rule 123 (exp -> valores .)
    PRINT           reduce using rule 123 (exp -> valores .)
    LET             reduce using rule 123 (exp -> valores .)
    CONTINUE        reduce using rule 123 (exp -> valores .)
    BREAK           reduce using rule 123 (exp -> valores .)
    RETURN          reduce using rule 123 (exp -> valores .)
    IF              reduce using rule 123 (exp -> valores .)
    MATCH           reduce using rule 123 (exp -> valores .)
    LOOP            reduce using rule 123 (exp -> valores .)
    WHILE           reduce using rule 123 (exp -> valores .)
    FOR             reduce using rule 123 (exp -> valores .)
    LPAR            reduce using rule 123 (exp -> valores .)
    AD              reduce using rule 123 (exp -> valores .)
    LCOR            reduce using rule 123 (exp -> valores .)
    VEC             reduce using rule 123 (exp -> valores .)
    VECTOR          reduce using rule 123 (exp -> valores .)
    MUT             reduce using rule 123 (exp -> valores .)
    ANDSINGLE       reduce using rule 123 (exp -> valores .)
    I64             reduce using rule 123 (exp -> valores .)
    F64             reduce using rule 123 (exp -> valores .)
    ENTERO          reduce using rule 123 (exp -> valores .)
    DECIMAL         reduce using rule 123 (exp -> valores .)
    CADENA          reduce using rule 123 (exp -> valores .)
    BOOLEANO        reduce using rule 123 (exp -> valores .)
    CARACTER        reduce using rule 123 (exp -> valores .)
    ARROW2          reduce using rule 123 (exp -> valores .)
    ORSINGLE        reduce using rule 123 (exp -> valores .)


state 43

    (130) expmath -> MENOS . exp
    (110) exp -> . LPAR exp RPAR
    (111) exp -> . expmath
    (112) exp -> . expop
    (113) exp -> . exprel
    (114) exp -> . exparr
    (115) exp -> . newarray
    (116) exp -> . expvec
    (117) exp -> . exparam
    (118) exp -> . exppow
    (119) exp -> . expcast
    (120) exp -> . lista_acc
    (121) exp -> . llamada
    (122) exp -> . sentencia
    (123) exp -> . valores
    (124) exp -> . exp PUNTO exp_native
    (125) expmath -> . exp MAS exp
    (126) expmath -> . exp MENOS exp
    (127) expmath -> . exp MULTIPLICACION exp
    (128) expmath -> . exp DIVISION exp
    (129) expmath -> . exp MODULO exp
    (130) expmath -> . MENOS exp
    (133) expop -> . exp AND exp
    (134) expop -> . exp OR exp
    (135) expop -> . AD exp
    (137) exprel -> . exp IGUALI exp
    (138) exprel -> . exp DIF exp
    (139) exprel -> . exp MAYOR exp
    (140) exprel -> . exp MENOR exp
    (141) exprel -> . exp MAYORI exp
    (142) exprel -> . exp MENORI exp
    (152) exparr -> . ID lista_arr
    (155) newarray -> . LCOR lista_exp RCOR
    (156) newarray -> . LCOR auxexp PCOMA exp RCOR
    (153) expvec -> . VEC AD newarray
    (154) expvec -> . VECTOR DPUNTOS DPUNTOS exp_natarr
    (148) exparam -> . MUT ID
    (149) exparam -> . MUT valores
    (150) exparam -> . ANDSINGLE MUT ID
    (151) exparam -> . ANDSINGLE MUT valores
    (131) exppow -> . I64 DPUNTOS DPUNTOS POW LPAR exp COMA exp RPAR
    (132) exppow -> . F64 DPUNTOS DPUNTOS POWF LPAR exp COMA exp RPAR
    (136) expcast -> . exp AS tipo_var
    (92) lista_acc -> . lista_acc PUNTO ID
    (93) lista_acc -> . lista_acc PUNTO exp_native
    (94) lista_acc -> . auxacc
    (176) llamada -> . ID LPAR RPAR
    (177) llamada -> . ID LPAR lista_exp RPAR
    (37) sentencia -> . if
    (38) sentencia -> . match
    (39) sentencia -> . loop
    (40) sentencia -> . while
    (41) sentencia -> . for
    (157) valores -> . ENTERO
    (158) valores -> . DECIMAL
    (159) valores -> . CADENA
    (160) valores -> . BOOLEANO
    (161) valores -> . CARACTER
    (95) auxacc -> . exparr
    (96) auxacc -> . ID
    (42) if -> . IF exp statement else
    (47) match -> . MATCH exp match_statement
    (62) loop -> . LOOP statement
    (63) while -> . WHILE exp statement
    (64) for -> . FOR ID IN foriterative statement

    LPAR            shift and go to state 29
    MENOS           shift and go to state 43
    AD              shift and go to state 44
    ID              shift and go to state 45
    LCOR            shift and go to state 46
    VEC             shift and go to state 47
    VECTOR          shift and go to state 48
    MUT             shift and go to state 49
    ANDSINGLE       shift and go to state 50
    I64             shift and go to state 51
    F64             shift and go to state 52
    ENTERO          shift and go to state 59
    DECIMAL         shift and go to state 60
    CADENA          shift and go to state 61
    BOOLEANO        shift and go to state 62
    CARACTER        shift and go to state 63
    IF              shift and go to state 12
    MATCH           shift and go to state 64
    LOOP            shift and go to state 65
    WHILE           shift and go to state 13
    FOR             shift and go to state 66

    exp                            shift and go to state 104
    expmath                        shift and go to state 30
    expop                          shift and go to state 31
    exprel                         shift and go to state 32
    exparr                         shift and go to state 33
    newarray                       shift and go to state 34
    expvec                         shift and go to state 35
    exparam                        shift and go to state 36
    exppow                         shift and go to state 37
    expcast                        shift and go to state 38
    lista_acc                      shift and go to state 39
    llamada                        shift and go to state 40
    sentencia                      shift and go to state 41
    valores                        shift and go to state 42
    auxacc                         shift and go to state 53
    if                             shift and go to state 54
    match                          shift and go to state 55
    loop                           shift and go to state 56
    while                          shift and go to state 57
    for                            shift and go to state 58

state 44

    (135) expop -> AD . exp
    (110) exp -> . LPAR exp RPAR
    (111) exp -> . expmath
    (112) exp -> . expop
    (113) exp -> . exprel
    (114) exp -> . exparr
    (115) exp -> . newarray
    (116) exp -> . expvec
    (117) exp -> . exparam
    (118) exp -> . exppow
    (119) exp -> . expcast
    (120) exp -> . lista_acc
    (121) exp -> . llamada
    (122) exp -> . sentencia
    (123) exp -> . valores
    (124) exp -> . exp PUNTO exp_native
    (125) expmath -> . exp MAS exp
    (126) expmath -> . exp MENOS exp
    (127) expmath -> . exp MULTIPLICACION exp
    (128) expmath -> . exp DIVISION exp
    (129) expmath -> . exp MODULO exp
    (130) expmath -> . MENOS exp
    (133) expop -> . exp AND exp
    (134) expop -> . exp OR exp
    (135) expop -> . AD exp
    (137) exprel -> . exp IGUALI exp
    (138) exprel -> . exp DIF exp
    (139) exprel -> . exp MAYOR exp
    (140) exprel -> . exp MENOR exp
    (141) exprel -> . exp MAYORI exp
    (142) exprel -> . exp MENORI exp
    (152) exparr -> . ID lista_arr
    (155) newarray -> . LCOR lista_exp RCOR
    (156) newarray -> . LCOR auxexp PCOMA exp RCOR
    (153) expvec -> . VEC AD newarray
    (154) expvec -> . VECTOR DPUNTOS DPUNTOS exp_natarr
    (148) exparam -> . MUT ID
    (149) exparam -> . MUT valores
    (150) exparam -> . ANDSINGLE MUT ID
    (151) exparam -> . ANDSINGLE MUT valores
    (131) exppow -> . I64 DPUNTOS DPUNTOS POW LPAR exp COMA exp RPAR
    (132) exppow -> . F64 DPUNTOS DPUNTOS POWF LPAR exp COMA exp RPAR
    (136) expcast -> . exp AS tipo_var
    (92) lista_acc -> . lista_acc PUNTO ID
    (93) lista_acc -> . lista_acc PUNTO exp_native
    (94) lista_acc -> . auxacc
    (176) llamada -> . ID LPAR RPAR
    (177) llamada -> . ID LPAR lista_exp RPAR
    (37) sentencia -> . if
    (38) sentencia -> . match
    (39) sentencia -> . loop
    (40) sentencia -> . while
    (41) sentencia -> . for
    (157) valores -> . ENTERO
    (158) valores -> . DECIMAL
    (159) valores -> . CADENA
    (160) valores -> . BOOLEANO
    (161) valores -> . CARACTER
    (95) auxacc -> . exparr
    (96) auxacc -> . ID
    (42) if -> . IF exp statement else
    (47) match -> . MATCH exp match_statement
    (62) loop -> . LOOP statement
    (63) while -> . WHILE exp statement
    (64) for -> . FOR ID IN foriterative statement

    LPAR            shift and go to state 29
    MENOS           shift and go to state 43
    AD              shift and go to state 44
    ID              shift and go to state 45
    LCOR            shift and go to state 46
    VEC             shift and go to state 47
    VECTOR          shift and go to state 48
    MUT             shift and go to state 49
    ANDSINGLE       shift and go to state 50
    I64             shift and go to state 51
    F64             shift and go to state 52
    ENTERO          shift and go to state 59
    DECIMAL         shift and go to state 60
    CADENA          shift and go to state 61
    BOOLEANO        shift and go to state 62
    CARACTER        shift and go to state 63
    IF              shift and go to state 12
    MATCH           shift and go to state 64
    LOOP            shift and go to state 65
    WHILE           shift and go to state 13
    FOR             shift and go to state 66

    exp                            shift and go to state 105
    expmath                        shift and go to state 30
    expop                          shift and go to state 31
    exprel                         shift and go to state 32
    exparr                         shift and go to state 33
    newarray                       shift and go to state 34
    expvec                         shift and go to state 35
    exparam                        shift and go to state 36
    exppow                         shift and go to state 37
    expcast                        shift and go to state 38
    lista_acc                      shift and go to state 39
    llamada                        shift and go to state 40
    sentencia                      shift and go to state 41
    valores                        shift and go to state 42
    auxacc                         shift and go to state 53
    if                             shift and go to state 54
    match                          shift and go to state 55
    loop                           shift and go to state 56
    while                          shift and go to state 57
    for                            shift and go to state 58

state 45

    (152) exparr -> ID . lista_arr
    (176) llamada -> ID . LPAR RPAR
    (177) llamada -> ID . LPAR lista_exp RPAR
    (96) auxacc -> ID .
    (97) lista_arr -> . lista_arr LCOR auxexp RCOR
    (98) lista_arr -> . LCOR auxexp RCOR

  ! shift/reduce conflict for LPAR resolved as shift
  ! shift/reduce conflict for LCOR resolved as shift
    LPAR            shift and go to state 107
    PUNTO           reduce using rule 96 (auxacc -> ID .)
    MAS             reduce using rule 96 (auxacc -> ID .)
    MENOS           reduce using rule 96 (auxacc -> ID .)
    MULTIPLICACION  reduce using rule 96 (auxacc -> ID .)
    DIVISION        reduce using rule 96 (auxacc -> ID .)
    MODULO          reduce using rule 96 (auxacc -> ID .)
    AND             reduce using rule 96 (auxacc -> ID .)
    OR              reduce using rule 96 (auxacc -> ID .)
    IGUALI          reduce using rule 96 (auxacc -> ID .)
    DIF             reduce using rule 96 (auxacc -> ID .)
    MAYOR           reduce using rule 96 (auxacc -> ID .)
    MENOR           reduce using rule 96 (auxacc -> ID .)
    MAYORI          reduce using rule 96 (auxacc -> ID .)
    MENORI          reduce using rule 96 (auxacc -> ID .)
    AS              reduce using rule 96 (auxacc -> ID .)
    LLLAV           reduce using rule 96 (auxacc -> ID .)
    RPAR            reduce using rule 96 (auxacc -> ID .)
    PCOMA           reduce using rule 96 (auxacc -> ID .)
    COMA            reduce using rule 96 (auxacc -> ID .)
    RCOR            reduce using rule 96 (auxacc -> ID .)
    RLLAV           reduce using rule 96 (auxacc -> ID .)
    ID              reduce using rule 96 (auxacc -> ID .)
    PRINT           reduce using rule 96 (auxacc -> ID .)
    LET             reduce using rule 96 (auxacc -> ID .)
    CONTINUE        reduce using rule 96 (auxacc -> ID .)
    BREAK           reduce using rule 96 (auxacc -> ID .)
    RETURN          reduce using rule 96 (auxacc -> ID .)
    IF              reduce using rule 96 (auxacc -> ID .)
    MATCH           reduce using rule 96 (auxacc -> ID .)
    LOOP            reduce using rule 96 (auxacc -> ID .)
    WHILE           reduce using rule 96 (auxacc -> ID .)
    FOR             reduce using rule 96 (auxacc -> ID .)
    AD              reduce using rule 96 (auxacc -> ID .)
    VEC             reduce using rule 96 (auxacc -> ID .)
    VECTOR          reduce using rule 96 (auxacc -> ID .)
    MUT             reduce using rule 96 (auxacc -> ID .)
    ANDSINGLE       reduce using rule 96 (auxacc -> ID .)
    I64             reduce using rule 96 (auxacc -> ID .)
    F64             reduce using rule 96 (auxacc -> ID .)
    ENTERO          reduce using rule 96 (auxacc -> ID .)
    DECIMAL         reduce using rule 96 (auxacc -> ID .)
    CADENA          reduce using rule 96 (auxacc -> ID .)
    BOOLEANO        reduce using rule 96 (auxacc -> ID .)
    CARACTER        reduce using rule 96 (auxacc -> ID .)
    ARROW2          reduce using rule 96 (auxacc -> ID .)
    ORSINGLE        reduce using rule 96 (auxacc -> ID .)
    LCOR            shift and go to state 26

  ! LPAR            [ reduce using rule 96 (auxacc -> ID .) ]
  ! LCOR            [ reduce using rule 96 (auxacc -> ID .) ]

    lista_arr                      shift and go to state 106

state 46

    (155) newarray -> LCOR . lista_exp RCOR
    (156) newarray -> LCOR . auxexp PCOMA exp RCOR
    (99) lista_exp -> . lista_exp COMA auxexp
    (100) lista_exp -> . auxexp
    (108) auxexp -> . expstruct
    (109) auxexp -> . exp
    (143) expstruct -> . lista_classtype LLLAV lista_att RLLAV
    (144) expstruct -> . lista_classtype LLLAV RLLAV
    (145) expstruct -> . lista_classtype DPUNTOS DPUNTOS llamada
    (110) exp -> . LPAR exp RPAR
    (111) exp -> . expmath
    (112) exp -> . expop
    (113) exp -> . exprel
    (114) exp -> . exparr
    (115) exp -> . newarray
    (116) exp -> . expvec
    (117) exp -> . exparam
    (118) exp -> . exppow
    (119) exp -> . expcast
    (120) exp -> . lista_acc
    (121) exp -> . llamada
    (122) exp -> . sentencia
    (123) exp -> . valores
    (124) exp -> . exp PUNTO exp_native
    (174) lista_classtype -> . lista_classtype DPUNTOS DPUNTOS ID
    (175) lista_classtype -> . ID
    (125) expmath -> . exp MAS exp
    (126) expmath -> . exp MENOS exp
    (127) expmath -> . exp MULTIPLICACION exp
    (128) expmath -> . exp DIVISION exp
    (129) expmath -> . exp MODULO exp
    (130) expmath -> . MENOS exp
    (133) expop -> . exp AND exp
    (134) expop -> . exp OR exp
    (135) expop -> . AD exp
    (137) exprel -> . exp IGUALI exp
    (138) exprel -> . exp DIF exp
    (139) exprel -> . exp MAYOR exp
    (140) exprel -> . exp MENOR exp
    (141) exprel -> . exp MAYORI exp
    (142) exprel -> . exp MENORI exp
    (152) exparr -> . ID lista_arr
    (155) newarray -> . LCOR lista_exp RCOR
    (156) newarray -> . LCOR auxexp PCOMA exp RCOR
    (153) expvec -> . VEC AD newarray
    (154) expvec -> . VECTOR DPUNTOS DPUNTOS exp_natarr
    (148) exparam -> . MUT ID
    (149) exparam -> . MUT valores
    (150) exparam -> . ANDSINGLE MUT ID
    (151) exparam -> . ANDSINGLE MUT valores
    (131) exppow -> . I64 DPUNTOS DPUNTOS POW LPAR exp COMA exp RPAR
    (132) exppow -> . F64 DPUNTOS DPUNTOS POWF LPAR exp COMA exp RPAR
    (136) expcast -> . exp AS tipo_var
    (92) lista_acc -> . lista_acc PUNTO ID
    (93) lista_acc -> . lista_acc PUNTO exp_native
    (94) lista_acc -> . auxacc
    (176) llamada -> . ID LPAR RPAR
    (177) llamada -> . ID LPAR lista_exp RPAR
    (37) sentencia -> . if
    (38) sentencia -> . match
    (39) sentencia -> . loop
    (40) sentencia -> . while
    (41) sentencia -> . for
    (157) valores -> . ENTERO
    (158) valores -> . DECIMAL
    (159) valores -> . CADENA
    (160) valores -> . BOOLEANO
    (161) valores -> . CARACTER
    (95) auxacc -> . exparr
    (96) auxacc -> . ID
    (42) if -> . IF exp statement else
    (47) match -> . MATCH exp match_statement
    (62) loop -> . LOOP statement
    (63) while -> . WHILE exp statement
    (64) for -> . FOR ID IN foriterative statement

    LPAR            shift and go to state 29
    ID              shift and go to state 72
    MENOS           shift and go to state 43
    AD              shift and go to state 44
    LCOR            shift and go to state 46
    VEC             shift and go to state 47
    VECTOR          shift and go to state 48
    MUT             shift and go to state 49
    ANDSINGLE       shift and go to state 50
    I64             shift and go to state 51
    F64             shift and go to state 52
    ENTERO          shift and go to state 59
    DECIMAL         shift and go to state 60
    CADENA          shift and go to state 61
    BOOLEANO        shift and go to state 62
    CARACTER        shift and go to state 63
    IF              shift and go to state 12
    MATCH           shift and go to state 64
    LOOP            shift and go to state 65
    WHILE           shift and go to state 13
    FOR             shift and go to state 66

    lista_exp                      shift and go to state 108
    auxexp                         shift and go to state 109
    exp                            shift and go to state 75
    expstruct                      shift and go to state 74
    lista_classtype                shift and go to state 76
    llamada                        shift and go to state 40
    expmath                        shift and go to state 30
    expop                          shift and go to state 31
    exprel                         shift and go to state 32
    exparr                         shift and go to state 33
    newarray                       shift and go to state 34
    expvec                         shift and go to state 35
    exparam                        shift and go to state 36
    exppow                         shift and go to state 37
    expcast                        shift and go to state 38
    lista_acc                      shift and go to state 39
    sentencia                      shift and go to state 41
    valores                        shift and go to state 42
    auxacc                         shift and go to state 53
    if                             shift and go to state 54
    match                          shift and go to state 55
    loop                           shift and go to state 56
    while                          shift and go to state 57
    for                            shift and go to state 58

state 47

    (153) expvec -> VEC . AD newarray

    AD              shift and go to state 110


state 48

    (154) expvec -> VECTOR . DPUNTOS DPUNTOS exp_natarr

    DPUNTOS         shift and go to state 111


state 49

    (148) exparam -> MUT . ID
    (149) exparam -> MUT . valores
    (157) valores -> . ENTERO
    (158) valores -> . DECIMAL
    (159) valores -> . CADENA
    (160) valores -> . BOOLEANO
    (161) valores -> . CARACTER

    ID              shift and go to state 112
    ENTERO          shift and go to state 59
    DECIMAL         shift and go to state 60
    CADENA          shift and go to state 61
    BOOLEANO        shift and go to state 62
    CARACTER        shift and go to state 63

    valores                        shift and go to state 113

state 50

    (150) exparam -> ANDSINGLE . MUT ID
    (151) exparam -> ANDSINGLE . MUT valores

    MUT             shift and go to state 114


state 51

    (131) exppow -> I64 . DPUNTOS DPUNTOS POW LPAR exp COMA exp RPAR

    DPUNTOS         shift and go to state 115


state 52

    (132) exppow -> F64 . DPUNTOS DPUNTOS POWF LPAR exp COMA exp RPAR

    DPUNTOS         shift and go to state 116


state 53

    (94) lista_acc -> auxacc .

    PUNTO           reduce using rule 94 (lista_acc -> auxacc .)
    MAS             reduce using rule 94 (lista_acc -> auxacc .)
    MENOS           reduce using rule 94 (lista_acc -> auxacc .)
    MULTIPLICACION  reduce using rule 94 (lista_acc -> auxacc .)
    DIVISION        reduce using rule 94 (lista_acc -> auxacc .)
    MODULO          reduce using rule 94 (lista_acc -> auxacc .)
    AND             reduce using rule 94 (lista_acc -> auxacc .)
    OR              reduce using rule 94 (lista_acc -> auxacc .)
    IGUALI          reduce using rule 94 (lista_acc -> auxacc .)
    DIF             reduce using rule 94 (lista_acc -> auxacc .)
    MAYOR           reduce using rule 94 (lista_acc -> auxacc .)
    MENOR           reduce using rule 94 (lista_acc -> auxacc .)
    MAYORI          reduce using rule 94 (lista_acc -> auxacc .)
    MENORI          reduce using rule 94 (lista_acc -> auxacc .)
    AS              reduce using rule 94 (lista_acc -> auxacc .)
    LLLAV           reduce using rule 94 (lista_acc -> auxacc .)
    PCOMA           reduce using rule 94 (lista_acc -> auxacc .)
    COMA            reduce using rule 94 (lista_acc -> auxacc .)
    RCOR            reduce using rule 94 (lista_acc -> auxacc .)
    RPAR            reduce using rule 94 (lista_acc -> auxacc .)
    RLLAV           reduce using rule 94 (lista_acc -> auxacc .)
    ID              reduce using rule 94 (lista_acc -> auxacc .)
    PRINT           reduce using rule 94 (lista_acc -> auxacc .)
    LET             reduce using rule 94 (lista_acc -> auxacc .)
    CONTINUE        reduce using rule 94 (lista_acc -> auxacc .)
    BREAK           reduce using rule 94 (lista_acc -> auxacc .)
    RETURN          reduce using rule 94 (lista_acc -> auxacc .)
    IF              reduce using rule 94 (lista_acc -> auxacc .)
    MATCH           reduce using rule 94 (lista_acc -> auxacc .)
    LOOP            reduce using rule 94 (lista_acc -> auxacc .)
    WHILE           reduce using rule 94 (lista_acc -> auxacc .)
    FOR             reduce using rule 94 (lista_acc -> auxacc .)
    LPAR            reduce using rule 94 (lista_acc -> auxacc .)
    AD              reduce using rule 94 (lista_acc -> auxacc .)
    LCOR            reduce using rule 94 (lista_acc -> auxacc .)
    VEC             reduce using rule 94 (lista_acc -> auxacc .)
    VECTOR          reduce using rule 94 (lista_acc -> auxacc .)
    MUT             reduce using rule 94 (lista_acc -> auxacc .)
    ANDSINGLE       reduce using rule 94 (lista_acc -> auxacc .)
    I64             reduce using rule 94 (lista_acc -> auxacc .)
    F64             reduce using rule 94 (lista_acc -> auxacc .)
    ENTERO          reduce using rule 94 (lista_acc -> auxacc .)
    DECIMAL         reduce using rule 94 (lista_acc -> auxacc .)
    CADENA          reduce using rule 94 (lista_acc -> auxacc .)
    BOOLEANO        reduce using rule 94 (lista_acc -> auxacc .)
    CARACTER        reduce using rule 94 (lista_acc -> auxacc .)
    ARROW2          reduce using rule 94 (lista_acc -> auxacc .)
    ORSINGLE        reduce using rule 94 (lista_acc -> auxacc .)


state 54

    (37) sentencia -> if .

    PUNTO           reduce using rule 37 (sentencia -> if .)
    MAS             reduce using rule 37 (sentencia -> if .)
    MENOS           reduce using rule 37 (sentencia -> if .)
    MULTIPLICACION  reduce using rule 37 (sentencia -> if .)
    DIVISION        reduce using rule 37 (sentencia -> if .)
    MODULO          reduce using rule 37 (sentencia -> if .)
    AND             reduce using rule 37 (sentencia -> if .)
    OR              reduce using rule 37 (sentencia -> if .)
    IGUALI          reduce using rule 37 (sentencia -> if .)
    DIF             reduce using rule 37 (sentencia -> if .)
    MAYOR           reduce using rule 37 (sentencia -> if .)
    MENOR           reduce using rule 37 (sentencia -> if .)
    MAYORI          reduce using rule 37 (sentencia -> if .)
    MENORI          reduce using rule 37 (sentencia -> if .)
    AS              reduce using rule 37 (sentencia -> if .)
    LLLAV           reduce using rule 37 (sentencia -> if .)
    PCOMA           reduce using rule 37 (sentencia -> if .)
    COMA            reduce using rule 37 (sentencia -> if .)
    RCOR            reduce using rule 37 (sentencia -> if .)
    RPAR            reduce using rule 37 (sentencia -> if .)
    RLLAV           reduce using rule 37 (sentencia -> if .)
    ID              reduce using rule 37 (sentencia -> if .)
    PRINT           reduce using rule 37 (sentencia -> if .)
    LET             reduce using rule 37 (sentencia -> if .)
    CONTINUE        reduce using rule 37 (sentencia -> if .)
    BREAK           reduce using rule 37 (sentencia -> if .)
    RETURN          reduce using rule 37 (sentencia -> if .)
    IF              reduce using rule 37 (sentencia -> if .)
    MATCH           reduce using rule 37 (sentencia -> if .)
    LOOP            reduce using rule 37 (sentencia -> if .)
    WHILE           reduce using rule 37 (sentencia -> if .)
    FOR             reduce using rule 37 (sentencia -> if .)
    LPAR            reduce using rule 37 (sentencia -> if .)
    AD              reduce using rule 37 (sentencia -> if .)
    LCOR            reduce using rule 37 (sentencia -> if .)
    VEC             reduce using rule 37 (sentencia -> if .)
    VECTOR          reduce using rule 37 (sentencia -> if .)
    MUT             reduce using rule 37 (sentencia -> if .)
    ANDSINGLE       reduce using rule 37 (sentencia -> if .)
    I64             reduce using rule 37 (sentencia -> if .)
    F64             reduce using rule 37 (sentencia -> if .)
    ENTERO          reduce using rule 37 (sentencia -> if .)
    DECIMAL         reduce using rule 37 (sentencia -> if .)
    CADENA          reduce using rule 37 (sentencia -> if .)
    BOOLEANO        reduce using rule 37 (sentencia -> if .)
    CARACTER        reduce using rule 37 (sentencia -> if .)
    ARROW2          reduce using rule 37 (sentencia -> if .)
    ORSINGLE        reduce using rule 37 (sentencia -> if .)


state 55

    (38) sentencia -> match .

    PUNTO           reduce using rule 38 (sentencia -> match .)
    MAS             reduce using rule 38 (sentencia -> match .)
    MENOS           reduce using rule 38 (sentencia -> match .)
    MULTIPLICACION  reduce using rule 38 (sentencia -> match .)
    DIVISION        reduce using rule 38 (sentencia -> match .)
    MODULO          reduce using rule 38 (sentencia -> match .)
    AND             reduce using rule 38 (sentencia -> match .)
    OR              reduce using rule 38 (sentencia -> match .)
    IGUALI          reduce using rule 38 (sentencia -> match .)
    DIF             reduce using rule 38 (sentencia -> match .)
    MAYOR           reduce using rule 38 (sentencia -> match .)
    MENOR           reduce using rule 38 (sentencia -> match .)
    MAYORI          reduce using rule 38 (sentencia -> match .)
    MENORI          reduce using rule 38 (sentencia -> match .)
    AS              reduce using rule 38 (sentencia -> match .)
    LLLAV           reduce using rule 38 (sentencia -> match .)
    PCOMA           reduce using rule 38 (sentencia -> match .)
    COMA            reduce using rule 38 (sentencia -> match .)
    RCOR            reduce using rule 38 (sentencia -> match .)
    RPAR            reduce using rule 38 (sentencia -> match .)
    RLLAV           reduce using rule 38 (sentencia -> match .)
    ID              reduce using rule 38 (sentencia -> match .)
    PRINT           reduce using rule 38 (sentencia -> match .)
    LET             reduce using rule 38 (sentencia -> match .)
    CONTINUE        reduce using rule 38 (sentencia -> match .)
    BREAK           reduce using rule 38 (sentencia -> match .)
    RETURN          reduce using rule 38 (sentencia -> match .)
    IF              reduce using rule 38 (sentencia -> match .)
    MATCH           reduce using rule 38 (sentencia -> match .)
    LOOP            reduce using rule 38 (sentencia -> match .)
    WHILE           reduce using rule 38 (sentencia -> match .)
    FOR             reduce using rule 38 (sentencia -> match .)
    LPAR            reduce using rule 38 (sentencia -> match .)
    AD              reduce using rule 38 (sentencia -> match .)
    LCOR            reduce using rule 38 (sentencia -> match .)
    VEC             reduce using rule 38 (sentencia -> match .)
    VECTOR          reduce using rule 38 (sentencia -> match .)
    MUT             reduce using rule 38 (sentencia -> match .)
    ANDSINGLE       reduce using rule 38 (sentencia -> match .)
    I64             reduce using rule 38 (sentencia -> match .)
    F64             reduce using rule 38 (sentencia -> match .)
    ENTERO          reduce using rule 38 (sentencia -> match .)
    DECIMAL         reduce using rule 38 (sentencia -> match .)
    CADENA          reduce using rule 38 (sentencia -> match .)
    BOOLEANO        reduce using rule 38 (sentencia -> match .)
    CARACTER        reduce using rule 38 (sentencia -> match .)
    ARROW2          reduce using rule 38 (sentencia -> match .)
    ORSINGLE        reduce using rule 38 (sentencia -> match .)


state 56

    (39) sentencia -> loop .

    PUNTO           reduce using rule 39 (sentencia -> loop .)
    MAS             reduce using rule 39 (sentencia -> loop .)
    MENOS           reduce using rule 39 (sentencia -> loop .)
    MULTIPLICACION  reduce using rule 39 (sentencia -> loop .)
    DIVISION        reduce using rule 39 (sentencia -> loop .)
    MODULO          reduce using rule 39 (sentencia -> loop .)
    AND             reduce using rule 39 (sentencia -> loop .)
    OR              reduce using rule 39 (sentencia -> loop .)
    IGUALI          reduce using rule 39 (sentencia -> loop .)
    DIF             reduce using rule 39 (sentencia -> loop .)
    MAYOR           reduce using rule 39 (sentencia -> loop .)
    MENOR           reduce using rule 39 (sentencia -> loop .)
    MAYORI          reduce using rule 39 (sentencia -> loop .)
    MENORI          reduce using rule 39 (sentencia -> loop .)
    AS              reduce using rule 39 (sentencia -> loop .)
    LLLAV           reduce using rule 39 (sentencia -> loop .)
    PCOMA           reduce using rule 39 (sentencia -> loop .)
    COMA            reduce using rule 39 (sentencia -> loop .)
    RCOR            reduce using rule 39 (sentencia -> loop .)
    RPAR            reduce using rule 39 (sentencia -> loop .)
    RLLAV           reduce using rule 39 (sentencia -> loop .)
    ID              reduce using rule 39 (sentencia -> loop .)
    PRINT           reduce using rule 39 (sentencia -> loop .)
    LET             reduce using rule 39 (sentencia -> loop .)
    CONTINUE        reduce using rule 39 (sentencia -> loop .)
    BREAK           reduce using rule 39 (sentencia -> loop .)
    RETURN          reduce using rule 39 (sentencia -> loop .)
    IF              reduce using rule 39 (sentencia -> loop .)
    MATCH           reduce using rule 39 (sentencia -> loop .)
    LOOP            reduce using rule 39 (sentencia -> loop .)
    WHILE           reduce using rule 39 (sentencia -> loop .)
    FOR             reduce using rule 39 (sentencia -> loop .)
    LPAR            reduce using rule 39 (sentencia -> loop .)
    AD              reduce using rule 39 (sentencia -> loop .)
    LCOR            reduce using rule 39 (sentencia -> loop .)
    VEC             reduce using rule 39 (sentencia -> loop .)
    VECTOR          reduce using rule 39 (sentencia -> loop .)
    MUT             reduce using rule 39 (sentencia -> loop .)
    ANDSINGLE       reduce using rule 39 (sentencia -> loop .)
    I64             reduce using rule 39 (sentencia -> loop .)
    F64             reduce using rule 39 (sentencia -> loop .)
    ENTERO          reduce using rule 39 (sentencia -> loop .)
    DECIMAL         reduce using rule 39 (sentencia -> loop .)
    CADENA          reduce using rule 39 (sentencia -> loop .)
    BOOLEANO        reduce using rule 39 (sentencia -> loop .)
    CARACTER        reduce using rule 39 (sentencia -> loop .)
    ARROW2          reduce using rule 39 (sentencia -> loop .)
    ORSINGLE        reduce using rule 39 (sentencia -> loop .)


state 57

    (40) sentencia -> while .

    PUNTO           reduce using rule 40 (sentencia -> while .)
    MAS             reduce using rule 40 (sentencia -> while .)
    MENOS           reduce using rule 40 (sentencia -> while .)
    MULTIPLICACION  reduce using rule 40 (sentencia -> while .)
    DIVISION        reduce using rule 40 (sentencia -> while .)
    MODULO          reduce using rule 40 (sentencia -> while .)
    AND             reduce using rule 40 (sentencia -> while .)
    OR              reduce using rule 40 (sentencia -> while .)
    IGUALI          reduce using rule 40 (sentencia -> while .)
    DIF             reduce using rule 40 (sentencia -> while .)
    MAYOR           reduce using rule 40 (sentencia -> while .)
    MENOR           reduce using rule 40 (sentencia -> while .)
    MAYORI          reduce using rule 40 (sentencia -> while .)
    MENORI          reduce using rule 40 (sentencia -> while .)
    AS              reduce using rule 40 (sentencia -> while .)
    LLLAV           reduce using rule 40 (sentencia -> while .)
    PCOMA           reduce using rule 40 (sentencia -> while .)
    COMA            reduce using rule 40 (sentencia -> while .)
    RCOR            reduce using rule 40 (sentencia -> while .)
    RPAR            reduce using rule 40 (sentencia -> while .)
    RLLAV           reduce using rule 40 (sentencia -> while .)
    ID              reduce using rule 40 (sentencia -> while .)
    PRINT           reduce using rule 40 (sentencia -> while .)
    LET             reduce using rule 40 (sentencia -> while .)
    CONTINUE        reduce using rule 40 (sentencia -> while .)
    BREAK           reduce using rule 40 (sentencia -> while .)
    RETURN          reduce using rule 40 (sentencia -> while .)
    IF              reduce using rule 40 (sentencia -> while .)
    MATCH           reduce using rule 40 (sentencia -> while .)
    LOOP            reduce using rule 40 (sentencia -> while .)
    WHILE           reduce using rule 40 (sentencia -> while .)
    FOR             reduce using rule 40 (sentencia -> while .)
    LPAR            reduce using rule 40 (sentencia -> while .)
    AD              reduce using rule 40 (sentencia -> while .)
    LCOR            reduce using rule 40 (sentencia -> while .)
    VEC             reduce using rule 40 (sentencia -> while .)
    VECTOR          reduce using rule 40 (sentencia -> while .)
    MUT             reduce using rule 40 (sentencia -> while .)
    ANDSINGLE       reduce using rule 40 (sentencia -> while .)
    I64             reduce using rule 40 (sentencia -> while .)
    F64             reduce using rule 40 (sentencia -> while .)
    ENTERO          reduce using rule 40 (sentencia -> while .)
    DECIMAL         reduce using rule 40 (sentencia -> while .)
    CADENA          reduce using rule 40 (sentencia -> while .)
    BOOLEANO        reduce using rule 40 (sentencia -> while .)
    CARACTER        reduce using rule 40 (sentencia -> while .)
    ARROW2          reduce using rule 40 (sentencia -> while .)
    ORSINGLE        reduce using rule 40 (sentencia -> while .)


state 58

    (41) sentencia -> for .

    PUNTO           reduce using rule 41 (sentencia -> for .)
    MAS             reduce using rule 41 (sentencia -> for .)
    MENOS           reduce using rule 41 (sentencia -> for .)
    MULTIPLICACION  reduce using rule 41 (sentencia -> for .)
    DIVISION        reduce using rule 41 (sentencia -> for .)
    MODULO          reduce using rule 41 (sentencia -> for .)
    AND             reduce using rule 41 (sentencia -> for .)
    OR              reduce using rule 41 (sentencia -> for .)
    IGUALI          reduce using rule 41 (sentencia -> for .)
    DIF             reduce using rule 41 (sentencia -> for .)
    MAYOR           reduce using rule 41 (sentencia -> for .)
    MENOR           reduce using rule 41 (sentencia -> for .)
    MAYORI          reduce using rule 41 (sentencia -> for .)
    MENORI          reduce using rule 41 (sentencia -> for .)
    AS              reduce using rule 41 (sentencia -> for .)
    LLLAV           reduce using rule 41 (sentencia -> for .)
    PCOMA           reduce using rule 41 (sentencia -> for .)
    COMA            reduce using rule 41 (sentencia -> for .)
    RCOR            reduce using rule 41 (sentencia -> for .)
    RPAR            reduce using rule 41 (sentencia -> for .)
    RLLAV           reduce using rule 41 (sentencia -> for .)
    ID              reduce using rule 41 (sentencia -> for .)
    PRINT           reduce using rule 41 (sentencia -> for .)
    LET             reduce using rule 41 (sentencia -> for .)
    CONTINUE        reduce using rule 41 (sentencia -> for .)
    BREAK           reduce using rule 41 (sentencia -> for .)
    RETURN          reduce using rule 41 (sentencia -> for .)
    IF              reduce using rule 41 (sentencia -> for .)
    MATCH           reduce using rule 41 (sentencia -> for .)
    LOOP            reduce using rule 41 (sentencia -> for .)
    WHILE           reduce using rule 41 (sentencia -> for .)
    FOR             reduce using rule 41 (sentencia -> for .)
    LPAR            reduce using rule 41 (sentencia -> for .)
    AD              reduce using rule 41 (sentencia -> for .)
    LCOR            reduce using rule 41 (sentencia -> for .)
    VEC             reduce using rule 41 (sentencia -> for .)
    VECTOR          reduce using rule 41 (sentencia -> for .)
    MUT             reduce using rule 41 (sentencia -> for .)
    ANDSINGLE       reduce using rule 41 (sentencia -> for .)
    I64             reduce using rule 41 (sentencia -> for .)
    F64             reduce using rule 41 (sentencia -> for .)
    ENTERO          reduce using rule 41 (sentencia -> for .)
    DECIMAL         reduce using rule 41 (sentencia -> for .)
    CADENA          reduce using rule 41 (sentencia -> for .)
    BOOLEANO        reduce using rule 41 (sentencia -> for .)
    CARACTER        reduce using rule 41 (sentencia -> for .)
    ARROW2          reduce using rule 41 (sentencia -> for .)
    ORSINGLE        reduce using rule 41 (sentencia -> for .)


state 59

    (157) valores -> ENTERO .

    PUNTO           reduce using rule 157 (valores -> ENTERO .)
    MAS             reduce using rule 157 (valores -> ENTERO .)
    MENOS           reduce using rule 157 (valores -> ENTERO .)
    MULTIPLICACION  reduce using rule 157 (valores -> ENTERO .)
    DIVISION        reduce using rule 157 (valores -> ENTERO .)
    MODULO          reduce using rule 157 (valores -> ENTERO .)
    AND             reduce using rule 157 (valores -> ENTERO .)
    OR              reduce using rule 157 (valores -> ENTERO .)
    IGUALI          reduce using rule 157 (valores -> ENTERO .)
    DIF             reduce using rule 157 (valores -> ENTERO .)
    MAYOR           reduce using rule 157 (valores -> ENTERO .)
    MENOR           reduce using rule 157 (valores -> ENTERO .)
    MAYORI          reduce using rule 157 (valores -> ENTERO .)
    MENORI          reduce using rule 157 (valores -> ENTERO .)
    AS              reduce using rule 157 (valores -> ENTERO .)
    LLLAV           reduce using rule 157 (valores -> ENTERO .)
    PCOMA           reduce using rule 157 (valores -> ENTERO .)
    COMA            reduce using rule 157 (valores -> ENTERO .)
    RCOR            reduce using rule 157 (valores -> ENTERO .)
    RPAR            reduce using rule 157 (valores -> ENTERO .)
    RLLAV           reduce using rule 157 (valores -> ENTERO .)
    ID              reduce using rule 157 (valores -> ENTERO .)
    PRINT           reduce using rule 157 (valores -> ENTERO .)
    LET             reduce using rule 157 (valores -> ENTERO .)
    CONTINUE        reduce using rule 157 (valores -> ENTERO .)
    BREAK           reduce using rule 157 (valores -> ENTERO .)
    RETURN          reduce using rule 157 (valores -> ENTERO .)
    IF              reduce using rule 157 (valores -> ENTERO .)
    MATCH           reduce using rule 157 (valores -> ENTERO .)
    LOOP            reduce using rule 157 (valores -> ENTERO .)
    WHILE           reduce using rule 157 (valores -> ENTERO .)
    FOR             reduce using rule 157 (valores -> ENTERO .)
    LPAR            reduce using rule 157 (valores -> ENTERO .)
    AD              reduce using rule 157 (valores -> ENTERO .)
    LCOR            reduce using rule 157 (valores -> ENTERO .)
    VEC             reduce using rule 157 (valores -> ENTERO .)
    VECTOR          reduce using rule 157 (valores -> ENTERO .)
    MUT             reduce using rule 157 (valores -> ENTERO .)
    ANDSINGLE       reduce using rule 157 (valores -> ENTERO .)
    I64             reduce using rule 157 (valores -> ENTERO .)
    F64             reduce using rule 157 (valores -> ENTERO .)
    ENTERO          reduce using rule 157 (valores -> ENTERO .)
    DECIMAL         reduce using rule 157 (valores -> ENTERO .)
    CADENA          reduce using rule 157 (valores -> ENTERO .)
    BOOLEANO        reduce using rule 157 (valores -> ENTERO .)
    CARACTER        reduce using rule 157 (valores -> ENTERO .)
    ARROW2          reduce using rule 157 (valores -> ENTERO .)
    ORSINGLE        reduce using rule 157 (valores -> ENTERO .)


state 60

    (158) valores -> DECIMAL .

    PUNTO           reduce using rule 158 (valores -> DECIMAL .)
    MAS             reduce using rule 158 (valores -> DECIMAL .)
    MENOS           reduce using rule 158 (valores -> DECIMAL .)
    MULTIPLICACION  reduce using rule 158 (valores -> DECIMAL .)
    DIVISION        reduce using rule 158 (valores -> DECIMAL .)
    MODULO          reduce using rule 158 (valores -> DECIMAL .)
    AND             reduce using rule 158 (valores -> DECIMAL .)
    OR              reduce using rule 158 (valores -> DECIMAL .)
    IGUALI          reduce using rule 158 (valores -> DECIMAL .)
    DIF             reduce using rule 158 (valores -> DECIMAL .)
    MAYOR           reduce using rule 158 (valores -> DECIMAL .)
    MENOR           reduce using rule 158 (valores -> DECIMAL .)
    MAYORI          reduce using rule 158 (valores -> DECIMAL .)
    MENORI          reduce using rule 158 (valores -> DECIMAL .)
    AS              reduce using rule 158 (valores -> DECIMAL .)
    LLLAV           reduce using rule 158 (valores -> DECIMAL .)
    PCOMA           reduce using rule 158 (valores -> DECIMAL .)
    COMA            reduce using rule 158 (valores -> DECIMAL .)
    RCOR            reduce using rule 158 (valores -> DECIMAL .)
    RPAR            reduce using rule 158 (valores -> DECIMAL .)
    RLLAV           reduce using rule 158 (valores -> DECIMAL .)
    ID              reduce using rule 158 (valores -> DECIMAL .)
    PRINT           reduce using rule 158 (valores -> DECIMAL .)
    LET             reduce using rule 158 (valores -> DECIMAL .)
    CONTINUE        reduce using rule 158 (valores -> DECIMAL .)
    BREAK           reduce using rule 158 (valores -> DECIMAL .)
    RETURN          reduce using rule 158 (valores -> DECIMAL .)
    IF              reduce using rule 158 (valores -> DECIMAL .)
    MATCH           reduce using rule 158 (valores -> DECIMAL .)
    LOOP            reduce using rule 158 (valores -> DECIMAL .)
    WHILE           reduce using rule 158 (valores -> DECIMAL .)
    FOR             reduce using rule 158 (valores -> DECIMAL .)
    LPAR            reduce using rule 158 (valores -> DECIMAL .)
    AD              reduce using rule 158 (valores -> DECIMAL .)
    LCOR            reduce using rule 158 (valores -> DECIMAL .)
    VEC             reduce using rule 158 (valores -> DECIMAL .)
    VECTOR          reduce using rule 158 (valores -> DECIMAL .)
    MUT             reduce using rule 158 (valores -> DECIMAL .)
    ANDSINGLE       reduce using rule 158 (valores -> DECIMAL .)
    I64             reduce using rule 158 (valores -> DECIMAL .)
    F64             reduce using rule 158 (valores -> DECIMAL .)
    ENTERO          reduce using rule 158 (valores -> DECIMAL .)
    DECIMAL         reduce using rule 158 (valores -> DECIMAL .)
    CADENA          reduce using rule 158 (valores -> DECIMAL .)
    BOOLEANO        reduce using rule 158 (valores -> DECIMAL .)
    CARACTER        reduce using rule 158 (valores -> DECIMAL .)
    ARROW2          reduce using rule 158 (valores -> DECIMAL .)
    ORSINGLE        reduce using rule 158 (valores -> DECIMAL .)


state 61

    (159) valores -> CADENA .

    PUNTO           reduce using rule 159 (valores -> CADENA .)
    MAS             reduce using rule 159 (valores -> CADENA .)
    MENOS           reduce using rule 159 (valores -> CADENA .)
    MULTIPLICACION  reduce using rule 159 (valores -> CADENA .)
    DIVISION        reduce using rule 159 (valores -> CADENA .)
    MODULO          reduce using rule 159 (valores -> CADENA .)
    AND             reduce using rule 159 (valores -> CADENA .)
    OR              reduce using rule 159 (valores -> CADENA .)
    IGUALI          reduce using rule 159 (valores -> CADENA .)
    DIF             reduce using rule 159 (valores -> CADENA .)
    MAYOR           reduce using rule 159 (valores -> CADENA .)
    MENOR           reduce using rule 159 (valores -> CADENA .)
    MAYORI          reduce using rule 159 (valores -> CADENA .)
    MENORI          reduce using rule 159 (valores -> CADENA .)
    AS              reduce using rule 159 (valores -> CADENA .)
    LLLAV           reduce using rule 159 (valores -> CADENA .)
    PCOMA           reduce using rule 159 (valores -> CADENA .)
    COMA            reduce using rule 159 (valores -> CADENA .)
    RCOR            reduce using rule 159 (valores -> CADENA .)
    RPAR            reduce using rule 159 (valores -> CADENA .)
    RLLAV           reduce using rule 159 (valores -> CADENA .)
    ID              reduce using rule 159 (valores -> CADENA .)
    PRINT           reduce using rule 159 (valores -> CADENA .)
    LET             reduce using rule 159 (valores -> CADENA .)
    CONTINUE        reduce using rule 159 (valores -> CADENA .)
    BREAK           reduce using rule 159 (valores -> CADENA .)
    RETURN          reduce using rule 159 (valores -> CADENA .)
    IF              reduce using rule 159 (valores -> CADENA .)
    MATCH           reduce using rule 159 (valores -> CADENA .)
    LOOP            reduce using rule 159 (valores -> CADENA .)
    WHILE           reduce using rule 159 (valores -> CADENA .)
    FOR             reduce using rule 159 (valores -> CADENA .)
    LPAR            reduce using rule 159 (valores -> CADENA .)
    AD              reduce using rule 159 (valores -> CADENA .)
    LCOR            reduce using rule 159 (valores -> CADENA .)
    VEC             reduce using rule 159 (valores -> CADENA .)
    VECTOR          reduce using rule 159 (valores -> CADENA .)
    MUT             reduce using rule 159 (valores -> CADENA .)
    ANDSINGLE       reduce using rule 159 (valores -> CADENA .)
    I64             reduce using rule 159 (valores -> CADENA .)
    F64             reduce using rule 159 (valores -> CADENA .)
    ENTERO          reduce using rule 159 (valores -> CADENA .)
    DECIMAL         reduce using rule 159 (valores -> CADENA .)
    CADENA          reduce using rule 159 (valores -> CADENA .)
    BOOLEANO        reduce using rule 159 (valores -> CADENA .)
    CARACTER        reduce using rule 159 (valores -> CADENA .)
    ARROW2          reduce using rule 159 (valores -> CADENA .)
    ORSINGLE        reduce using rule 159 (valores -> CADENA .)


state 62

    (160) valores -> BOOLEANO .

    PUNTO           reduce using rule 160 (valores -> BOOLEANO .)
    MAS             reduce using rule 160 (valores -> BOOLEANO .)
    MENOS           reduce using rule 160 (valores -> BOOLEANO .)
    MULTIPLICACION  reduce using rule 160 (valores -> BOOLEANO .)
    DIVISION        reduce using rule 160 (valores -> BOOLEANO .)
    MODULO          reduce using rule 160 (valores -> BOOLEANO .)
    AND             reduce using rule 160 (valores -> BOOLEANO .)
    OR              reduce using rule 160 (valores -> BOOLEANO .)
    IGUALI          reduce using rule 160 (valores -> BOOLEANO .)
    DIF             reduce using rule 160 (valores -> BOOLEANO .)
    MAYOR           reduce using rule 160 (valores -> BOOLEANO .)
    MENOR           reduce using rule 160 (valores -> BOOLEANO .)
    MAYORI          reduce using rule 160 (valores -> BOOLEANO .)
    MENORI          reduce using rule 160 (valores -> BOOLEANO .)
    AS              reduce using rule 160 (valores -> BOOLEANO .)
    LLLAV           reduce using rule 160 (valores -> BOOLEANO .)
    PCOMA           reduce using rule 160 (valores -> BOOLEANO .)
    COMA            reduce using rule 160 (valores -> BOOLEANO .)
    RCOR            reduce using rule 160 (valores -> BOOLEANO .)
    RPAR            reduce using rule 160 (valores -> BOOLEANO .)
    RLLAV           reduce using rule 160 (valores -> BOOLEANO .)
    ID              reduce using rule 160 (valores -> BOOLEANO .)
    PRINT           reduce using rule 160 (valores -> BOOLEANO .)
    LET             reduce using rule 160 (valores -> BOOLEANO .)
    CONTINUE        reduce using rule 160 (valores -> BOOLEANO .)
    BREAK           reduce using rule 160 (valores -> BOOLEANO .)
    RETURN          reduce using rule 160 (valores -> BOOLEANO .)
    IF              reduce using rule 160 (valores -> BOOLEANO .)
    MATCH           reduce using rule 160 (valores -> BOOLEANO .)
    LOOP            reduce using rule 160 (valores -> BOOLEANO .)
    WHILE           reduce using rule 160 (valores -> BOOLEANO .)
    FOR             reduce using rule 160 (valores -> BOOLEANO .)
    LPAR            reduce using rule 160 (valores -> BOOLEANO .)
    AD              reduce using rule 160 (valores -> BOOLEANO .)
    LCOR            reduce using rule 160 (valores -> BOOLEANO .)
    VEC             reduce using rule 160 (valores -> BOOLEANO .)
    VECTOR          reduce using rule 160 (valores -> BOOLEANO .)
    MUT             reduce using rule 160 (valores -> BOOLEANO .)
    ANDSINGLE       reduce using rule 160 (valores -> BOOLEANO .)
    I64             reduce using rule 160 (valores -> BOOLEANO .)
    F64             reduce using rule 160 (valores -> BOOLEANO .)
    ENTERO          reduce using rule 160 (valores -> BOOLEANO .)
    DECIMAL         reduce using rule 160 (valores -> BOOLEANO .)
    CADENA          reduce using rule 160 (valores -> BOOLEANO .)
    BOOLEANO        reduce using rule 160 (valores -> BOOLEANO .)
    CARACTER        reduce using rule 160 (valores -> BOOLEANO .)
    ARROW2          reduce using rule 160 (valores -> BOOLEANO .)
    ORSINGLE        reduce using rule 160 (valores -> BOOLEANO .)


state 63

    (161) valores -> CARACTER .

    PUNTO           reduce using rule 161 (valores -> CARACTER .)
    MAS             reduce using rule 161 (valores -> CARACTER .)
    MENOS           reduce using rule 161 (valores -> CARACTER .)
    MULTIPLICACION  reduce using rule 161 (valores -> CARACTER .)
    DIVISION        reduce using rule 161 (valores -> CARACTER .)
    MODULO          reduce using rule 161 (valores -> CARACTER .)
    AND             reduce using rule 161 (valores -> CARACTER .)
    OR              reduce using rule 161 (valores -> CARACTER .)
    IGUALI          reduce using rule 161 (valores -> CARACTER .)
    DIF             reduce using rule 161 (valores -> CARACTER .)
    MAYOR           reduce using rule 161 (valores -> CARACTER .)
    MENOR           reduce using rule 161 (valores -> CARACTER .)
    MAYORI          reduce using rule 161 (valores -> CARACTER .)
    MENORI          reduce using rule 161 (valores -> CARACTER .)
    AS              reduce using rule 161 (valores -> CARACTER .)
    LLLAV           reduce using rule 161 (valores -> CARACTER .)
    PCOMA           reduce using rule 161 (valores -> CARACTER .)
    COMA            reduce using rule 161 (valores -> CARACTER .)
    RCOR            reduce using rule 161 (valores -> CARACTER .)
    RPAR            reduce using rule 161 (valores -> CARACTER .)
    RLLAV           reduce using rule 161 (valores -> CARACTER .)
    ID              reduce using rule 161 (valores -> CARACTER .)
    PRINT           reduce using rule 161 (valores -> CARACTER .)
    LET             reduce using rule 161 (valores -> CARACTER .)
    CONTINUE        reduce using rule 161 (valores -> CARACTER .)
    BREAK           reduce using rule 161 (valores -> CARACTER .)
    RETURN          reduce using rule 161 (valores -> CARACTER .)
    IF              reduce using rule 161 (valores -> CARACTER .)
    MATCH           reduce using rule 161 (valores -> CARACTER .)
    LOOP            reduce using rule 161 (valores -> CARACTER .)
    WHILE           reduce using rule 161 (valores -> CARACTER .)
    FOR             reduce using rule 161 (valores -> CARACTER .)
    LPAR            reduce using rule 161 (valores -> CARACTER .)
    AD              reduce using rule 161 (valores -> CARACTER .)
    LCOR            reduce using rule 161 (valores -> CARACTER .)
    VEC             reduce using rule 161 (valores -> CARACTER .)
    VECTOR          reduce using rule 161 (valores -> CARACTER .)
    MUT             reduce using rule 161 (valores -> CARACTER .)
    ANDSINGLE       reduce using rule 161 (valores -> CARACTER .)
    I64             reduce using rule 161 (valores -> CARACTER .)
    F64             reduce using rule 161 (valores -> CARACTER .)
    ENTERO          reduce using rule 161 (valores -> CARACTER .)
    DECIMAL         reduce using rule 161 (valores -> CARACTER .)
    CADENA          reduce using rule 161 (valores -> CARACTER .)
    BOOLEANO        reduce using rule 161 (valores -> CARACTER .)
    CARACTER        reduce using rule 161 (valores -> CARACTER .)
    ARROW2          reduce using rule 161 (valores -> CARACTER .)
    ORSINGLE        reduce using rule 161 (valores -> CARACTER .)


state 64

    (47) match -> MATCH . exp match_statement
    (110) exp -> . LPAR exp RPAR
    (111) exp -> . expmath
    (112) exp -> . expop
    (113) exp -> . exprel
    (114) exp -> . exparr
    (115) exp -> . newarray
    (116) exp -> . expvec
    (117) exp -> . exparam
    (118) exp -> . exppow
    (119) exp -> . expcast
    (120) exp -> . lista_acc
    (121) exp -> . llamada
    (122) exp -> . sentencia
    (123) exp -> . valores
    (124) exp -> . exp PUNTO exp_native
    (125) expmath -> . exp MAS exp
    (126) expmath -> . exp MENOS exp
    (127) expmath -> . exp MULTIPLICACION exp
    (128) expmath -> . exp DIVISION exp
    (129) expmath -> . exp MODULO exp
    (130) expmath -> . MENOS exp
    (133) expop -> . exp AND exp
    (134) expop -> . exp OR exp
    (135) expop -> . AD exp
    (137) exprel -> . exp IGUALI exp
    (138) exprel -> . exp DIF exp
    (139) exprel -> . exp MAYOR exp
    (140) exprel -> . exp MENOR exp
    (141) exprel -> . exp MAYORI exp
    (142) exprel -> . exp MENORI exp
    (152) exparr -> . ID lista_arr
    (155) newarray -> . LCOR lista_exp RCOR
    (156) newarray -> . LCOR auxexp PCOMA exp RCOR
    (153) expvec -> . VEC AD newarray
    (154) expvec -> . VECTOR DPUNTOS DPUNTOS exp_natarr
    (148) exparam -> . MUT ID
    (149) exparam -> . MUT valores
    (150) exparam -> . ANDSINGLE MUT ID
    (151) exparam -> . ANDSINGLE MUT valores
    (131) exppow -> . I64 DPUNTOS DPUNTOS POW LPAR exp COMA exp RPAR
    (132) exppow -> . F64 DPUNTOS DPUNTOS POWF LPAR exp COMA exp RPAR
    (136) expcast -> . exp AS tipo_var
    (92) lista_acc -> . lista_acc PUNTO ID
    (93) lista_acc -> . lista_acc PUNTO exp_native
    (94) lista_acc -> . auxacc
    (176) llamada -> . ID LPAR RPAR
    (177) llamada -> . ID LPAR lista_exp RPAR
    (37) sentencia -> . if
    (38) sentencia -> . match
    (39) sentencia -> . loop
    (40) sentencia -> . while
    (41) sentencia -> . for
    (157) valores -> . ENTERO
    (158) valores -> . DECIMAL
    (159) valores -> . CADENA
    (160) valores -> . BOOLEANO
    (161) valores -> . CARACTER
    (95) auxacc -> . exparr
    (96) auxacc -> . ID
    (42) if -> . IF exp statement else
    (47) match -> . MATCH exp match_statement
    (62) loop -> . LOOP statement
    (63) while -> . WHILE exp statement
    (64) for -> . FOR ID IN foriterative statement

    LPAR            shift and go to state 29
    MENOS           shift and go to state 43
    AD              shift and go to state 44
    ID              shift and go to state 45
    LCOR            shift and go to state 46
    VEC             shift and go to state 47
    VECTOR          shift and go to state 48
    MUT             shift and go to state 49
    ANDSINGLE       shift and go to state 50
    I64             shift and go to state 51
    F64             shift and go to state 52
    ENTERO          shift and go to state 59
    DECIMAL         shift and go to state 60
    CADENA          shift and go to state 61
    BOOLEANO        shift and go to state 62
    CARACTER        shift and go to state 63
    IF              shift and go to state 12
    MATCH           shift and go to state 64
    LOOP            shift and go to state 65
    WHILE           shift and go to state 13
    FOR             shift and go to state 66

    exp                            shift and go to state 117
    expmath                        shift and go to state 30
    expop                          shift and go to state 31
    exprel                         shift and go to state 32
    exparr                         shift and go to state 33
    newarray                       shift and go to state 34
    expvec                         shift and go to state 35
    exparam                        shift and go to state 36
    exppow                         shift and go to state 37
    expcast                        shift and go to state 38
    lista_acc                      shift and go to state 39
    llamada                        shift and go to state 40
    sentencia                      shift and go to state 41
    valores                        shift and go to state 42
    auxacc                         shift and go to state 53
    if                             shift and go to state 54
    match                          shift and go to state 55
    loop                           shift and go to state 56
    while                          shift and go to state 57
    for                            shift and go to state 58

state 65

    (62) loop -> LOOP . statement
    (73) statement -> . LLLAV instrucciones_l RLLAV
    (74) statement -> . LLLAV RLLAV

    LLLAV           shift and go to state 101

    statement                      shift and go to state 118

state 66

    (64) for -> FOR . ID IN foriterative statement

    ID              shift and go to state 119


state 67

    (63) while -> WHILE exp . statement
    (124) exp -> exp . PUNTO exp_native
    (125) expmath -> exp . MAS exp
    (126) expmath -> exp . MENOS exp
    (127) expmath -> exp . MULTIPLICACION exp
    (128) expmath -> exp . DIVISION exp
    (129) expmath -> exp . MODULO exp
    (133) expop -> exp . AND exp
    (134) expop -> exp . OR exp
    (137) exprel -> exp . IGUALI exp
    (138) exprel -> exp . DIF exp
    (139) exprel -> exp . MAYOR exp
    (140) exprel -> exp . MENOR exp
    (141) exprel -> exp . MAYORI exp
    (142) exprel -> exp . MENORI exp
    (136) expcast -> exp . AS tipo_var
    (73) statement -> . LLLAV instrucciones_l RLLAV
    (74) statement -> . LLLAV RLLAV

    PUNTO           shift and go to state 86
    MAS             shift and go to state 87
    MENOS           shift and go to state 88
    MULTIPLICACION  shift and go to state 89
    DIVISION        shift and go to state 90
    MODULO          shift and go to state 91
    AND             shift and go to state 92
    OR              shift and go to state 93
    IGUALI          shift and go to state 94
    DIF             shift and go to state 95
    MAYOR           shift and go to state 96
    MENOR           shift and go to state 97
    MAYORI          shift and go to state 98
    MENORI          shift and go to state 99
    AS              shift and go to state 100
    LLLAV           shift and go to state 101

    statement                      shift and go to state 120

state 68

    (81) declaracion -> LET asignacion_simple IGUAL . auxexp
    (108) auxexp -> . expstruct
    (109) auxexp -> . exp
    (143) expstruct -> . lista_classtype LLLAV lista_att RLLAV
    (144) expstruct -> . lista_classtype LLLAV RLLAV
    (145) expstruct -> . lista_classtype DPUNTOS DPUNTOS llamada
    (110) exp -> . LPAR exp RPAR
    (111) exp -> . expmath
    (112) exp -> . expop
    (113) exp -> . exprel
    (114) exp -> . exparr
    (115) exp -> . newarray
    (116) exp -> . expvec
    (117) exp -> . exparam
    (118) exp -> . exppow
    (119) exp -> . expcast
    (120) exp -> . lista_acc
    (121) exp -> . llamada
    (122) exp -> . sentencia
    (123) exp -> . valores
    (124) exp -> . exp PUNTO exp_native
    (174) lista_classtype -> . lista_classtype DPUNTOS DPUNTOS ID
    (175) lista_classtype -> . ID
    (125) expmath -> . exp MAS exp
    (126) expmath -> . exp MENOS exp
    (127) expmath -> . exp MULTIPLICACION exp
    (128) expmath -> . exp DIVISION exp
    (129) expmath -> . exp MODULO exp
    (130) expmath -> . MENOS exp
    (133) expop -> . exp AND exp
    (134) expop -> . exp OR exp
    (135) expop -> . AD exp
    (137) exprel -> . exp IGUALI exp
    (138) exprel -> . exp DIF exp
    (139) exprel -> . exp MAYOR exp
    (140) exprel -> . exp MENOR exp
    (141) exprel -> . exp MAYORI exp
    (142) exprel -> . exp MENORI exp
    (152) exparr -> . ID lista_arr
    (155) newarray -> . LCOR lista_exp RCOR
    (156) newarray -> . LCOR auxexp PCOMA exp RCOR
    (153) expvec -> . VEC AD newarray
    (154) expvec -> . VECTOR DPUNTOS DPUNTOS exp_natarr
    (148) exparam -> . MUT ID
    (149) exparam -> . MUT valores
    (150) exparam -> . ANDSINGLE MUT ID
    (151) exparam -> . ANDSINGLE MUT valores
    (131) exppow -> . I64 DPUNTOS DPUNTOS POW LPAR exp COMA exp RPAR
    (132) exppow -> . F64 DPUNTOS DPUNTOS POWF LPAR exp COMA exp RPAR
    (136) expcast -> . exp AS tipo_var
    (92) lista_acc -> . lista_acc PUNTO ID
    (93) lista_acc -> . lista_acc PUNTO exp_native
    (94) lista_acc -> . auxacc
    (176) llamada -> . ID LPAR RPAR
    (177) llamada -> . ID LPAR lista_exp RPAR
    (37) sentencia -> . if
    (38) sentencia -> . match
    (39) sentencia -> . loop
    (40) sentencia -> . while
    (41) sentencia -> . for
    (157) valores -> . ENTERO
    (158) valores -> . DECIMAL
    (159) valores -> . CADENA
    (160) valores -> . BOOLEANO
    (161) valores -> . CARACTER
    (95) auxacc -> . exparr
    (96) auxacc -> . ID
    (42) if -> . IF exp statement else
    (47) match -> . MATCH exp match_statement
    (62) loop -> . LOOP statement
    (63) while -> . WHILE exp statement
    (64) for -> . FOR ID IN foriterative statement

    LPAR            shift and go to state 29
    ID              shift and go to state 72
    MENOS           shift and go to state 43
    AD              shift and go to state 44
    LCOR            shift and go to state 46
    VEC             shift and go to state 47
    VECTOR          shift and go to state 48
    MUT             shift and go to state 49
    ANDSINGLE       shift and go to state 50
    I64             shift and go to state 51
    F64             shift and go to state 52
    ENTERO          shift and go to state 59
    DECIMAL         shift and go to state 60
    CADENA          shift and go to state 61
    BOOLEANO        shift and go to state 62
    CARACTER        shift and go to state 63
    IF              shift and go to state 12
    MATCH           shift and go to state 64
    LOOP            shift and go to state 65
    WHILE           shift and go to state 13
    FOR             shift and go to state 66

    auxexp                         shift and go to state 121
    expstruct                      shift and go to state 74
    exp                            shift and go to state 75
    lista_classtype                shift and go to state 76
    llamada                        shift and go to state 40
    expmath                        shift and go to state 30
    expop                          shift and go to state 31
    exprel                         shift and go to state 32
    exparr                         shift and go to state 33
    newarray                       shift and go to state 34
    expvec                         shift and go to state 35
    exparam                        shift and go to state 36
    exppow                         shift and go to state 37
    expcast                        shift and go to state 38
    lista_acc                      shift and go to state 39
    sentencia                      shift and go to state 41
    valores                        shift and go to state 42
    auxacc                         shift and go to state 53
    if                             shift and go to state 54
    match                          shift and go to state 55
    loop                           shift and go to state 56
    while                          shift and go to state 57
    for                            shift and go to state 58

state 69

    (82) declaracion -> LET MUT asignacion .

    PCOMA           reduce using rule 82 (declaracion -> LET MUT asignacion .)


state 70

    (102) asignacion_simple -> MUT ID . DPUNTOS tipo_var
    (104) asignacion_simple -> MUT ID . DPUNTOS ANDSINGLE tipo_var
    (106) asignacion_simple -> MUT ID . DPUNTOS ANDSINGLE MUT tipo_var
    (84) asignacion -> ID . IGUAL auxexp
    (85) asignacion -> ID . lista_assign2 IGUAL auxexp
    (86) asignacion -> ID . lista_arr IGUAL auxexp
    (87) asignacion -> ID . lista_arr lista_assign2 IGUAL auxexp
    (88) lista_assign2 -> . lista_assign2 PUNTO ID
    (89) lista_assign2 -> . PUNTO ID
    (97) lista_arr -> . lista_arr LCOR auxexp RCOR
    (98) lista_arr -> . LCOR auxexp RCOR

    DPUNTOS         shift and go to state 122
    IGUAL           shift and go to state 22
    PUNTO           shift and go to state 25
    LCOR            shift and go to state 26

    lista_assign2                  shift and go to state 23
    lista_arr                      shift and go to state 24

state 71

    (101) asignacion_simple -> ID DPUNTOS . tipo_var
    (103) asignacion_simple -> ID DPUNTOS . ANDSINGLE tipo_var
    (105) asignacion_simple -> ID DPUNTOS . ANDSINGLE MUT tipo_var
    (162) tipo_var -> . I64
    (163) tipo_var -> . F64
    (164) tipo_var -> . STRING
    (165) tipo_var -> . ANDSINGLE aSTR
    (166) tipo_var -> . BOOL
    (167) tipo_var -> . CHAR
    (168) tipo_var -> . USIZE
    (169) tipo_var -> . lista_arr2
    (170) tipo_var -> . LCOR tipo_var RCOR
    (171) tipo_var -> . lista_classtype
    (172) tipo_var -> . VECTOR MENOR tipo_var MAYOR
    (173) tipo_var -> . VECTOR MENOR lista_classtype MAYOR
    (107) lista_arr2 -> . LCOR tipo_var PCOMA exp RCOR
    (174) lista_classtype -> . lista_classtype DPUNTOS DPUNTOS ID
    (175) lista_classtype -> . ID

    ANDSINGLE       shift and go to state 125
    I64             shift and go to state 126
    F64             shift and go to state 127
    STRING          shift and go to state 128
    BOOL            shift and go to state 129
    CHAR            shift and go to state 130
    USIZE           shift and go to state 131
    LCOR            shift and go to state 133
    VECTOR          shift and go to state 135
    ID              shift and go to state 123

    tipo_var                       shift and go to state 124
    lista_arr2                     shift and go to state 132
    lista_classtype                shift and go to state 134

state 72

    (175) lista_classtype -> ID .
    (152) exparr -> ID . lista_arr
    (176) llamada -> ID . LPAR RPAR
    (177) llamada -> ID . LPAR lista_exp RPAR
    (96) auxacc -> ID .
    (97) lista_arr -> . lista_arr LCOR auxexp RCOR
    (98) lista_arr -> . LCOR auxexp RCOR

  ! shift/reduce conflict for LPAR resolved as shift
  ! shift/reduce conflict for LCOR resolved as shift
    LLLAV           reduce using rule 175 (lista_classtype -> ID .)
    DPUNTOS         reduce using rule 175 (lista_classtype -> ID .)
    LPAR            shift and go to state 107
    PUNTO           reduce using rule 96 (auxacc -> ID .)
    MAS             reduce using rule 96 (auxacc -> ID .)
    MENOS           reduce using rule 96 (auxacc -> ID .)
    MULTIPLICACION  reduce using rule 96 (auxacc -> ID .)
    DIVISION        reduce using rule 96 (auxacc -> ID .)
    MODULO          reduce using rule 96 (auxacc -> ID .)
    AND             reduce using rule 96 (auxacc -> ID .)
    OR              reduce using rule 96 (auxacc -> ID .)
    IGUALI          reduce using rule 96 (auxacc -> ID .)
    DIF             reduce using rule 96 (auxacc -> ID .)
    MAYOR           reduce using rule 96 (auxacc -> ID .)
    MENOR           reduce using rule 96 (auxacc -> ID .)
    MAYORI          reduce using rule 96 (auxacc -> ID .)
    MENORI          reduce using rule 96 (auxacc -> ID .)
    AS              reduce using rule 96 (auxacc -> ID .)
    PCOMA           reduce using rule 96 (auxacc -> ID .)
    COMA            reduce using rule 96 (auxacc -> ID .)
    RCOR            reduce using rule 96 (auxacc -> ID .)
    RPAR            reduce using rule 96 (auxacc -> ID .)
    RLLAV           reduce using rule 96 (auxacc -> ID .)
    ID              reduce using rule 96 (auxacc -> ID .)
    PRINT           reduce using rule 96 (auxacc -> ID .)
    LET             reduce using rule 96 (auxacc -> ID .)
    CONTINUE        reduce using rule 96 (auxacc -> ID .)
    BREAK           reduce using rule 96 (auxacc -> ID .)
    RETURN          reduce using rule 96 (auxacc -> ID .)
    IF              reduce using rule 96 (auxacc -> ID .)
    MATCH           reduce using rule 96 (auxacc -> ID .)
    LOOP            reduce using rule 96 (auxacc -> ID .)
    WHILE           reduce using rule 96 (auxacc -> ID .)
    FOR             reduce using rule 96 (auxacc -> ID .)
    AD              reduce using rule 96 (auxacc -> ID .)
    VEC             reduce using rule 96 (auxacc -> ID .)
    VECTOR          reduce using rule 96 (auxacc -> ID .)
    MUT             reduce using rule 96 (auxacc -> ID .)
    ANDSINGLE       reduce using rule 96 (auxacc -> ID .)
    I64             reduce using rule 96 (auxacc -> ID .)
    F64             reduce using rule 96 (auxacc -> ID .)
    ENTERO          reduce using rule 96 (auxacc -> ID .)
    DECIMAL         reduce using rule 96 (auxacc -> ID .)
    CADENA          reduce using rule 96 (auxacc -> ID .)
    BOOLEANO        reduce using rule 96 (auxacc -> ID .)
    CARACTER        reduce using rule 96 (auxacc -> ID .)
    LCOR            shift and go to state 26

  ! LPAR            [ reduce using rule 96 (auxacc -> ID .) ]
  ! LCOR            [ reduce using rule 96 (auxacc -> ID .) ]

    lista_arr                      shift and go to state 106

state 73

    (84) asignacion -> ID IGUAL auxexp .

    PCOMA           reduce using rule 84 (asignacion -> ID IGUAL auxexp .)
    COMA            reduce using rule 84 (asignacion -> ID IGUAL auxexp .)


state 74

    (108) auxexp -> expstruct .

    PCOMA           reduce using rule 108 (auxexp -> expstruct .)
    COMA            reduce using rule 108 (auxexp -> expstruct .)
    RCOR            reduce using rule 108 (auxexp -> expstruct .)
    RPAR            reduce using rule 108 (auxexp -> expstruct .)
    RLLAV           reduce using rule 108 (auxexp -> expstruct .)
    ID              reduce using rule 108 (auxexp -> expstruct .)
    PRINT           reduce using rule 108 (auxexp -> expstruct .)
    LET             reduce using rule 108 (auxexp -> expstruct .)
    CONTINUE        reduce using rule 108 (auxexp -> expstruct .)
    BREAK           reduce using rule 108 (auxexp -> expstruct .)
    RETURN          reduce using rule 108 (auxexp -> expstruct .)
    IF              reduce using rule 108 (auxexp -> expstruct .)
    MATCH           reduce using rule 108 (auxexp -> expstruct .)
    LOOP            reduce using rule 108 (auxexp -> expstruct .)
    WHILE           reduce using rule 108 (auxexp -> expstruct .)
    FOR             reduce using rule 108 (auxexp -> expstruct .)
    LPAR            reduce using rule 108 (auxexp -> expstruct .)
    MENOS           reduce using rule 108 (auxexp -> expstruct .)
    AD              reduce using rule 108 (auxexp -> expstruct .)
    LCOR            reduce using rule 108 (auxexp -> expstruct .)
    VEC             reduce using rule 108 (auxexp -> expstruct .)
    VECTOR          reduce using rule 108 (auxexp -> expstruct .)
    MUT             reduce using rule 108 (auxexp -> expstruct .)
    ANDSINGLE       reduce using rule 108 (auxexp -> expstruct .)
    I64             reduce using rule 108 (auxexp -> expstruct .)
    F64             reduce using rule 108 (auxexp -> expstruct .)
    ENTERO          reduce using rule 108 (auxexp -> expstruct .)
    DECIMAL         reduce using rule 108 (auxexp -> expstruct .)
    CADENA          reduce using rule 108 (auxexp -> expstruct .)
    BOOLEANO        reduce using rule 108 (auxexp -> expstruct .)
    CARACTER        reduce using rule 108 (auxexp -> expstruct .)


state 75

    (109) auxexp -> exp .
    (124) exp -> exp . PUNTO exp_native
    (125) expmath -> exp . MAS exp
    (126) expmath -> exp . MENOS exp
    (127) expmath -> exp . MULTIPLICACION exp
    (128) expmath -> exp . DIVISION exp
    (129) expmath -> exp . MODULO exp
    (133) expop -> exp . AND exp
    (134) expop -> exp . OR exp
    (137) exprel -> exp . IGUALI exp
    (138) exprel -> exp . DIF exp
    (139) exprel -> exp . MAYOR exp
    (140) exprel -> exp . MENOR exp
    (141) exprel -> exp . MAYORI exp
    (142) exprel -> exp . MENORI exp
    (136) expcast -> exp . AS tipo_var

  ! shift/reduce conflict for MENOS resolved as shift
    PCOMA           reduce using rule 109 (auxexp -> exp .)
    COMA            reduce using rule 109 (auxexp -> exp .)
    RCOR            reduce using rule 109 (auxexp -> exp .)
    RPAR            reduce using rule 109 (auxexp -> exp .)
    RLLAV           reduce using rule 109 (auxexp -> exp .)
    ID              reduce using rule 109 (auxexp -> exp .)
    PRINT           reduce using rule 109 (auxexp -> exp .)
    LET             reduce using rule 109 (auxexp -> exp .)
    CONTINUE        reduce using rule 109 (auxexp -> exp .)
    BREAK           reduce using rule 109 (auxexp -> exp .)
    RETURN          reduce using rule 109 (auxexp -> exp .)
    IF              reduce using rule 109 (auxexp -> exp .)
    MATCH           reduce using rule 109 (auxexp -> exp .)
    LOOP            reduce using rule 109 (auxexp -> exp .)
    WHILE           reduce using rule 109 (auxexp -> exp .)
    FOR             reduce using rule 109 (auxexp -> exp .)
    LPAR            reduce using rule 109 (auxexp -> exp .)
    AD              reduce using rule 109 (auxexp -> exp .)
    LCOR            reduce using rule 109 (auxexp -> exp .)
    VEC             reduce using rule 109 (auxexp -> exp .)
    VECTOR          reduce using rule 109 (auxexp -> exp .)
    MUT             reduce using rule 109 (auxexp -> exp .)
    ANDSINGLE       reduce using rule 109 (auxexp -> exp .)
    I64             reduce using rule 109 (auxexp -> exp .)
    F64             reduce using rule 109 (auxexp -> exp .)
    ENTERO          reduce using rule 109 (auxexp -> exp .)
    DECIMAL         reduce using rule 109 (auxexp -> exp .)
    CADENA          reduce using rule 109 (auxexp -> exp .)
    BOOLEANO        reduce using rule 109 (auxexp -> exp .)
    CARACTER        reduce using rule 109 (auxexp -> exp .)
    PUNTO           shift and go to state 86
    MAS             shift and go to state 87
    MENOS           shift and go to state 88
    MULTIPLICACION  shift and go to state 89
    DIVISION        shift and go to state 90
    MODULO          shift and go to state 91
    AND             shift and go to state 92
    OR              shift and go to state 93
    IGUALI          shift and go to state 94
    DIF             shift and go to state 95
    MAYOR           shift and go to state 96
    MENOR           shift and go to state 97
    MAYORI          shift and go to state 98
    MENORI          shift and go to state 99
    AS              shift and go to state 100

  ! MENOS           [ reduce using rule 109 (auxexp -> exp .) ]


state 76

    (143) expstruct -> lista_classtype . LLLAV lista_att RLLAV
    (144) expstruct -> lista_classtype . LLLAV RLLAV
    (145) expstruct -> lista_classtype . DPUNTOS DPUNTOS llamada
    (174) lista_classtype -> lista_classtype . DPUNTOS DPUNTOS ID

    LLLAV           shift and go to state 136
    DPUNTOS         shift and go to state 137


state 77

    (85) asignacion -> ID lista_assign2 IGUAL . auxexp
    (108) auxexp -> . expstruct
    (109) auxexp -> . exp
    (143) expstruct -> . lista_classtype LLLAV lista_att RLLAV
    (144) expstruct -> . lista_classtype LLLAV RLLAV
    (145) expstruct -> . lista_classtype DPUNTOS DPUNTOS llamada
    (110) exp -> . LPAR exp RPAR
    (111) exp -> . expmath
    (112) exp -> . expop
    (113) exp -> . exprel
    (114) exp -> . exparr
    (115) exp -> . newarray
    (116) exp -> . expvec
    (117) exp -> . exparam
    (118) exp -> . exppow
    (119) exp -> . expcast
    (120) exp -> . lista_acc
    (121) exp -> . llamada
    (122) exp -> . sentencia
    (123) exp -> . valores
    (124) exp -> . exp PUNTO exp_native
    (174) lista_classtype -> . lista_classtype DPUNTOS DPUNTOS ID
    (175) lista_classtype -> . ID
    (125) expmath -> . exp MAS exp
    (126) expmath -> . exp MENOS exp
    (127) expmath -> . exp MULTIPLICACION exp
    (128) expmath -> . exp DIVISION exp
    (129) expmath -> . exp MODULO exp
    (130) expmath -> . MENOS exp
    (133) expop -> . exp AND exp
    (134) expop -> . exp OR exp
    (135) expop -> . AD exp
    (137) exprel -> . exp IGUALI exp
    (138) exprel -> . exp DIF exp
    (139) exprel -> . exp MAYOR exp
    (140) exprel -> . exp MENOR exp
    (141) exprel -> . exp MAYORI exp
    (142) exprel -> . exp MENORI exp
    (152) exparr -> . ID lista_arr
    (155) newarray -> . LCOR lista_exp RCOR
    (156) newarray -> . LCOR auxexp PCOMA exp RCOR
    (153) expvec -> . VEC AD newarray
    (154) expvec -> . VECTOR DPUNTOS DPUNTOS exp_natarr
    (148) exparam -> . MUT ID
    (149) exparam -> . MUT valores
    (150) exparam -> . ANDSINGLE MUT ID
    (151) exparam -> . ANDSINGLE MUT valores
    (131) exppow -> . I64 DPUNTOS DPUNTOS POW LPAR exp COMA exp RPAR
    (132) exppow -> . F64 DPUNTOS DPUNTOS POWF LPAR exp COMA exp RPAR
    (136) expcast -> . exp AS tipo_var
    (92) lista_acc -> . lista_acc PUNTO ID
    (93) lista_acc -> . lista_acc PUNTO exp_native
    (94) lista_acc -> . auxacc
    (176) llamada -> . ID LPAR RPAR
    (177) llamada -> . ID LPAR lista_exp RPAR
    (37) sentencia -> . if
    (38) sentencia -> . match
    (39) sentencia -> . loop
    (40) sentencia -> . while
    (41) sentencia -> . for
    (157) valores -> . ENTERO
    (158) valores -> . DECIMAL
    (159) valores -> . CADENA
    (160) valores -> . BOOLEANO
    (161) valores -> . CARACTER
    (95) auxacc -> . exparr
    (96) auxacc -> . ID
    (42) if -> . IF exp statement else
    (47) match -> . MATCH exp match_statement
    (62) loop -> . LOOP statement
    (63) while -> . WHILE exp statement
    (64) for -> . FOR ID IN foriterative statement

    LPAR            shift and go to state 29
    ID              shift and go to state 72
    MENOS           shift and go to state 43
    AD              shift and go to state 44
    LCOR            shift and go to state 46
    VEC             shift and go to state 47
    VECTOR          shift and go to state 48
    MUT             shift and go to state 49
    ANDSINGLE       shift and go to state 50
    I64             shift and go to state 51
    F64             shift and go to state 52
    ENTERO          shift and go to state 59
    DECIMAL         shift and go to state 60
    CADENA          shift and go to state 61
    BOOLEANO        shift and go to state 62
    CARACTER        shift and go to state 63
    IF              shift and go to state 12
    MATCH           shift and go to state 64
    LOOP            shift and go to state 65
    WHILE           shift and go to state 13
    FOR             shift and go to state 66

    auxexp                         shift and go to state 138
    expstruct                      shift and go to state 74
    exp                            shift and go to state 75
    lista_classtype                shift and go to state 76
    llamada                        shift and go to state 40
    expmath                        shift and go to state 30
    expop                          shift and go to state 31
    exprel                         shift and go to state 32
    exparr                         shift and go to state 33
    newarray                       shift and go to state 34
    expvec                         shift and go to state 35
    exparam                        shift and go to state 36
    exppow                         shift and go to state 37
    expcast                        shift and go to state 38
    lista_acc                      shift and go to state 39
    sentencia                      shift and go to state 41
    valores                        shift and go to state 42
    auxacc                         shift and go to state 53
    if                             shift and go to state 54
    match                          shift and go to state 55
    loop                           shift and go to state 56
    while                          shift and go to state 57
    for                            shift and go to state 58

state 78

    (88) lista_assign2 -> lista_assign2 PUNTO . ID

    ID              shift and go to state 139


state 79

    (86) asignacion -> ID lista_arr IGUAL . auxexp
    (108) auxexp -> . expstruct
    (109) auxexp -> . exp
    (143) expstruct -> . lista_classtype LLLAV lista_att RLLAV
    (144) expstruct -> . lista_classtype LLLAV RLLAV
    (145) expstruct -> . lista_classtype DPUNTOS DPUNTOS llamada
    (110) exp -> . LPAR exp RPAR
    (111) exp -> . expmath
    (112) exp -> . expop
    (113) exp -> . exprel
    (114) exp -> . exparr
    (115) exp -> . newarray
    (116) exp -> . expvec
    (117) exp -> . exparam
    (118) exp -> . exppow
    (119) exp -> . expcast
    (120) exp -> . lista_acc
    (121) exp -> . llamada
    (122) exp -> . sentencia
    (123) exp -> . valores
    (124) exp -> . exp PUNTO exp_native
    (174) lista_classtype -> . lista_classtype DPUNTOS DPUNTOS ID
    (175) lista_classtype -> . ID
    (125) expmath -> . exp MAS exp
    (126) expmath -> . exp MENOS exp
    (127) expmath -> . exp MULTIPLICACION exp
    (128) expmath -> . exp DIVISION exp
    (129) expmath -> . exp MODULO exp
    (130) expmath -> . MENOS exp
    (133) expop -> . exp AND exp
    (134) expop -> . exp OR exp
    (135) expop -> . AD exp
    (137) exprel -> . exp IGUALI exp
    (138) exprel -> . exp DIF exp
    (139) exprel -> . exp MAYOR exp
    (140) exprel -> . exp MENOR exp
    (141) exprel -> . exp MAYORI exp
    (142) exprel -> . exp MENORI exp
    (152) exparr -> . ID lista_arr
    (155) newarray -> . LCOR lista_exp RCOR
    (156) newarray -> . LCOR auxexp PCOMA exp RCOR
    (153) expvec -> . VEC AD newarray
    (154) expvec -> . VECTOR DPUNTOS DPUNTOS exp_natarr
    (148) exparam -> . MUT ID
    (149) exparam -> . MUT valores
    (150) exparam -> . ANDSINGLE MUT ID
    (151) exparam -> . ANDSINGLE MUT valores
    (131) exppow -> . I64 DPUNTOS DPUNTOS POW LPAR exp COMA exp RPAR
    (132) exppow -> . F64 DPUNTOS DPUNTOS POWF LPAR exp COMA exp RPAR
    (136) expcast -> . exp AS tipo_var
    (92) lista_acc -> . lista_acc PUNTO ID
    (93) lista_acc -> . lista_acc PUNTO exp_native
    (94) lista_acc -> . auxacc
    (176) llamada -> . ID LPAR RPAR
    (177) llamada -> . ID LPAR lista_exp RPAR
    (37) sentencia -> . if
    (38) sentencia -> . match
    (39) sentencia -> . loop
    (40) sentencia -> . while
    (41) sentencia -> . for
    (157) valores -> . ENTERO
    (158) valores -> . DECIMAL
    (159) valores -> . CADENA
    (160) valores -> . BOOLEANO
    (161) valores -> . CARACTER
    (95) auxacc -> . exparr
    (96) auxacc -> . ID
    (42) if -> . IF exp statement else
    (47) match -> . MATCH exp match_statement
    (62) loop -> . LOOP statement
    (63) while -> . WHILE exp statement
    (64) for -> . FOR ID IN foriterative statement

    LPAR            shift and go to state 29
    ID              shift and go to state 72
    MENOS           shift and go to state 43
    AD              shift and go to state 44
    LCOR            shift and go to state 46
    VEC             shift and go to state 47
    VECTOR          shift and go to state 48
    MUT             shift and go to state 49
    ANDSINGLE       shift and go to state 50
    I64             shift and go to state 51
    F64             shift and go to state 52
    ENTERO          shift and go to state 59
    DECIMAL         shift and go to state 60
    CADENA          shift and go to state 61
    BOOLEANO        shift and go to state 62
    CARACTER        shift and go to state 63
    IF              shift and go to state 12
    MATCH           shift and go to state 64
    LOOP            shift and go to state 65
    WHILE           shift and go to state 13
    FOR             shift and go to state 66

    auxexp                         shift and go to state 140
    expstruct                      shift and go to state 74
    exp                            shift and go to state 75
    lista_classtype                shift and go to state 76
    llamada                        shift and go to state 40
    expmath                        shift and go to state 30
    expop                          shift and go to state 31
    exprel                         shift and go to state 32
    exparr                         shift and go to state 33
    newarray                       shift and go to state 34
    expvec                         shift and go to state 35
    exparam                        shift and go to state 36
    exppow                         shift and go to state 37
    expcast                        shift and go to state 38
    lista_acc                      shift and go to state 39
    sentencia                      shift and go to state 41
    valores                        shift and go to state 42
    auxacc                         shift and go to state 53
    if                             shift and go to state 54
    match                          shift and go to state 55
    loop                           shift and go to state 56
    while                          shift and go to state 57
    for                            shift and go to state 58

state 80

    (87) asignacion -> ID lista_arr lista_assign2 . IGUAL auxexp
    (88) lista_assign2 -> lista_assign2 . PUNTO ID

    IGUAL           shift and go to state 141
    PUNTO           shift and go to state 78


state 81

    (97) lista_arr -> lista_arr LCOR . auxexp RCOR
    (108) auxexp -> . expstruct
    (109) auxexp -> . exp
    (143) expstruct -> . lista_classtype LLLAV lista_att RLLAV
    (144) expstruct -> . lista_classtype LLLAV RLLAV
    (145) expstruct -> . lista_classtype DPUNTOS DPUNTOS llamada
    (110) exp -> . LPAR exp RPAR
    (111) exp -> . expmath
    (112) exp -> . expop
    (113) exp -> . exprel
    (114) exp -> . exparr
    (115) exp -> . newarray
    (116) exp -> . expvec
    (117) exp -> . exparam
    (118) exp -> . exppow
    (119) exp -> . expcast
    (120) exp -> . lista_acc
    (121) exp -> . llamada
    (122) exp -> . sentencia
    (123) exp -> . valores
    (124) exp -> . exp PUNTO exp_native
    (174) lista_classtype -> . lista_classtype DPUNTOS DPUNTOS ID
    (175) lista_classtype -> . ID
    (125) expmath -> . exp MAS exp
    (126) expmath -> . exp MENOS exp
    (127) expmath -> . exp MULTIPLICACION exp
    (128) expmath -> . exp DIVISION exp
    (129) expmath -> . exp MODULO exp
    (130) expmath -> . MENOS exp
    (133) expop -> . exp AND exp
    (134) expop -> . exp OR exp
    (135) expop -> . AD exp
    (137) exprel -> . exp IGUALI exp
    (138) exprel -> . exp DIF exp
    (139) exprel -> . exp MAYOR exp
    (140) exprel -> . exp MENOR exp
    (141) exprel -> . exp MAYORI exp
    (142) exprel -> . exp MENORI exp
    (152) exparr -> . ID lista_arr
    (155) newarray -> . LCOR lista_exp RCOR
    (156) newarray -> . LCOR auxexp PCOMA exp RCOR
    (153) expvec -> . VEC AD newarray
    (154) expvec -> . VECTOR DPUNTOS DPUNTOS exp_natarr
    (148) exparam -> . MUT ID
    (149) exparam -> . MUT valores
    (150) exparam -> . ANDSINGLE MUT ID
    (151) exparam -> . ANDSINGLE MUT valores
    (131) exppow -> . I64 DPUNTOS DPUNTOS POW LPAR exp COMA exp RPAR
    (132) exppow -> . F64 DPUNTOS DPUNTOS POWF LPAR exp COMA exp RPAR
    (136) expcast -> . exp AS tipo_var
    (92) lista_acc -> . lista_acc PUNTO ID
    (93) lista_acc -> . lista_acc PUNTO exp_native
    (94) lista_acc -> . auxacc
    (176) llamada -> . ID LPAR RPAR
    (177) llamada -> . ID LPAR lista_exp RPAR
    (37) sentencia -> . if
    (38) sentencia -> . match
    (39) sentencia -> . loop
    (40) sentencia -> . while
    (41) sentencia -> . for
    (157) valores -> . ENTERO
    (158) valores -> . DECIMAL
    (159) valores -> . CADENA
    (160) valores -> . BOOLEANO
    (161) valores -> . CARACTER
    (95) auxacc -> . exparr
    (96) auxacc -> . ID
    (42) if -> . IF exp statement else
    (47) match -> . MATCH exp match_statement
    (62) loop -> . LOOP statement
    (63) while -> . WHILE exp statement
    (64) for -> . FOR ID IN foriterative statement

    LPAR            shift and go to state 29
    ID              shift and go to state 72
    MENOS           shift and go to state 43
    AD              shift and go to state 44
    LCOR            shift and go to state 46
    VEC             shift and go to state 47
    VECTOR          shift and go to state 48
    MUT             shift and go to state 49
    ANDSINGLE       shift and go to state 50
    I64             shift and go to state 51
    F64             shift and go to state 52
    ENTERO          shift and go to state 59
    DECIMAL         shift and go to state 60
    CADENA          shift and go to state 61
    BOOLEANO        shift and go to state 62
    CARACTER        shift and go to state 63
    IF              shift and go to state 12
    MATCH           shift and go to state 64
    LOOP            shift and go to state 65
    WHILE           shift and go to state 13
    FOR             shift and go to state 66

    auxexp                         shift and go to state 142
    expstruct                      shift and go to state 74
    exp                            shift and go to state 75
    lista_classtype                shift and go to state 76
    llamada                        shift and go to state 40
    expmath                        shift and go to state 30
    expop                          shift and go to state 31
    exprel                         shift and go to state 32
    exparr                         shift and go to state 33
    newarray                       shift and go to state 34
    expvec                         shift and go to state 35
    exparam                        shift and go to state 36
    exppow                         shift and go to state 37
    expcast                        shift and go to state 38
    lista_acc                      shift and go to state 39
    sentencia                      shift and go to state 41
    valores                        shift and go to state 42
    auxacc                         shift and go to state 53
    if                             shift and go to state 54
    match                          shift and go to state 55
    loop                           shift and go to state 56
    while                          shift and go to state 57
    for                            shift and go to state 58

state 82

    (89) lista_assign2 -> PUNTO ID .

    IGUAL           reduce using rule 89 (lista_assign2 -> PUNTO ID .)
    PUNTO           reduce using rule 89 (lista_assign2 -> PUNTO ID .)


state 83

    (98) lista_arr -> LCOR auxexp . RCOR

    RCOR            shift and go to state 143


state 84

    (192) print -> PRINT AD LPAR . lista_exp RPAR
    (99) lista_exp -> . lista_exp COMA auxexp
    (100) lista_exp -> . auxexp
    (108) auxexp -> . expstruct
    (109) auxexp -> . exp
    (143) expstruct -> . lista_classtype LLLAV lista_att RLLAV
    (144) expstruct -> . lista_classtype LLLAV RLLAV
    (145) expstruct -> . lista_classtype DPUNTOS DPUNTOS llamada
    (110) exp -> . LPAR exp RPAR
    (111) exp -> . expmath
    (112) exp -> . expop
    (113) exp -> . exprel
    (114) exp -> . exparr
    (115) exp -> . newarray
    (116) exp -> . expvec
    (117) exp -> . exparam
    (118) exp -> . exppow
    (119) exp -> . expcast
    (120) exp -> . lista_acc
    (121) exp -> . llamada
    (122) exp -> . sentencia
    (123) exp -> . valores
    (124) exp -> . exp PUNTO exp_native
    (174) lista_classtype -> . lista_classtype DPUNTOS DPUNTOS ID
    (175) lista_classtype -> . ID
    (125) expmath -> . exp MAS exp
    (126) expmath -> . exp MENOS exp
    (127) expmath -> . exp MULTIPLICACION exp
    (128) expmath -> . exp DIVISION exp
    (129) expmath -> . exp MODULO exp
    (130) expmath -> . MENOS exp
    (133) expop -> . exp AND exp
    (134) expop -> . exp OR exp
    (135) expop -> . AD exp
    (137) exprel -> . exp IGUALI exp
    (138) exprel -> . exp DIF exp
    (139) exprel -> . exp MAYOR exp
    (140) exprel -> . exp MENOR exp
    (141) exprel -> . exp MAYORI exp
    (142) exprel -> . exp MENORI exp
    (152) exparr -> . ID lista_arr
    (155) newarray -> . LCOR lista_exp RCOR
    (156) newarray -> . LCOR auxexp PCOMA exp RCOR
    (153) expvec -> . VEC AD newarray
    (154) expvec -> . VECTOR DPUNTOS DPUNTOS exp_natarr
    (148) exparam -> . MUT ID
    (149) exparam -> . MUT valores
    (150) exparam -> . ANDSINGLE MUT ID
    (151) exparam -> . ANDSINGLE MUT valores
    (131) exppow -> . I64 DPUNTOS DPUNTOS POW LPAR exp COMA exp RPAR
    (132) exppow -> . F64 DPUNTOS DPUNTOS POWF LPAR exp COMA exp RPAR
    (136) expcast -> . exp AS tipo_var
    (92) lista_acc -> . lista_acc PUNTO ID
    (93) lista_acc -> . lista_acc PUNTO exp_native
    (94) lista_acc -> . auxacc
    (176) llamada -> . ID LPAR RPAR
    (177) llamada -> . ID LPAR lista_exp RPAR
    (37) sentencia -> . if
    (38) sentencia -> . match
    (39) sentencia -> . loop
    (40) sentencia -> . while
    (41) sentencia -> . for
    (157) valores -> . ENTERO
    (158) valores -> . DECIMAL
    (159) valores -> . CADENA
    (160) valores -> . BOOLEANO
    (161) valores -> . CARACTER
    (95) auxacc -> . exparr
    (96) auxacc -> . ID
    (42) if -> . IF exp statement else
    (47) match -> . MATCH exp match_statement
    (62) loop -> . LOOP statement
    (63) while -> . WHILE exp statement
    (64) for -> . FOR ID IN foriterative statement

    LPAR            shift and go to state 29
    ID              shift and go to state 72
    MENOS           shift and go to state 43
    AD              shift and go to state 44
    LCOR            shift and go to state 46
    VEC             shift and go to state 47
    VECTOR          shift and go to state 48
    MUT             shift and go to state 49
    ANDSINGLE       shift and go to state 50
    I64             shift and go to state 51
    F64             shift and go to state 52
    ENTERO          shift and go to state 59
    DECIMAL         shift and go to state 60
    CADENA          shift and go to state 61
    BOOLEANO        shift and go to state 62
    CARACTER        shift and go to state 63
    IF              shift and go to state 12
    MATCH           shift and go to state 64
    LOOP            shift and go to state 65
    WHILE           shift and go to state 13
    FOR             shift and go to state 66

    lista_exp                      shift and go to state 144
    auxexp                         shift and go to state 145
    expstruct                      shift and go to state 74
    exp                            shift and go to state 75
    lista_classtype                shift and go to state 76
    llamada                        shift and go to state 40
    expmath                        shift and go to state 30
    expop                          shift and go to state 31
    exprel                         shift and go to state 32
    exparr                         shift and go to state 33
    newarray                       shift and go to state 34
    expvec                         shift and go to state 35
    exparam                        shift and go to state 36
    exppow                         shift and go to state 37
    expcast                        shift and go to state 38
    lista_acc                      shift and go to state 39
    sentencia                      shift and go to state 41
    valores                        shift and go to state 42
    auxacc                         shift and go to state 53
    if                             shift and go to state 54
    match                          shift and go to state 55
    loop                           shift and go to state 56
    while                          shift and go to state 57
    for                            shift and go to state 58

state 85

    (42) if -> IF exp statement . else
    (43) else -> . ELSE statement
    (44) else -> . ELSE if
    (45) else -> . epsilon
    (46) epsilon -> .

    ELSE            shift and go to state 147
    LET             reduce using rule 46 (epsilon -> .)
    ID              reduce using rule 46 (epsilon -> .)
    PRINT           reduce using rule 46 (epsilon -> .)
    IF              reduce using rule 46 (epsilon -> .)
    WHILE           reduce using rule 46 (epsilon -> .)
    $end            reduce using rule 46 (epsilon -> .)
    PUNTO           reduce using rule 46 (epsilon -> .)
    MAS             reduce using rule 46 (epsilon -> .)
    MENOS           reduce using rule 46 (epsilon -> .)
    MULTIPLICACION  reduce using rule 46 (epsilon -> .)
    DIVISION        reduce using rule 46 (epsilon -> .)
    MODULO          reduce using rule 46 (epsilon -> .)
    AND             reduce using rule 46 (epsilon -> .)
    OR              reduce using rule 46 (epsilon -> .)
    IGUALI          reduce using rule 46 (epsilon -> .)
    DIF             reduce using rule 46 (epsilon -> .)
    MAYOR           reduce using rule 46 (epsilon -> .)
    MENOR           reduce using rule 46 (epsilon -> .)
    MAYORI          reduce using rule 46 (epsilon -> .)
    MENORI          reduce using rule 46 (epsilon -> .)
    AS              reduce using rule 46 (epsilon -> .)
    LLLAV           reduce using rule 46 (epsilon -> .)
    PCOMA           reduce using rule 46 (epsilon -> .)
    COMA            reduce using rule 46 (epsilon -> .)
    RCOR            reduce using rule 46 (epsilon -> .)
    RPAR            reduce using rule 46 (epsilon -> .)
    RLLAV           reduce using rule 46 (epsilon -> .)
    CONTINUE        reduce using rule 46 (epsilon -> .)
    BREAK           reduce using rule 46 (epsilon -> .)
    RETURN          reduce using rule 46 (epsilon -> .)
    MATCH           reduce using rule 46 (epsilon -> .)
    LOOP            reduce using rule 46 (epsilon -> .)
    FOR             reduce using rule 46 (epsilon -> .)
    LPAR            reduce using rule 46 (epsilon -> .)
    AD              reduce using rule 46 (epsilon -> .)
    LCOR            reduce using rule 46 (epsilon -> .)
    VEC             reduce using rule 46 (epsilon -> .)
    VECTOR          reduce using rule 46 (epsilon -> .)
    MUT             reduce using rule 46 (epsilon -> .)
    ANDSINGLE       reduce using rule 46 (epsilon -> .)
    I64             reduce using rule 46 (epsilon -> .)
    F64             reduce using rule 46 (epsilon -> .)
    ENTERO          reduce using rule 46 (epsilon -> .)
    DECIMAL         reduce using rule 46 (epsilon -> .)
    CADENA          reduce using rule 46 (epsilon -> .)
    BOOLEANO        reduce using rule 46 (epsilon -> .)
    CARACTER        reduce using rule 46 (epsilon -> .)
    ARROW2          reduce using rule 46 (epsilon -> .)
    ORSINGLE        reduce using rule 46 (epsilon -> .)

    else                           shift and go to state 146
    epsilon                        shift and go to state 148

state 86

    (124) exp -> exp PUNTO . exp_native
    (178) exp_native -> . TOSTRING LPAR RPAR
    (179) exp_native -> . TOOWNED LPAR RPAR
    (180) exp_native -> . CLONE LPAR RPAR
    (181) exp_native -> . LEN LPAR RPAR
    (182) exp_native -> . CAPACITY LPAR RPAR
    (183) exp_native -> . REMOVE LPAR auxexp RPAR
    (184) exp_native -> . CONTAINS LPAR ANDSINGLE auxexp RPAR
    (185) exp_native -> . PUSH LPAR auxexp RPAR
    (186) exp_native -> . INSERT LPAR lista_exp RPAR
    (187) exp_native -> . CHARS LPAR RPAR
    (188) exp_native -> . SQRT LPAR RPAR
    (189) exp_native -> . ABS LPAR RPAR

    TOSTRING        shift and go to state 150
    TOOWNED         shift and go to state 151
    CLONE           shift and go to state 152
    LEN             shift and go to state 153
    CAPACITY        shift and go to state 154
    REMOVE          shift and go to state 155
    CONTAINS        shift and go to state 156
    PUSH            shift and go to state 157
    INSERT          shift and go to state 158
    CHARS           shift and go to state 159
    SQRT            shift and go to state 160
    ABS             shift and go to state 161

    exp_native                     shift and go to state 149

state 87

    (125) expmath -> exp MAS . exp
    (110) exp -> . LPAR exp RPAR
    (111) exp -> . expmath
    (112) exp -> . expop
    (113) exp -> . exprel
    (114) exp -> . exparr
    (115) exp -> . newarray
    (116) exp -> . expvec
    (117) exp -> . exparam
    (118) exp -> . exppow
    (119) exp -> . expcast
    (120) exp -> . lista_acc
    (121) exp -> . llamada
    (122) exp -> . sentencia
    (123) exp -> . valores
    (124) exp -> . exp PUNTO exp_native
    (125) expmath -> . exp MAS exp
    (126) expmath -> . exp MENOS exp
    (127) expmath -> . exp MULTIPLICACION exp
    (128) expmath -> . exp DIVISION exp
    (129) expmath -> . exp MODULO exp
    (130) expmath -> . MENOS exp
    (133) expop -> . exp AND exp
    (134) expop -> . exp OR exp
    (135) expop -> . AD exp
    (137) exprel -> . exp IGUALI exp
    (138) exprel -> . exp DIF exp
    (139) exprel -> . exp MAYOR exp
    (140) exprel -> . exp MENOR exp
    (141) exprel -> . exp MAYORI exp
    (142) exprel -> . exp MENORI exp
    (152) exparr -> . ID lista_arr
    (155) newarray -> . LCOR lista_exp RCOR
    (156) newarray -> . LCOR auxexp PCOMA exp RCOR
    (153) expvec -> . VEC AD newarray
    (154) expvec -> . VECTOR DPUNTOS DPUNTOS exp_natarr
    (148) exparam -> . MUT ID
    (149) exparam -> . MUT valores
    (150) exparam -> . ANDSINGLE MUT ID
    (151) exparam -> . ANDSINGLE MUT valores
    (131) exppow -> . I64 DPUNTOS DPUNTOS POW LPAR exp COMA exp RPAR
    (132) exppow -> . F64 DPUNTOS DPUNTOS POWF LPAR exp COMA exp RPAR
    (136) expcast -> . exp AS tipo_var
    (92) lista_acc -> . lista_acc PUNTO ID
    (93) lista_acc -> . lista_acc PUNTO exp_native
    (94) lista_acc -> . auxacc
    (176) llamada -> . ID LPAR RPAR
    (177) llamada -> . ID LPAR lista_exp RPAR
    (37) sentencia -> . if
    (38) sentencia -> . match
    (39) sentencia -> . loop
    (40) sentencia -> . while
    (41) sentencia -> . for
    (157) valores -> . ENTERO
    (158) valores -> . DECIMAL
    (159) valores -> . CADENA
    (160) valores -> . BOOLEANO
    (161) valores -> . CARACTER
    (95) auxacc -> . exparr
    (96) auxacc -> . ID
    (42) if -> . IF exp statement else
    (47) match -> . MATCH exp match_statement
    (62) loop -> . LOOP statement
    (63) while -> . WHILE exp statement
    (64) for -> . FOR ID IN foriterative statement

    LPAR            shift and go to state 29
    MENOS           shift and go to state 43
    AD              shift and go to state 44
    ID              shift and go to state 45
    LCOR            shift and go to state 46
    VEC             shift and go to state 47
    VECTOR          shift and go to state 48
    MUT             shift and go to state 49
    ANDSINGLE       shift and go to state 50
    I64             shift and go to state 51
    F64             shift and go to state 52
    ENTERO          shift and go to state 59
    DECIMAL         shift and go to state 60
    CADENA          shift and go to state 61
    BOOLEANO        shift and go to state 62
    CARACTER        shift and go to state 63
    IF              shift and go to state 12
    MATCH           shift and go to state 64
    LOOP            shift and go to state 65
    WHILE           shift and go to state 13
    FOR             shift and go to state 66

    exp                            shift and go to state 162
    expmath                        shift and go to state 30
    expop                          shift and go to state 31
    exprel                         shift and go to state 32
    exparr                         shift and go to state 33
    newarray                       shift and go to state 34
    expvec                         shift and go to state 35
    exparam                        shift and go to state 36
    exppow                         shift and go to state 37
    expcast                        shift and go to state 38
    lista_acc                      shift and go to state 39
    llamada                        shift and go to state 40
    sentencia                      shift and go to state 41
    valores                        shift and go to state 42
    auxacc                         shift and go to state 53
    if                             shift and go to state 54
    match                          shift and go to state 55
    loop                           shift and go to state 56
    while                          shift and go to state 57
    for                            shift and go to state 58

state 88

    (126) expmath -> exp MENOS . exp
    (110) exp -> . LPAR exp RPAR
    (111) exp -> . expmath
    (112) exp -> . expop
    (113) exp -> . exprel
    (114) exp -> . exparr
    (115) exp -> . newarray
    (116) exp -> . expvec
    (117) exp -> . exparam
    (118) exp -> . exppow
    (119) exp -> . expcast
    (120) exp -> . lista_acc
    (121) exp -> . llamada
    (122) exp -> . sentencia
    (123) exp -> . valores
    (124) exp -> . exp PUNTO exp_native
    (125) expmath -> . exp MAS exp
    (126) expmath -> . exp MENOS exp
    (127) expmath -> . exp MULTIPLICACION exp
    (128) expmath -> . exp DIVISION exp
    (129) expmath -> . exp MODULO exp
    (130) expmath -> . MENOS exp
    (133) expop -> . exp AND exp
    (134) expop -> . exp OR exp
    (135) expop -> . AD exp
    (137) exprel -> . exp IGUALI exp
    (138) exprel -> . exp DIF exp
    (139) exprel -> . exp MAYOR exp
    (140) exprel -> . exp MENOR exp
    (141) exprel -> . exp MAYORI exp
    (142) exprel -> . exp MENORI exp
    (152) exparr -> . ID lista_arr
    (155) newarray -> . LCOR lista_exp RCOR
    (156) newarray -> . LCOR auxexp PCOMA exp RCOR
    (153) expvec -> . VEC AD newarray
    (154) expvec -> . VECTOR DPUNTOS DPUNTOS exp_natarr
    (148) exparam -> . MUT ID
    (149) exparam -> . MUT valores
    (150) exparam -> . ANDSINGLE MUT ID
    (151) exparam -> . ANDSINGLE MUT valores
    (131) exppow -> . I64 DPUNTOS DPUNTOS POW LPAR exp COMA exp RPAR
    (132) exppow -> . F64 DPUNTOS DPUNTOS POWF LPAR exp COMA exp RPAR
    (136) expcast -> . exp AS tipo_var
    (92) lista_acc -> . lista_acc PUNTO ID
    (93) lista_acc -> . lista_acc PUNTO exp_native
    (94) lista_acc -> . auxacc
    (176) llamada -> . ID LPAR RPAR
    (177) llamada -> . ID LPAR lista_exp RPAR
    (37) sentencia -> . if
    (38) sentencia -> . match
    (39) sentencia -> . loop
    (40) sentencia -> . while
    (41) sentencia -> . for
    (157) valores -> . ENTERO
    (158) valores -> . DECIMAL
    (159) valores -> . CADENA
    (160) valores -> . BOOLEANO
    (161) valores -> . CARACTER
    (95) auxacc -> . exparr
    (96) auxacc -> . ID
    (42) if -> . IF exp statement else
    (47) match -> . MATCH exp match_statement
    (62) loop -> . LOOP statement
    (63) while -> . WHILE exp statement
    (64) for -> . FOR ID IN foriterative statement

    LPAR            shift and go to state 29
    MENOS           shift and go to state 43
    AD              shift and go to state 44
    ID              shift and go to state 45
    LCOR            shift and go to state 46
    VEC             shift and go to state 47
    VECTOR          shift and go to state 48
    MUT             shift and go to state 49
    ANDSINGLE       shift and go to state 50
    I64             shift and go to state 51
    F64             shift and go to state 52
    ENTERO          shift and go to state 59
    DECIMAL         shift and go to state 60
    CADENA          shift and go to state 61
    BOOLEANO        shift and go to state 62
    CARACTER        shift and go to state 63
    IF              shift and go to state 12
    MATCH           shift and go to state 64
    LOOP            shift and go to state 65
    WHILE           shift and go to state 13
    FOR             shift and go to state 66

    exp                            shift and go to state 163
    expmath                        shift and go to state 30
    expop                          shift and go to state 31
    exprel                         shift and go to state 32
    exparr                         shift and go to state 33
    newarray                       shift and go to state 34
    expvec                         shift and go to state 35
    exparam                        shift and go to state 36
    exppow                         shift and go to state 37
    expcast                        shift and go to state 38
    lista_acc                      shift and go to state 39
    llamada                        shift and go to state 40
    sentencia                      shift and go to state 41
    valores                        shift and go to state 42
    auxacc                         shift and go to state 53
    if                             shift and go to state 54
    match                          shift and go to state 55
    loop                           shift and go to state 56
    while                          shift and go to state 57
    for                            shift and go to state 58

state 89

    (127) expmath -> exp MULTIPLICACION . exp
    (110) exp -> . LPAR exp RPAR
    (111) exp -> . expmath
    (112) exp -> . expop
    (113) exp -> . exprel
    (114) exp -> . exparr
    (115) exp -> . newarray
    (116) exp -> . expvec
    (117) exp -> . exparam
    (118) exp -> . exppow
    (119) exp -> . expcast
    (120) exp -> . lista_acc
    (121) exp -> . llamada
    (122) exp -> . sentencia
    (123) exp -> . valores
    (124) exp -> . exp PUNTO exp_native
    (125) expmath -> . exp MAS exp
    (126) expmath -> . exp MENOS exp
    (127) expmath -> . exp MULTIPLICACION exp
    (128) expmath -> . exp DIVISION exp
    (129) expmath -> . exp MODULO exp
    (130) expmath -> . MENOS exp
    (133) expop -> . exp AND exp
    (134) expop -> . exp OR exp
    (135) expop -> . AD exp
    (137) exprel -> . exp IGUALI exp
    (138) exprel -> . exp DIF exp
    (139) exprel -> . exp MAYOR exp
    (140) exprel -> . exp MENOR exp
    (141) exprel -> . exp MAYORI exp
    (142) exprel -> . exp MENORI exp
    (152) exparr -> . ID lista_arr
    (155) newarray -> . LCOR lista_exp RCOR
    (156) newarray -> . LCOR auxexp PCOMA exp RCOR
    (153) expvec -> . VEC AD newarray
    (154) expvec -> . VECTOR DPUNTOS DPUNTOS exp_natarr
    (148) exparam -> . MUT ID
    (149) exparam -> . MUT valores
    (150) exparam -> . ANDSINGLE MUT ID
    (151) exparam -> . ANDSINGLE MUT valores
    (131) exppow -> . I64 DPUNTOS DPUNTOS POW LPAR exp COMA exp RPAR
    (132) exppow -> . F64 DPUNTOS DPUNTOS POWF LPAR exp COMA exp RPAR
    (136) expcast -> . exp AS tipo_var
    (92) lista_acc -> . lista_acc PUNTO ID
    (93) lista_acc -> . lista_acc PUNTO exp_native
    (94) lista_acc -> . auxacc
    (176) llamada -> . ID LPAR RPAR
    (177) llamada -> . ID LPAR lista_exp RPAR
    (37) sentencia -> . if
    (38) sentencia -> . match
    (39) sentencia -> . loop
    (40) sentencia -> . while
    (41) sentencia -> . for
    (157) valores -> . ENTERO
    (158) valores -> . DECIMAL
    (159) valores -> . CADENA
    (160) valores -> . BOOLEANO
    (161) valores -> . CARACTER
    (95) auxacc -> . exparr
    (96) auxacc -> . ID
    (42) if -> . IF exp statement else
    (47) match -> . MATCH exp match_statement
    (62) loop -> . LOOP statement
    (63) while -> . WHILE exp statement
    (64) for -> . FOR ID IN foriterative statement

    LPAR            shift and go to state 29
    MENOS           shift and go to state 43
    AD              shift and go to state 44
    ID              shift and go to state 45
    LCOR            shift and go to state 46
    VEC             shift and go to state 47
    VECTOR          shift and go to state 48
    MUT             shift and go to state 49
    ANDSINGLE       shift and go to state 50
    I64             shift and go to state 51
    F64             shift and go to state 52
    ENTERO          shift and go to state 59
    DECIMAL         shift and go to state 60
    CADENA          shift and go to state 61
    BOOLEANO        shift and go to state 62
    CARACTER        shift and go to state 63
    IF              shift and go to state 12
    MATCH           shift and go to state 64
    LOOP            shift and go to state 65
    WHILE           shift and go to state 13
    FOR             shift and go to state 66

    exp                            shift and go to state 164
    expmath                        shift and go to state 30
    expop                          shift and go to state 31
    exprel                         shift and go to state 32
    exparr                         shift and go to state 33
    newarray                       shift and go to state 34
    expvec                         shift and go to state 35
    exparam                        shift and go to state 36
    exppow                         shift and go to state 37
    expcast                        shift and go to state 38
    lista_acc                      shift and go to state 39
    llamada                        shift and go to state 40
    sentencia                      shift and go to state 41
    valores                        shift and go to state 42
    auxacc                         shift and go to state 53
    if                             shift and go to state 54
    match                          shift and go to state 55
    loop                           shift and go to state 56
    while                          shift and go to state 57
    for                            shift and go to state 58

state 90

    (128) expmath -> exp DIVISION . exp
    (110) exp -> . LPAR exp RPAR
    (111) exp -> . expmath
    (112) exp -> . expop
    (113) exp -> . exprel
    (114) exp -> . exparr
    (115) exp -> . newarray
    (116) exp -> . expvec
    (117) exp -> . exparam
    (118) exp -> . exppow
    (119) exp -> . expcast
    (120) exp -> . lista_acc
    (121) exp -> . llamada
    (122) exp -> . sentencia
    (123) exp -> . valores
    (124) exp -> . exp PUNTO exp_native
    (125) expmath -> . exp MAS exp
    (126) expmath -> . exp MENOS exp
    (127) expmath -> . exp MULTIPLICACION exp
    (128) expmath -> . exp DIVISION exp
    (129) expmath -> . exp MODULO exp
    (130) expmath -> . MENOS exp
    (133) expop -> . exp AND exp
    (134) expop -> . exp OR exp
    (135) expop -> . AD exp
    (137) exprel -> . exp IGUALI exp
    (138) exprel -> . exp DIF exp
    (139) exprel -> . exp MAYOR exp
    (140) exprel -> . exp MENOR exp
    (141) exprel -> . exp MAYORI exp
    (142) exprel -> . exp MENORI exp
    (152) exparr -> . ID lista_arr
    (155) newarray -> . LCOR lista_exp RCOR
    (156) newarray -> . LCOR auxexp PCOMA exp RCOR
    (153) expvec -> . VEC AD newarray
    (154) expvec -> . VECTOR DPUNTOS DPUNTOS exp_natarr
    (148) exparam -> . MUT ID
    (149) exparam -> . MUT valores
    (150) exparam -> . ANDSINGLE MUT ID
    (151) exparam -> . ANDSINGLE MUT valores
    (131) exppow -> . I64 DPUNTOS DPUNTOS POW LPAR exp COMA exp RPAR
    (132) exppow -> . F64 DPUNTOS DPUNTOS POWF LPAR exp COMA exp RPAR
    (136) expcast -> . exp AS tipo_var
    (92) lista_acc -> . lista_acc PUNTO ID
    (93) lista_acc -> . lista_acc PUNTO exp_native
    (94) lista_acc -> . auxacc
    (176) llamada -> . ID LPAR RPAR
    (177) llamada -> . ID LPAR lista_exp RPAR
    (37) sentencia -> . if
    (38) sentencia -> . match
    (39) sentencia -> . loop
    (40) sentencia -> . while
    (41) sentencia -> . for
    (157) valores -> . ENTERO
    (158) valores -> . DECIMAL
    (159) valores -> . CADENA
    (160) valores -> . BOOLEANO
    (161) valores -> . CARACTER
    (95) auxacc -> . exparr
    (96) auxacc -> . ID
    (42) if -> . IF exp statement else
    (47) match -> . MATCH exp match_statement
    (62) loop -> . LOOP statement
    (63) while -> . WHILE exp statement
    (64) for -> . FOR ID IN foriterative statement

    LPAR            shift and go to state 29
    MENOS           shift and go to state 43
    AD              shift and go to state 44
    ID              shift and go to state 45
    LCOR            shift and go to state 46
    VEC             shift and go to state 47
    VECTOR          shift and go to state 48
    MUT             shift and go to state 49
    ANDSINGLE       shift and go to state 50
    I64             shift and go to state 51
    F64             shift and go to state 52
    ENTERO          shift and go to state 59
    DECIMAL         shift and go to state 60
    CADENA          shift and go to state 61
    BOOLEANO        shift and go to state 62
    CARACTER        shift and go to state 63
    IF              shift and go to state 12
    MATCH           shift and go to state 64
    LOOP            shift and go to state 65
    WHILE           shift and go to state 13
    FOR             shift and go to state 66

    exp                            shift and go to state 165
    expmath                        shift and go to state 30
    expop                          shift and go to state 31
    exprel                         shift and go to state 32
    exparr                         shift and go to state 33
    newarray                       shift and go to state 34
    expvec                         shift and go to state 35
    exparam                        shift and go to state 36
    exppow                         shift and go to state 37
    expcast                        shift and go to state 38
    lista_acc                      shift and go to state 39
    llamada                        shift and go to state 40
    sentencia                      shift and go to state 41
    valores                        shift and go to state 42
    auxacc                         shift and go to state 53
    if                             shift and go to state 54
    match                          shift and go to state 55
    loop                           shift and go to state 56
    while                          shift and go to state 57
    for                            shift and go to state 58

state 91

    (129) expmath -> exp MODULO . exp
    (110) exp -> . LPAR exp RPAR
    (111) exp -> . expmath
    (112) exp -> . expop
    (113) exp -> . exprel
    (114) exp -> . exparr
    (115) exp -> . newarray
    (116) exp -> . expvec
    (117) exp -> . exparam
    (118) exp -> . exppow
    (119) exp -> . expcast
    (120) exp -> . lista_acc
    (121) exp -> . llamada
    (122) exp -> . sentencia
    (123) exp -> . valores
    (124) exp -> . exp PUNTO exp_native
    (125) expmath -> . exp MAS exp
    (126) expmath -> . exp MENOS exp
    (127) expmath -> . exp MULTIPLICACION exp
    (128) expmath -> . exp DIVISION exp
    (129) expmath -> . exp MODULO exp
    (130) expmath -> . MENOS exp
    (133) expop -> . exp AND exp
    (134) expop -> . exp OR exp
    (135) expop -> . AD exp
    (137) exprel -> . exp IGUALI exp
    (138) exprel -> . exp DIF exp
    (139) exprel -> . exp MAYOR exp
    (140) exprel -> . exp MENOR exp
    (141) exprel -> . exp MAYORI exp
    (142) exprel -> . exp MENORI exp
    (152) exparr -> . ID lista_arr
    (155) newarray -> . LCOR lista_exp RCOR
    (156) newarray -> . LCOR auxexp PCOMA exp RCOR
    (153) expvec -> . VEC AD newarray
    (154) expvec -> . VECTOR DPUNTOS DPUNTOS exp_natarr
    (148) exparam -> . MUT ID
    (149) exparam -> . MUT valores
    (150) exparam -> . ANDSINGLE MUT ID
    (151) exparam -> . ANDSINGLE MUT valores
    (131) exppow -> . I64 DPUNTOS DPUNTOS POW LPAR exp COMA exp RPAR
    (132) exppow -> . F64 DPUNTOS DPUNTOS POWF LPAR exp COMA exp RPAR
    (136) expcast -> . exp AS tipo_var
    (92) lista_acc -> . lista_acc PUNTO ID
    (93) lista_acc -> . lista_acc PUNTO exp_native
    (94) lista_acc -> . auxacc
    (176) llamada -> . ID LPAR RPAR
    (177) llamada -> . ID LPAR lista_exp RPAR
    (37) sentencia -> . if
    (38) sentencia -> . match
    (39) sentencia -> . loop
    (40) sentencia -> . while
    (41) sentencia -> . for
    (157) valores -> . ENTERO
    (158) valores -> . DECIMAL
    (159) valores -> . CADENA
    (160) valores -> . BOOLEANO
    (161) valores -> . CARACTER
    (95) auxacc -> . exparr
    (96) auxacc -> . ID
    (42) if -> . IF exp statement else
    (47) match -> . MATCH exp match_statement
    (62) loop -> . LOOP statement
    (63) while -> . WHILE exp statement
    (64) for -> . FOR ID IN foriterative statement

    LPAR            shift and go to state 29
    MENOS           shift and go to state 43
    AD              shift and go to state 44
    ID              shift and go to state 45
    LCOR            shift and go to state 46
    VEC             shift and go to state 47
    VECTOR          shift and go to state 48
    MUT             shift and go to state 49
    ANDSINGLE       shift and go to state 50
    I64             shift and go to state 51
    F64             shift and go to state 52
    ENTERO          shift and go to state 59
    DECIMAL         shift and go to state 60
    CADENA          shift and go to state 61
    BOOLEANO        shift and go to state 62
    CARACTER        shift and go to state 63
    IF              shift and go to state 12
    MATCH           shift and go to state 64
    LOOP            shift and go to state 65
    WHILE           shift and go to state 13
    FOR             shift and go to state 66

    exp                            shift and go to state 166
    expmath                        shift and go to state 30
    expop                          shift and go to state 31
    exprel                         shift and go to state 32
    exparr                         shift and go to state 33
    newarray                       shift and go to state 34
    expvec                         shift and go to state 35
    exparam                        shift and go to state 36
    exppow                         shift and go to state 37
    expcast                        shift and go to state 38
    lista_acc                      shift and go to state 39
    llamada                        shift and go to state 40
    sentencia                      shift and go to state 41
    valores                        shift and go to state 42
    auxacc                         shift and go to state 53
    if                             shift and go to state 54
    match                          shift and go to state 55
    loop                           shift and go to state 56
    while                          shift and go to state 57
    for                            shift and go to state 58

state 92

    (133) expop -> exp AND . exp
    (110) exp -> . LPAR exp RPAR
    (111) exp -> . expmath
    (112) exp -> . expop
    (113) exp -> . exprel
    (114) exp -> . exparr
    (115) exp -> . newarray
    (116) exp -> . expvec
    (117) exp -> . exparam
    (118) exp -> . exppow
    (119) exp -> . expcast
    (120) exp -> . lista_acc
    (121) exp -> . llamada
    (122) exp -> . sentencia
    (123) exp -> . valores
    (124) exp -> . exp PUNTO exp_native
    (125) expmath -> . exp MAS exp
    (126) expmath -> . exp MENOS exp
    (127) expmath -> . exp MULTIPLICACION exp
    (128) expmath -> . exp DIVISION exp
    (129) expmath -> . exp MODULO exp
    (130) expmath -> . MENOS exp
    (133) expop -> . exp AND exp
    (134) expop -> . exp OR exp
    (135) expop -> . AD exp
    (137) exprel -> . exp IGUALI exp
    (138) exprel -> . exp DIF exp
    (139) exprel -> . exp MAYOR exp
    (140) exprel -> . exp MENOR exp
    (141) exprel -> . exp MAYORI exp
    (142) exprel -> . exp MENORI exp
    (152) exparr -> . ID lista_arr
    (155) newarray -> . LCOR lista_exp RCOR
    (156) newarray -> . LCOR auxexp PCOMA exp RCOR
    (153) expvec -> . VEC AD newarray
    (154) expvec -> . VECTOR DPUNTOS DPUNTOS exp_natarr
    (148) exparam -> . MUT ID
    (149) exparam -> . MUT valores
    (150) exparam -> . ANDSINGLE MUT ID
    (151) exparam -> . ANDSINGLE MUT valores
    (131) exppow -> . I64 DPUNTOS DPUNTOS POW LPAR exp COMA exp RPAR
    (132) exppow -> . F64 DPUNTOS DPUNTOS POWF LPAR exp COMA exp RPAR
    (136) expcast -> . exp AS tipo_var
    (92) lista_acc -> . lista_acc PUNTO ID
    (93) lista_acc -> . lista_acc PUNTO exp_native
    (94) lista_acc -> . auxacc
    (176) llamada -> . ID LPAR RPAR
    (177) llamada -> . ID LPAR lista_exp RPAR
    (37) sentencia -> . if
    (38) sentencia -> . match
    (39) sentencia -> . loop
    (40) sentencia -> . while
    (41) sentencia -> . for
    (157) valores -> . ENTERO
    (158) valores -> . DECIMAL
    (159) valores -> . CADENA
    (160) valores -> . BOOLEANO
    (161) valores -> . CARACTER
    (95) auxacc -> . exparr
    (96) auxacc -> . ID
    (42) if -> . IF exp statement else
    (47) match -> . MATCH exp match_statement
    (62) loop -> . LOOP statement
    (63) while -> . WHILE exp statement
    (64) for -> . FOR ID IN foriterative statement

    LPAR            shift and go to state 29
    MENOS           shift and go to state 43
    AD              shift and go to state 44
    ID              shift and go to state 45
    LCOR            shift and go to state 46
    VEC             shift and go to state 47
    VECTOR          shift and go to state 48
    MUT             shift and go to state 49
    ANDSINGLE       shift and go to state 50
    I64             shift and go to state 51
    F64             shift and go to state 52
    ENTERO          shift and go to state 59
    DECIMAL         shift and go to state 60
    CADENA          shift and go to state 61
    BOOLEANO        shift and go to state 62
    CARACTER        shift and go to state 63
    IF              shift and go to state 12
    MATCH           shift and go to state 64
    LOOP            shift and go to state 65
    WHILE           shift and go to state 13
    FOR             shift and go to state 66

    exp                            shift and go to state 167
    expmath                        shift and go to state 30
    expop                          shift and go to state 31
    exprel                         shift and go to state 32
    exparr                         shift and go to state 33
    newarray                       shift and go to state 34
    expvec                         shift and go to state 35
    exparam                        shift and go to state 36
    exppow                         shift and go to state 37
    expcast                        shift and go to state 38
    lista_acc                      shift and go to state 39
    llamada                        shift and go to state 40
    sentencia                      shift and go to state 41
    valores                        shift and go to state 42
    auxacc                         shift and go to state 53
    if                             shift and go to state 54
    match                          shift and go to state 55
    loop                           shift and go to state 56
    while                          shift and go to state 57
    for                            shift and go to state 58

state 93

    (134) expop -> exp OR . exp
    (110) exp -> . LPAR exp RPAR
    (111) exp -> . expmath
    (112) exp -> . expop
    (113) exp -> . exprel
    (114) exp -> . exparr
    (115) exp -> . newarray
    (116) exp -> . expvec
    (117) exp -> . exparam
    (118) exp -> . exppow
    (119) exp -> . expcast
    (120) exp -> . lista_acc
    (121) exp -> . llamada
    (122) exp -> . sentencia
    (123) exp -> . valores
    (124) exp -> . exp PUNTO exp_native
    (125) expmath -> . exp MAS exp
    (126) expmath -> . exp MENOS exp
    (127) expmath -> . exp MULTIPLICACION exp
    (128) expmath -> . exp DIVISION exp
    (129) expmath -> . exp MODULO exp
    (130) expmath -> . MENOS exp
    (133) expop -> . exp AND exp
    (134) expop -> . exp OR exp
    (135) expop -> . AD exp
    (137) exprel -> . exp IGUALI exp
    (138) exprel -> . exp DIF exp
    (139) exprel -> . exp MAYOR exp
    (140) exprel -> . exp MENOR exp
    (141) exprel -> . exp MAYORI exp
    (142) exprel -> . exp MENORI exp
    (152) exparr -> . ID lista_arr
    (155) newarray -> . LCOR lista_exp RCOR
    (156) newarray -> . LCOR auxexp PCOMA exp RCOR
    (153) expvec -> . VEC AD newarray
    (154) expvec -> . VECTOR DPUNTOS DPUNTOS exp_natarr
    (148) exparam -> . MUT ID
    (149) exparam -> . MUT valores
    (150) exparam -> . ANDSINGLE MUT ID
    (151) exparam -> . ANDSINGLE MUT valores
    (131) exppow -> . I64 DPUNTOS DPUNTOS POW LPAR exp COMA exp RPAR
    (132) exppow -> . F64 DPUNTOS DPUNTOS POWF LPAR exp COMA exp RPAR
    (136) expcast -> . exp AS tipo_var
    (92) lista_acc -> . lista_acc PUNTO ID
    (93) lista_acc -> . lista_acc PUNTO exp_native
    (94) lista_acc -> . auxacc
    (176) llamada -> . ID LPAR RPAR
    (177) llamada -> . ID LPAR lista_exp RPAR
    (37) sentencia -> . if
    (38) sentencia -> . match
    (39) sentencia -> . loop
    (40) sentencia -> . while
    (41) sentencia -> . for
    (157) valores -> . ENTERO
    (158) valores -> . DECIMAL
    (159) valores -> . CADENA
    (160) valores -> . BOOLEANO
    (161) valores -> . CARACTER
    (95) auxacc -> . exparr
    (96) auxacc -> . ID
    (42) if -> . IF exp statement else
    (47) match -> . MATCH exp match_statement
    (62) loop -> . LOOP statement
    (63) while -> . WHILE exp statement
    (64) for -> . FOR ID IN foriterative statement

    LPAR            shift and go to state 29
    MENOS           shift and go to state 43
    AD              shift and go to state 44
    ID              shift and go to state 45
    LCOR            shift and go to state 46
    VEC             shift and go to state 47
    VECTOR          shift and go to state 48
    MUT             shift and go to state 49
    ANDSINGLE       shift and go to state 50
    I64             shift and go to state 51
    F64             shift and go to state 52
    ENTERO          shift and go to state 59
    DECIMAL         shift and go to state 60
    CADENA          shift and go to state 61
    BOOLEANO        shift and go to state 62
    CARACTER        shift and go to state 63
    IF              shift and go to state 12
    MATCH           shift and go to state 64
    LOOP            shift and go to state 65
    WHILE           shift and go to state 13
    FOR             shift and go to state 66

    exp                            shift and go to state 168
    expmath                        shift and go to state 30
    expop                          shift and go to state 31
    exprel                         shift and go to state 32
    exparr                         shift and go to state 33
    newarray                       shift and go to state 34
    expvec                         shift and go to state 35
    exparam                        shift and go to state 36
    exppow                         shift and go to state 37
    expcast                        shift and go to state 38
    lista_acc                      shift and go to state 39
    llamada                        shift and go to state 40
    sentencia                      shift and go to state 41
    valores                        shift and go to state 42
    auxacc                         shift and go to state 53
    if                             shift and go to state 54
    match                          shift and go to state 55
    loop                           shift and go to state 56
    while                          shift and go to state 57
    for                            shift and go to state 58

state 94

    (137) exprel -> exp IGUALI . exp
    (110) exp -> . LPAR exp RPAR
    (111) exp -> . expmath
    (112) exp -> . expop
    (113) exp -> . exprel
    (114) exp -> . exparr
    (115) exp -> . newarray
    (116) exp -> . expvec
    (117) exp -> . exparam
    (118) exp -> . exppow
    (119) exp -> . expcast
    (120) exp -> . lista_acc
    (121) exp -> . llamada
    (122) exp -> . sentencia
    (123) exp -> . valores
    (124) exp -> . exp PUNTO exp_native
    (125) expmath -> . exp MAS exp
    (126) expmath -> . exp MENOS exp
    (127) expmath -> . exp MULTIPLICACION exp
    (128) expmath -> . exp DIVISION exp
    (129) expmath -> . exp MODULO exp
    (130) expmath -> . MENOS exp
    (133) expop -> . exp AND exp
    (134) expop -> . exp OR exp
    (135) expop -> . AD exp
    (137) exprel -> . exp IGUALI exp
    (138) exprel -> . exp DIF exp
    (139) exprel -> . exp MAYOR exp
    (140) exprel -> . exp MENOR exp
    (141) exprel -> . exp MAYORI exp
    (142) exprel -> . exp MENORI exp
    (152) exparr -> . ID lista_arr
    (155) newarray -> . LCOR lista_exp RCOR
    (156) newarray -> . LCOR auxexp PCOMA exp RCOR
    (153) expvec -> . VEC AD newarray
    (154) expvec -> . VECTOR DPUNTOS DPUNTOS exp_natarr
    (148) exparam -> . MUT ID
    (149) exparam -> . MUT valores
    (150) exparam -> . ANDSINGLE MUT ID
    (151) exparam -> . ANDSINGLE MUT valores
    (131) exppow -> . I64 DPUNTOS DPUNTOS POW LPAR exp COMA exp RPAR
    (132) exppow -> . F64 DPUNTOS DPUNTOS POWF LPAR exp COMA exp RPAR
    (136) expcast -> . exp AS tipo_var
    (92) lista_acc -> . lista_acc PUNTO ID
    (93) lista_acc -> . lista_acc PUNTO exp_native
    (94) lista_acc -> . auxacc
    (176) llamada -> . ID LPAR RPAR
    (177) llamada -> . ID LPAR lista_exp RPAR
    (37) sentencia -> . if
    (38) sentencia -> . match
    (39) sentencia -> . loop
    (40) sentencia -> . while
    (41) sentencia -> . for
    (157) valores -> . ENTERO
    (158) valores -> . DECIMAL
    (159) valores -> . CADENA
    (160) valores -> . BOOLEANO
    (161) valores -> . CARACTER
    (95) auxacc -> . exparr
    (96) auxacc -> . ID
    (42) if -> . IF exp statement else
    (47) match -> . MATCH exp match_statement
    (62) loop -> . LOOP statement
    (63) while -> . WHILE exp statement
    (64) for -> . FOR ID IN foriterative statement

    LPAR            shift and go to state 29
    MENOS           shift and go to state 43
    AD              shift and go to state 44
    ID              shift and go to state 45
    LCOR            shift and go to state 46
    VEC             shift and go to state 47
    VECTOR          shift and go to state 48
    MUT             shift and go to state 49
    ANDSINGLE       shift and go to state 50
    I64             shift and go to state 51
    F64             shift and go to state 52
    ENTERO          shift and go to state 59
    DECIMAL         shift and go to state 60
    CADENA          shift and go to state 61
    BOOLEANO        shift and go to state 62
    CARACTER        shift and go to state 63
    IF              shift and go to state 12
    MATCH           shift and go to state 64
    LOOP            shift and go to state 65
    WHILE           shift and go to state 13
    FOR             shift and go to state 66

    exp                            shift and go to state 169
    expmath                        shift and go to state 30
    expop                          shift and go to state 31
    exprel                         shift and go to state 32
    exparr                         shift and go to state 33
    newarray                       shift and go to state 34
    expvec                         shift and go to state 35
    exparam                        shift and go to state 36
    exppow                         shift and go to state 37
    expcast                        shift and go to state 38
    lista_acc                      shift and go to state 39
    llamada                        shift and go to state 40
    sentencia                      shift and go to state 41
    valores                        shift and go to state 42
    auxacc                         shift and go to state 53
    if                             shift and go to state 54
    match                          shift and go to state 55
    loop                           shift and go to state 56
    while                          shift and go to state 57
    for                            shift and go to state 58

state 95

    (138) exprel -> exp DIF . exp
    (110) exp -> . LPAR exp RPAR
    (111) exp -> . expmath
    (112) exp -> . expop
    (113) exp -> . exprel
    (114) exp -> . exparr
    (115) exp -> . newarray
    (116) exp -> . expvec
    (117) exp -> . exparam
    (118) exp -> . exppow
    (119) exp -> . expcast
    (120) exp -> . lista_acc
    (121) exp -> . llamada
    (122) exp -> . sentencia
    (123) exp -> . valores
    (124) exp -> . exp PUNTO exp_native
    (125) expmath -> . exp MAS exp
    (126) expmath -> . exp MENOS exp
    (127) expmath -> . exp MULTIPLICACION exp
    (128) expmath -> . exp DIVISION exp
    (129) expmath -> . exp MODULO exp
    (130) expmath -> . MENOS exp
    (133) expop -> . exp AND exp
    (134) expop -> . exp OR exp
    (135) expop -> . AD exp
    (137) exprel -> . exp IGUALI exp
    (138) exprel -> . exp DIF exp
    (139) exprel -> . exp MAYOR exp
    (140) exprel -> . exp MENOR exp
    (141) exprel -> . exp MAYORI exp
    (142) exprel -> . exp MENORI exp
    (152) exparr -> . ID lista_arr
    (155) newarray -> . LCOR lista_exp RCOR
    (156) newarray -> . LCOR auxexp PCOMA exp RCOR
    (153) expvec -> . VEC AD newarray
    (154) expvec -> . VECTOR DPUNTOS DPUNTOS exp_natarr
    (148) exparam -> . MUT ID
    (149) exparam -> . MUT valores
    (150) exparam -> . ANDSINGLE MUT ID
    (151) exparam -> . ANDSINGLE MUT valores
    (131) exppow -> . I64 DPUNTOS DPUNTOS POW LPAR exp COMA exp RPAR
    (132) exppow -> . F64 DPUNTOS DPUNTOS POWF LPAR exp COMA exp RPAR
    (136) expcast -> . exp AS tipo_var
    (92) lista_acc -> . lista_acc PUNTO ID
    (93) lista_acc -> . lista_acc PUNTO exp_native
    (94) lista_acc -> . auxacc
    (176) llamada -> . ID LPAR RPAR
    (177) llamada -> . ID LPAR lista_exp RPAR
    (37) sentencia -> . if
    (38) sentencia -> . match
    (39) sentencia -> . loop
    (40) sentencia -> . while
    (41) sentencia -> . for
    (157) valores -> . ENTERO
    (158) valores -> . DECIMAL
    (159) valores -> . CADENA
    (160) valores -> . BOOLEANO
    (161) valores -> . CARACTER
    (95) auxacc -> . exparr
    (96) auxacc -> . ID
    (42) if -> . IF exp statement else
    (47) match -> . MATCH exp match_statement
    (62) loop -> . LOOP statement
    (63) while -> . WHILE exp statement
    (64) for -> . FOR ID IN foriterative statement

    LPAR            shift and go to state 29
    MENOS           shift and go to state 43
    AD              shift and go to state 44
    ID              shift and go to state 45
    LCOR            shift and go to state 46
    VEC             shift and go to state 47
    VECTOR          shift and go to state 48
    MUT             shift and go to state 49
    ANDSINGLE       shift and go to state 50
    I64             shift and go to state 51
    F64             shift and go to state 52
    ENTERO          shift and go to state 59
    DECIMAL         shift and go to state 60
    CADENA          shift and go to state 61
    BOOLEANO        shift and go to state 62
    CARACTER        shift and go to state 63
    IF              shift and go to state 12
    MATCH           shift and go to state 64
    LOOP            shift and go to state 65
    WHILE           shift and go to state 13
    FOR             shift and go to state 66

    exp                            shift and go to state 170
    expmath                        shift and go to state 30
    expop                          shift and go to state 31
    exprel                         shift and go to state 32
    exparr                         shift and go to state 33
    newarray                       shift and go to state 34
    expvec                         shift and go to state 35
    exparam                        shift and go to state 36
    exppow                         shift and go to state 37
    expcast                        shift and go to state 38
    lista_acc                      shift and go to state 39
    llamada                        shift and go to state 40
    sentencia                      shift and go to state 41
    valores                        shift and go to state 42
    auxacc                         shift and go to state 53
    if                             shift and go to state 54
    match                          shift and go to state 55
    loop                           shift and go to state 56
    while                          shift and go to state 57
    for                            shift and go to state 58

state 96

    (139) exprel -> exp MAYOR . exp
    (110) exp -> . LPAR exp RPAR
    (111) exp -> . expmath
    (112) exp -> . expop
    (113) exp -> . exprel
    (114) exp -> . exparr
    (115) exp -> . newarray
    (116) exp -> . expvec
    (117) exp -> . exparam
    (118) exp -> . exppow
    (119) exp -> . expcast
    (120) exp -> . lista_acc
    (121) exp -> . llamada
    (122) exp -> . sentencia
    (123) exp -> . valores
    (124) exp -> . exp PUNTO exp_native
    (125) expmath -> . exp MAS exp
    (126) expmath -> . exp MENOS exp
    (127) expmath -> . exp MULTIPLICACION exp
    (128) expmath -> . exp DIVISION exp
    (129) expmath -> . exp MODULO exp
    (130) expmath -> . MENOS exp
    (133) expop -> . exp AND exp
    (134) expop -> . exp OR exp
    (135) expop -> . AD exp
    (137) exprel -> . exp IGUALI exp
    (138) exprel -> . exp DIF exp
    (139) exprel -> . exp MAYOR exp
    (140) exprel -> . exp MENOR exp
    (141) exprel -> . exp MAYORI exp
    (142) exprel -> . exp MENORI exp
    (152) exparr -> . ID lista_arr
    (155) newarray -> . LCOR lista_exp RCOR
    (156) newarray -> . LCOR auxexp PCOMA exp RCOR
    (153) expvec -> . VEC AD newarray
    (154) expvec -> . VECTOR DPUNTOS DPUNTOS exp_natarr
    (148) exparam -> . MUT ID
    (149) exparam -> . MUT valores
    (150) exparam -> . ANDSINGLE MUT ID
    (151) exparam -> . ANDSINGLE MUT valores
    (131) exppow -> . I64 DPUNTOS DPUNTOS POW LPAR exp COMA exp RPAR
    (132) exppow -> . F64 DPUNTOS DPUNTOS POWF LPAR exp COMA exp RPAR
    (136) expcast -> . exp AS tipo_var
    (92) lista_acc -> . lista_acc PUNTO ID
    (93) lista_acc -> . lista_acc PUNTO exp_native
    (94) lista_acc -> . auxacc
    (176) llamada -> . ID LPAR RPAR
    (177) llamada -> . ID LPAR lista_exp RPAR
    (37) sentencia -> . if
    (38) sentencia -> . match
    (39) sentencia -> . loop
    (40) sentencia -> . while
    (41) sentencia -> . for
    (157) valores -> . ENTERO
    (158) valores -> . DECIMAL
    (159) valores -> . CADENA
    (160) valores -> . BOOLEANO
    (161) valores -> . CARACTER
    (95) auxacc -> . exparr
    (96) auxacc -> . ID
    (42) if -> . IF exp statement else
    (47) match -> . MATCH exp match_statement
    (62) loop -> . LOOP statement
    (63) while -> . WHILE exp statement
    (64) for -> . FOR ID IN foriterative statement

    LPAR            shift and go to state 29
    MENOS           shift and go to state 43
    AD              shift and go to state 44
    ID              shift and go to state 45
    LCOR            shift and go to state 46
    VEC             shift and go to state 47
    VECTOR          shift and go to state 48
    MUT             shift and go to state 49
    ANDSINGLE       shift and go to state 50
    I64             shift and go to state 51
    F64             shift and go to state 52
    ENTERO          shift and go to state 59
    DECIMAL         shift and go to state 60
    CADENA          shift and go to state 61
    BOOLEANO        shift and go to state 62
    CARACTER        shift and go to state 63
    IF              shift and go to state 12
    MATCH           shift and go to state 64
    LOOP            shift and go to state 65
    WHILE           shift and go to state 13
    FOR             shift and go to state 66

    exp                            shift and go to state 171
    expmath                        shift and go to state 30
    expop                          shift and go to state 31
    exprel                         shift and go to state 32
    exparr                         shift and go to state 33
    newarray                       shift and go to state 34
    expvec                         shift and go to state 35
    exparam                        shift and go to state 36
    exppow                         shift and go to state 37
    expcast                        shift and go to state 38
    lista_acc                      shift and go to state 39
    llamada                        shift and go to state 40
    sentencia                      shift and go to state 41
    valores                        shift and go to state 42
    auxacc                         shift and go to state 53
    if                             shift and go to state 54
    match                          shift and go to state 55
    loop                           shift and go to state 56
    while                          shift and go to state 57
    for                            shift and go to state 58

state 97

    (140) exprel -> exp MENOR . exp
    (110) exp -> . LPAR exp RPAR
    (111) exp -> . expmath
    (112) exp -> . expop
    (113) exp -> . exprel
    (114) exp -> . exparr
    (115) exp -> . newarray
    (116) exp -> . expvec
    (117) exp -> . exparam
    (118) exp -> . exppow
    (119) exp -> . expcast
    (120) exp -> . lista_acc
    (121) exp -> . llamada
    (122) exp -> . sentencia
    (123) exp -> . valores
    (124) exp -> . exp PUNTO exp_native
    (125) expmath -> . exp MAS exp
    (126) expmath -> . exp MENOS exp
    (127) expmath -> . exp MULTIPLICACION exp
    (128) expmath -> . exp DIVISION exp
    (129) expmath -> . exp MODULO exp
    (130) expmath -> . MENOS exp
    (133) expop -> . exp AND exp
    (134) expop -> . exp OR exp
    (135) expop -> . AD exp
    (137) exprel -> . exp IGUALI exp
    (138) exprel -> . exp DIF exp
    (139) exprel -> . exp MAYOR exp
    (140) exprel -> . exp MENOR exp
    (141) exprel -> . exp MAYORI exp
    (142) exprel -> . exp MENORI exp
    (152) exparr -> . ID lista_arr
    (155) newarray -> . LCOR lista_exp RCOR
    (156) newarray -> . LCOR auxexp PCOMA exp RCOR
    (153) expvec -> . VEC AD newarray
    (154) expvec -> . VECTOR DPUNTOS DPUNTOS exp_natarr
    (148) exparam -> . MUT ID
    (149) exparam -> . MUT valores
    (150) exparam -> . ANDSINGLE MUT ID
    (151) exparam -> . ANDSINGLE MUT valores
    (131) exppow -> . I64 DPUNTOS DPUNTOS POW LPAR exp COMA exp RPAR
    (132) exppow -> . F64 DPUNTOS DPUNTOS POWF LPAR exp COMA exp RPAR
    (136) expcast -> . exp AS tipo_var
    (92) lista_acc -> . lista_acc PUNTO ID
    (93) lista_acc -> . lista_acc PUNTO exp_native
    (94) lista_acc -> . auxacc
    (176) llamada -> . ID LPAR RPAR
    (177) llamada -> . ID LPAR lista_exp RPAR
    (37) sentencia -> . if
    (38) sentencia -> . match
    (39) sentencia -> . loop
    (40) sentencia -> . while
    (41) sentencia -> . for
    (157) valores -> . ENTERO
    (158) valores -> . DECIMAL
    (159) valores -> . CADENA
    (160) valores -> . BOOLEANO
    (161) valores -> . CARACTER
    (95) auxacc -> . exparr
    (96) auxacc -> . ID
    (42) if -> . IF exp statement else
    (47) match -> . MATCH exp match_statement
    (62) loop -> . LOOP statement
    (63) while -> . WHILE exp statement
    (64) for -> . FOR ID IN foriterative statement

    LPAR            shift and go to state 29
    MENOS           shift and go to state 43
    AD              shift and go to state 44
    ID              shift and go to state 45
    LCOR            shift and go to state 46
    VEC             shift and go to state 47
    VECTOR          shift and go to state 48
    MUT             shift and go to state 49
    ANDSINGLE       shift and go to state 50
    I64             shift and go to state 51
    F64             shift and go to state 52
    ENTERO          shift and go to state 59
    DECIMAL         shift and go to state 60
    CADENA          shift and go to state 61
    BOOLEANO        shift and go to state 62
    CARACTER        shift and go to state 63
    IF              shift and go to state 12
    MATCH           shift and go to state 64
    LOOP            shift and go to state 65
    WHILE           shift and go to state 13
    FOR             shift and go to state 66

    exp                            shift and go to state 172
    expmath                        shift and go to state 30
    expop                          shift and go to state 31
    exprel                         shift and go to state 32
    exparr                         shift and go to state 33
    newarray                       shift and go to state 34
    expvec                         shift and go to state 35
    exparam                        shift and go to state 36
    exppow                         shift and go to state 37
    expcast                        shift and go to state 38
    lista_acc                      shift and go to state 39
    llamada                        shift and go to state 40
    sentencia                      shift and go to state 41
    valores                        shift and go to state 42
    auxacc                         shift and go to state 53
    if                             shift and go to state 54
    match                          shift and go to state 55
    loop                           shift and go to state 56
    while                          shift and go to state 57
    for                            shift and go to state 58

state 98

    (141) exprel -> exp MAYORI . exp
    (110) exp -> . LPAR exp RPAR
    (111) exp -> . expmath
    (112) exp -> . expop
    (113) exp -> . exprel
    (114) exp -> . exparr
    (115) exp -> . newarray
    (116) exp -> . expvec
    (117) exp -> . exparam
    (118) exp -> . exppow
    (119) exp -> . expcast
    (120) exp -> . lista_acc
    (121) exp -> . llamada
    (122) exp -> . sentencia
    (123) exp -> . valores
    (124) exp -> . exp PUNTO exp_native
    (125) expmath -> . exp MAS exp
    (126) expmath -> . exp MENOS exp
    (127) expmath -> . exp MULTIPLICACION exp
    (128) expmath -> . exp DIVISION exp
    (129) expmath -> . exp MODULO exp
    (130) expmath -> . MENOS exp
    (133) expop -> . exp AND exp
    (134) expop -> . exp OR exp
    (135) expop -> . AD exp
    (137) exprel -> . exp IGUALI exp
    (138) exprel -> . exp DIF exp
    (139) exprel -> . exp MAYOR exp
    (140) exprel -> . exp MENOR exp
    (141) exprel -> . exp MAYORI exp
    (142) exprel -> . exp MENORI exp
    (152) exparr -> . ID lista_arr
    (155) newarray -> . LCOR lista_exp RCOR
    (156) newarray -> . LCOR auxexp PCOMA exp RCOR
    (153) expvec -> . VEC AD newarray
    (154) expvec -> . VECTOR DPUNTOS DPUNTOS exp_natarr
    (148) exparam -> . MUT ID
    (149) exparam -> . MUT valores
    (150) exparam -> . ANDSINGLE MUT ID
    (151) exparam -> . ANDSINGLE MUT valores
    (131) exppow -> . I64 DPUNTOS DPUNTOS POW LPAR exp COMA exp RPAR
    (132) exppow -> . F64 DPUNTOS DPUNTOS POWF LPAR exp COMA exp RPAR
    (136) expcast -> . exp AS tipo_var
    (92) lista_acc -> . lista_acc PUNTO ID
    (93) lista_acc -> . lista_acc PUNTO exp_native
    (94) lista_acc -> . auxacc
    (176) llamada -> . ID LPAR RPAR
    (177) llamada -> . ID LPAR lista_exp RPAR
    (37) sentencia -> . if
    (38) sentencia -> . match
    (39) sentencia -> . loop
    (40) sentencia -> . while
    (41) sentencia -> . for
    (157) valores -> . ENTERO
    (158) valores -> . DECIMAL
    (159) valores -> . CADENA
    (160) valores -> . BOOLEANO
    (161) valores -> . CARACTER
    (95) auxacc -> . exparr
    (96) auxacc -> . ID
    (42) if -> . IF exp statement else
    (47) match -> . MATCH exp match_statement
    (62) loop -> . LOOP statement
    (63) while -> . WHILE exp statement
    (64) for -> . FOR ID IN foriterative statement

    LPAR            shift and go to state 29
    MENOS           shift and go to state 43
    AD              shift and go to state 44
    ID              shift and go to state 45
    LCOR            shift and go to state 46
    VEC             shift and go to state 47
    VECTOR          shift and go to state 48
    MUT             shift and go to state 49
    ANDSINGLE       shift and go to state 50
    I64             shift and go to state 51
    F64             shift and go to state 52
    ENTERO          shift and go to state 59
    DECIMAL         shift and go to state 60
    CADENA          shift and go to state 61
    BOOLEANO        shift and go to state 62
    CARACTER        shift and go to state 63
    IF              shift and go to state 12
    MATCH           shift and go to state 64
    LOOP            shift and go to state 65
    WHILE           shift and go to state 13
    FOR             shift and go to state 66

    exp                            shift and go to state 173
    expmath                        shift and go to state 30
    expop                          shift and go to state 31
    exprel                         shift and go to state 32
    exparr                         shift and go to state 33
    newarray                       shift and go to state 34
    expvec                         shift and go to state 35
    exparam                        shift and go to state 36
    exppow                         shift and go to state 37
    expcast                        shift and go to state 38
    lista_acc                      shift and go to state 39
    llamada                        shift and go to state 40
    sentencia                      shift and go to state 41
    valores                        shift and go to state 42
    auxacc                         shift and go to state 53
    if                             shift and go to state 54
    match                          shift and go to state 55
    loop                           shift and go to state 56
    while                          shift and go to state 57
    for                            shift and go to state 58

state 99

    (142) exprel -> exp MENORI . exp
    (110) exp -> . LPAR exp RPAR
    (111) exp -> . expmath
    (112) exp -> . expop
    (113) exp -> . exprel
    (114) exp -> . exparr
    (115) exp -> . newarray
    (116) exp -> . expvec
    (117) exp -> . exparam
    (118) exp -> . exppow
    (119) exp -> . expcast
    (120) exp -> . lista_acc
    (121) exp -> . llamada
    (122) exp -> . sentencia
    (123) exp -> . valores
    (124) exp -> . exp PUNTO exp_native
    (125) expmath -> . exp MAS exp
    (126) expmath -> . exp MENOS exp
    (127) expmath -> . exp MULTIPLICACION exp
    (128) expmath -> . exp DIVISION exp
    (129) expmath -> . exp MODULO exp
    (130) expmath -> . MENOS exp
    (133) expop -> . exp AND exp
    (134) expop -> . exp OR exp
    (135) expop -> . AD exp
    (137) exprel -> . exp IGUALI exp
    (138) exprel -> . exp DIF exp
    (139) exprel -> . exp MAYOR exp
    (140) exprel -> . exp MENOR exp
    (141) exprel -> . exp MAYORI exp
    (142) exprel -> . exp MENORI exp
    (152) exparr -> . ID lista_arr
    (155) newarray -> . LCOR lista_exp RCOR
    (156) newarray -> . LCOR auxexp PCOMA exp RCOR
    (153) expvec -> . VEC AD newarray
    (154) expvec -> . VECTOR DPUNTOS DPUNTOS exp_natarr
    (148) exparam -> . MUT ID
    (149) exparam -> . MUT valores
    (150) exparam -> . ANDSINGLE MUT ID
    (151) exparam -> . ANDSINGLE MUT valores
    (131) exppow -> . I64 DPUNTOS DPUNTOS POW LPAR exp COMA exp RPAR
    (132) exppow -> . F64 DPUNTOS DPUNTOS POWF LPAR exp COMA exp RPAR
    (136) expcast -> . exp AS tipo_var
    (92) lista_acc -> . lista_acc PUNTO ID
    (93) lista_acc -> . lista_acc PUNTO exp_native
    (94) lista_acc -> . auxacc
    (176) llamada -> . ID LPAR RPAR
    (177) llamada -> . ID LPAR lista_exp RPAR
    (37) sentencia -> . if
    (38) sentencia -> . match
    (39) sentencia -> . loop
    (40) sentencia -> . while
    (41) sentencia -> . for
    (157) valores -> . ENTERO
    (158) valores -> . DECIMAL
    (159) valores -> . CADENA
    (160) valores -> . BOOLEANO
    (161) valores -> . CARACTER
    (95) auxacc -> . exparr
    (96) auxacc -> . ID
    (42) if -> . IF exp statement else
    (47) match -> . MATCH exp match_statement
    (62) loop -> . LOOP statement
    (63) while -> . WHILE exp statement
    (64) for -> . FOR ID IN foriterative statement

    LPAR            shift and go to state 29
    MENOS           shift and go to state 43
    AD              shift and go to state 44
    ID              shift and go to state 45
    LCOR            shift and go to state 46
    VEC             shift and go to state 47
    VECTOR          shift and go to state 48
    MUT             shift and go to state 49
    ANDSINGLE       shift and go to state 50
    I64             shift and go to state 51
    F64             shift and go to state 52
    ENTERO          shift and go to state 59
    DECIMAL         shift and go to state 60
    CADENA          shift and go to state 61
    BOOLEANO        shift and go to state 62
    CARACTER        shift and go to state 63
    IF              shift and go to state 12
    MATCH           shift and go to state 64
    LOOP            shift and go to state 65
    WHILE           shift and go to state 13
    FOR             shift and go to state 66

    exp                            shift and go to state 174
    expmath                        shift and go to state 30
    expop                          shift and go to state 31
    exprel                         shift and go to state 32
    exparr                         shift and go to state 33
    newarray                       shift and go to state 34
    expvec                         shift and go to state 35
    exparam                        shift and go to state 36
    exppow                         shift and go to state 37
    expcast                        shift and go to state 38
    lista_acc                      shift and go to state 39
    llamada                        shift and go to state 40
    sentencia                      shift and go to state 41
    valores                        shift and go to state 42
    auxacc                         shift and go to state 53
    if                             shift and go to state 54
    match                          shift and go to state 55
    loop                           shift and go to state 56
    while                          shift and go to state 57
    for                            shift and go to state 58

state 100

    (136) expcast -> exp AS . tipo_var
    (162) tipo_var -> . I64
    (163) tipo_var -> . F64
    (164) tipo_var -> . STRING
    (165) tipo_var -> . ANDSINGLE aSTR
    (166) tipo_var -> . BOOL
    (167) tipo_var -> . CHAR
    (168) tipo_var -> . USIZE
    (169) tipo_var -> . lista_arr2
    (170) tipo_var -> . LCOR tipo_var RCOR
    (171) tipo_var -> . lista_classtype
    (172) tipo_var -> . VECTOR MENOR tipo_var MAYOR
    (173) tipo_var -> . VECTOR MENOR lista_classtype MAYOR
    (107) lista_arr2 -> . LCOR tipo_var PCOMA exp RCOR
    (174) lista_classtype -> . lista_classtype DPUNTOS DPUNTOS ID
    (175) lista_classtype -> . ID

    I64             shift and go to state 126
    F64             shift and go to state 127
    STRING          shift and go to state 128
    ANDSINGLE       shift and go to state 176
    BOOL            shift and go to state 129
    CHAR            shift and go to state 130
    USIZE           shift and go to state 131
    LCOR            shift and go to state 133
    VECTOR          shift and go to state 135
    ID              shift and go to state 123

    tipo_var                       shift and go to state 175
    lista_arr2                     shift and go to state 132
    lista_classtype                shift and go to state 134

state 101

    (73) statement -> LLLAV . instrucciones_l RLLAV
    (74) statement -> LLLAV . RLLAV
    (9) instrucciones_l -> . instrucciones_l instruccion_l
    (10) instrucciones_l -> . instruccion_l
    (11) instruccion_l -> . print PCOMA
    (12) instruccion_l -> . declaracion PCOMA
    (13) instruccion_l -> . asignacion PCOMA
    (14) instruccion_l -> . llamada PCOMA
    (15) instruccion_l -> . expstruct PCOMA
    (16) instruccion_l -> . ID PUNTO exp_native PCOMA
    (17) instruccion_l -> . sentencia
    (18) instruccion_l -> . transferencia
    (19) instruccion_l -> . transferencia PCOMA
    (192) print -> . PRINT AD LPAR lista_exp RPAR
    (81) declaracion -> . LET asignacion_simple IGUAL auxexp
    (82) declaracion -> . LET MUT asignacion
    (83) declaracion -> . LET asignacion
    (84) asignacion -> . ID IGUAL auxexp
    (85) asignacion -> . ID lista_assign2 IGUAL auxexp
    (86) asignacion -> . ID lista_arr IGUAL auxexp
    (87) asignacion -> . ID lista_arr lista_assign2 IGUAL auxexp
    (176) llamada -> . ID LPAR RPAR
    (177) llamada -> . ID LPAR lista_exp RPAR
    (143) expstruct -> . lista_classtype LLLAV lista_att RLLAV
    (144) expstruct -> . lista_classtype LLLAV RLLAV
    (145) expstruct -> . lista_classtype DPUNTOS DPUNTOS llamada
    (37) sentencia -> . if
    (38) sentencia -> . match
    (39) sentencia -> . loop
    (40) sentencia -> . while
    (41) sentencia -> . for
    (67) transferencia -> . CONTINUE
    (68) transferencia -> . BREAK
    (69) transferencia -> . BREAK auxexp
    (70) transferencia -> . RETURN
    (71) transferencia -> . RETURN auxexp
    (72) transferencia -> . auxexp
    (174) lista_classtype -> . lista_classtype DPUNTOS DPUNTOS ID
    (175) lista_classtype -> . ID
    (42) if -> . IF exp statement else
    (47) match -> . MATCH exp match_statement
    (62) loop -> . LOOP statement
    (63) while -> . WHILE exp statement
    (64) for -> . FOR ID IN foriterative statement
    (108) auxexp -> . expstruct
    (109) auxexp -> . exp
    (110) exp -> . LPAR exp RPAR
    (111) exp -> . expmath
    (112) exp -> . expop
    (113) exp -> . exprel
    (114) exp -> . exparr
    (115) exp -> . newarray
    (116) exp -> . expvec
    (117) exp -> . exparam
    (118) exp -> . exppow
    (119) exp -> . expcast
    (120) exp -> . lista_acc
    (121) exp -> . llamada
    (122) exp -> . sentencia
    (123) exp -> . valores
    (124) exp -> . exp PUNTO exp_native
    (125) expmath -> . exp MAS exp
    (126) expmath -> . exp MENOS exp
    (127) expmath -> . exp MULTIPLICACION exp
    (128) expmath -> . exp DIVISION exp
    (129) expmath -> . exp MODULO exp
    (130) expmath -> . MENOS exp
    (133) expop -> . exp AND exp
    (134) expop -> . exp OR exp
    (135) expop -> . AD exp
    (137) exprel -> . exp IGUALI exp
    (138) exprel -> . exp DIF exp
    (139) exprel -> . exp MAYOR exp
    (140) exprel -> . exp MENOR exp
    (141) exprel -> . exp MAYORI exp
    (142) exprel -> . exp MENORI exp
    (152) exparr -> . ID lista_arr
    (155) newarray -> . LCOR lista_exp RCOR
    (156) newarray -> . LCOR auxexp PCOMA exp RCOR
    (153) expvec -> . VEC AD newarray
    (154) expvec -> . VECTOR DPUNTOS DPUNTOS exp_natarr
    (148) exparam -> . MUT ID
    (149) exparam -> . MUT valores
    (150) exparam -> . ANDSINGLE MUT ID
    (151) exparam -> . ANDSINGLE MUT valores
    (131) exppow -> . I64 DPUNTOS DPUNTOS POW LPAR exp COMA exp RPAR
    (132) exppow -> . F64 DPUNTOS DPUNTOS POWF LPAR exp COMA exp RPAR
    (136) expcast -> . exp AS tipo_var
    (92) lista_acc -> . lista_acc PUNTO ID
    (93) lista_acc -> . lista_acc PUNTO exp_native
    (94) lista_acc -> . auxacc
    (157) valores -> . ENTERO
    (158) valores -> . DECIMAL
    (159) valores -> . CADENA
    (160) valores -> . BOOLEANO
    (161) valores -> . CARACTER
    (95) auxacc -> . exparr
    (96) auxacc -> . ID

    RLLAV           shift and go to state 178
    ID              shift and go to state 185
    PRINT           shift and go to state 11
    LET             shift and go to state 9
    CONTINUE        shift and go to state 189
    BREAK           shift and go to state 190
    RETURN          shift and go to state 191
    IF              shift and go to state 12
    MATCH           shift and go to state 64
    LOOP            shift and go to state 65
    WHILE           shift and go to state 13
    FOR             shift and go to state 66
    LPAR            shift and go to state 29
    MENOS           shift and go to state 43
    AD              shift and go to state 44
    LCOR            shift and go to state 46
    VEC             shift and go to state 47
    VECTOR          shift and go to state 48
    MUT             shift and go to state 49
    ANDSINGLE       shift and go to state 50
    I64             shift and go to state 51
    F64             shift and go to state 52
    ENTERO          shift and go to state 59
    DECIMAL         shift and go to state 60
    CADENA          shift and go to state 61
    BOOLEANO        shift and go to state 62
    CARACTER        shift and go to state 63

    instrucciones_l                shift and go to state 177
    instruccion_l                  shift and go to state 179
    print                          shift and go to state 180
    declaracion                    shift and go to state 181
    asignacion                     shift and go to state 182
    llamada                        shift and go to state 183
    expstruct                      shift and go to state 184
    sentencia                      shift and go to state 186
    transferencia                  shift and go to state 187
    auxexp                         shift and go to state 188
    lista_classtype                shift and go to state 76
    if                             shift and go to state 54
    match                          shift and go to state 55
    loop                           shift and go to state 56
    while                          shift and go to state 57
    for                            shift and go to state 58
    exp                            shift and go to state 75
    expmath                        shift and go to state 30
    expop                          shift and go to state 31
    exprel                         shift and go to state 32
    exparr                         shift and go to state 33
    newarray                       shift and go to state 34
    expvec                         shift and go to state 35
    exparam                        shift and go to state 36
    exppow                         shift and go to state 37
    expcast                        shift and go to state 38
    lista_acc                      shift and go to state 39
    valores                        shift and go to state 42
    auxacc                         shift and go to state 53

state 102

    (110) exp -> LPAR exp . RPAR
    (124) exp -> exp . PUNTO exp_native
    (125) expmath -> exp . MAS exp
    (126) expmath -> exp . MENOS exp
    (127) expmath -> exp . MULTIPLICACION exp
    (128) expmath -> exp . DIVISION exp
    (129) expmath -> exp . MODULO exp
    (133) expop -> exp . AND exp
    (134) expop -> exp . OR exp
    (137) exprel -> exp . IGUALI exp
    (138) exprel -> exp . DIF exp
    (139) exprel -> exp . MAYOR exp
    (140) exprel -> exp . MENOR exp
    (141) exprel -> exp . MAYORI exp
    (142) exprel -> exp . MENORI exp
    (136) expcast -> exp . AS tipo_var

    RPAR            shift and go to state 192
    PUNTO           shift and go to state 86
    MAS             shift and go to state 87
    MENOS           shift and go to state 88
    MULTIPLICACION  shift and go to state 89
    DIVISION        shift and go to state 90
    MODULO          shift and go to state 91
    AND             shift and go to state 92
    OR              shift and go to state 93
    IGUALI          shift and go to state 94
    DIF             shift and go to state 95
    MAYOR           shift and go to state 96
    MENOR           shift and go to state 97
    MAYORI          shift and go to state 98
    MENORI          shift and go to state 99
    AS              shift and go to state 100


state 103

    (92) lista_acc -> lista_acc PUNTO . ID
    (93) lista_acc -> lista_acc PUNTO . exp_native
    (178) exp_native -> . TOSTRING LPAR RPAR
    (179) exp_native -> . TOOWNED LPAR RPAR
    (180) exp_native -> . CLONE LPAR RPAR
    (181) exp_native -> . LEN LPAR RPAR
    (182) exp_native -> . CAPACITY LPAR RPAR
    (183) exp_native -> . REMOVE LPAR auxexp RPAR
    (184) exp_native -> . CONTAINS LPAR ANDSINGLE auxexp RPAR
    (185) exp_native -> . PUSH LPAR auxexp RPAR
    (186) exp_native -> . INSERT LPAR lista_exp RPAR
    (187) exp_native -> . CHARS LPAR RPAR
    (188) exp_native -> . SQRT LPAR RPAR
    (189) exp_native -> . ABS LPAR RPAR

    ID              shift and go to state 193
    TOSTRING        shift and go to state 150
    TOOWNED         shift and go to state 151
    CLONE           shift and go to state 152
    LEN             shift and go to state 153
    CAPACITY        shift and go to state 154
    REMOVE          shift and go to state 155
    CONTAINS        shift and go to state 156
    PUSH            shift and go to state 157
    INSERT          shift and go to state 158
    CHARS           shift and go to state 159
    SQRT            shift and go to state 160
    ABS             shift and go to state 161

    exp_native                     shift and go to state 194

state 104

    (130) expmath -> MENOS exp .
    (124) exp -> exp . PUNTO exp_native
    (125) expmath -> exp . MAS exp
    (126) expmath -> exp . MENOS exp
    (127) expmath -> exp . MULTIPLICACION exp
    (128) expmath -> exp . DIVISION exp
    (129) expmath -> exp . MODULO exp
    (133) expop -> exp . AND exp
    (134) expop -> exp . OR exp
    (137) exprel -> exp . IGUALI exp
    (138) exprel -> exp . DIF exp
    (139) exprel -> exp . MAYOR exp
    (140) exprel -> exp . MENOR exp
    (141) exprel -> exp . MAYORI exp
    (142) exprel -> exp . MENORI exp
    (136) expcast -> exp . AS tipo_var

    PUNTO           reduce using rule 130 (expmath -> MENOS exp .)
    MAS             reduce using rule 130 (expmath -> MENOS exp .)
    MENOS           reduce using rule 130 (expmath -> MENOS exp .)
    MULTIPLICACION  reduce using rule 130 (expmath -> MENOS exp .)
    DIVISION        reduce using rule 130 (expmath -> MENOS exp .)
    MODULO          reduce using rule 130 (expmath -> MENOS exp .)
    AND             reduce using rule 130 (expmath -> MENOS exp .)
    OR              reduce using rule 130 (expmath -> MENOS exp .)
    IGUALI          reduce using rule 130 (expmath -> MENOS exp .)
    DIF             reduce using rule 130 (expmath -> MENOS exp .)
    MAYOR           reduce using rule 130 (expmath -> MENOS exp .)
    MENOR           reduce using rule 130 (expmath -> MENOS exp .)
    MAYORI          reduce using rule 130 (expmath -> MENOS exp .)
    MENORI          reduce using rule 130 (expmath -> MENOS exp .)
    AS              reduce using rule 130 (expmath -> MENOS exp .)
    LLLAV           reduce using rule 130 (expmath -> MENOS exp .)
    PCOMA           reduce using rule 130 (expmath -> MENOS exp .)
    COMA            reduce using rule 130 (expmath -> MENOS exp .)
    RCOR            reduce using rule 130 (expmath -> MENOS exp .)
    RPAR            reduce using rule 130 (expmath -> MENOS exp .)
    RLLAV           reduce using rule 130 (expmath -> MENOS exp .)
    ID              reduce using rule 130 (expmath -> MENOS exp .)
    PRINT           reduce using rule 130 (expmath -> MENOS exp .)
    LET             reduce using rule 130 (expmath -> MENOS exp .)
    CONTINUE        reduce using rule 130 (expmath -> MENOS exp .)
    BREAK           reduce using rule 130 (expmath -> MENOS exp .)
    RETURN          reduce using rule 130 (expmath -> MENOS exp .)
    IF              reduce using rule 130 (expmath -> MENOS exp .)
    MATCH           reduce using rule 130 (expmath -> MENOS exp .)
    LOOP            reduce using rule 130 (expmath -> MENOS exp .)
    WHILE           reduce using rule 130 (expmath -> MENOS exp .)
    FOR             reduce using rule 130 (expmath -> MENOS exp .)
    LPAR            reduce using rule 130 (expmath -> MENOS exp .)
    AD              reduce using rule 130 (expmath -> MENOS exp .)
    LCOR            reduce using rule 130 (expmath -> MENOS exp .)
    VEC             reduce using rule 130 (expmath -> MENOS exp .)
    VECTOR          reduce using rule 130 (expmath -> MENOS exp .)
    MUT             reduce using rule 130 (expmath -> MENOS exp .)
    ANDSINGLE       reduce using rule 130 (expmath -> MENOS exp .)
    I64             reduce using rule 130 (expmath -> MENOS exp .)
    F64             reduce using rule 130 (expmath -> MENOS exp .)
    ENTERO          reduce using rule 130 (expmath -> MENOS exp .)
    DECIMAL         reduce using rule 130 (expmath -> MENOS exp .)
    CADENA          reduce using rule 130 (expmath -> MENOS exp .)
    BOOLEANO        reduce using rule 130 (expmath -> MENOS exp .)
    CARACTER        reduce using rule 130 (expmath -> MENOS exp .)
    ARROW2          reduce using rule 130 (expmath -> MENOS exp .)
    ORSINGLE        reduce using rule 130 (expmath -> MENOS exp .)

  ! PUNTO           [ shift and go to state 86 ]
  ! MAS             [ shift and go to state 87 ]
  ! MENOS           [ shift and go to state 88 ]
  ! MULTIPLICACION  [ shift and go to state 89 ]
  ! DIVISION        [ shift and go to state 90 ]
  ! MODULO          [ shift and go to state 91 ]
  ! AND             [ shift and go to state 92 ]
  ! OR              [ shift and go to state 93 ]
  ! IGUALI          [ shift and go to state 94 ]
  ! DIF             [ shift and go to state 95 ]
  ! MAYOR           [ shift and go to state 96 ]
  ! MENOR           [ shift and go to state 97 ]
  ! MAYORI          [ shift and go to state 98 ]
  ! MENORI          [ shift and go to state 99 ]
  ! AS              [ shift and go to state 100 ]


state 105

    (135) expop -> AD exp .
    (124) exp -> exp . PUNTO exp_native
    (125) expmath -> exp . MAS exp
    (126) expmath -> exp . MENOS exp
    (127) expmath -> exp . MULTIPLICACION exp
    (128) expmath -> exp . DIVISION exp
    (129) expmath -> exp . MODULO exp
    (133) expop -> exp . AND exp
    (134) expop -> exp . OR exp
    (137) exprel -> exp . IGUALI exp
    (138) exprel -> exp . DIF exp
    (139) exprel -> exp . MAYOR exp
    (140) exprel -> exp . MENOR exp
    (141) exprel -> exp . MAYORI exp
    (142) exprel -> exp . MENORI exp
    (136) expcast -> exp . AS tipo_var

    PUNTO           reduce using rule 135 (expop -> AD exp .)
    AND             reduce using rule 135 (expop -> AD exp .)
    OR              reduce using rule 135 (expop -> AD exp .)
    AS              reduce using rule 135 (expop -> AD exp .)
    LLLAV           reduce using rule 135 (expop -> AD exp .)
    PCOMA           reduce using rule 135 (expop -> AD exp .)
    COMA            reduce using rule 135 (expop -> AD exp .)
    RCOR            reduce using rule 135 (expop -> AD exp .)
    RPAR            reduce using rule 135 (expop -> AD exp .)
    RLLAV           reduce using rule 135 (expop -> AD exp .)
    ID              reduce using rule 135 (expop -> AD exp .)
    PRINT           reduce using rule 135 (expop -> AD exp .)
    LET             reduce using rule 135 (expop -> AD exp .)
    CONTINUE        reduce using rule 135 (expop -> AD exp .)
    BREAK           reduce using rule 135 (expop -> AD exp .)
    RETURN          reduce using rule 135 (expop -> AD exp .)
    IF              reduce using rule 135 (expop -> AD exp .)
    MATCH           reduce using rule 135 (expop -> AD exp .)
    LOOP            reduce using rule 135 (expop -> AD exp .)
    WHILE           reduce using rule 135 (expop -> AD exp .)
    FOR             reduce using rule 135 (expop -> AD exp .)
    LPAR            reduce using rule 135 (expop -> AD exp .)
    AD              reduce using rule 135 (expop -> AD exp .)
    LCOR            reduce using rule 135 (expop -> AD exp .)
    VEC             reduce using rule 135 (expop -> AD exp .)
    VECTOR          reduce using rule 135 (expop -> AD exp .)
    MUT             reduce using rule 135 (expop -> AD exp .)
    ANDSINGLE       reduce using rule 135 (expop -> AD exp .)
    I64             reduce using rule 135 (expop -> AD exp .)
    F64             reduce using rule 135 (expop -> AD exp .)
    ENTERO          reduce using rule 135 (expop -> AD exp .)
    DECIMAL         reduce using rule 135 (expop -> AD exp .)
    CADENA          reduce using rule 135 (expop -> AD exp .)
    BOOLEANO        reduce using rule 135 (expop -> AD exp .)
    CARACTER        reduce using rule 135 (expop -> AD exp .)
    ARROW2          reduce using rule 135 (expop -> AD exp .)
    ORSINGLE        reduce using rule 135 (expop -> AD exp .)
    MAS             shift and go to state 87
    MENOS           shift and go to state 88
    MULTIPLICACION  shift and go to state 89
    DIVISION        shift and go to state 90
    MODULO          shift and go to state 91
    IGUALI          shift and go to state 94
    DIF             shift and go to state 95
    MAYOR           shift and go to state 96
    MENOR           shift and go to state 97
    MAYORI          shift and go to state 98
    MENORI          shift and go to state 99

  ! MAS             [ reduce using rule 135 (expop -> AD exp .) ]
  ! MENOS           [ reduce using rule 135 (expop -> AD exp .) ]
  ! MULTIPLICACION  [ reduce using rule 135 (expop -> AD exp .) ]
  ! DIVISION        [ reduce using rule 135 (expop -> AD exp .) ]
  ! MODULO          [ reduce using rule 135 (expop -> AD exp .) ]
  ! IGUALI          [ reduce using rule 135 (expop -> AD exp .) ]
  ! DIF             [ reduce using rule 135 (expop -> AD exp .) ]
  ! MAYOR           [ reduce using rule 135 (expop -> AD exp .) ]
  ! MENOR           [ reduce using rule 135 (expop -> AD exp .) ]
  ! MAYORI          [ reduce using rule 135 (expop -> AD exp .) ]
  ! MENORI          [ reduce using rule 135 (expop -> AD exp .) ]
  ! PUNTO           [ shift and go to state 86 ]
  ! AND             [ shift and go to state 92 ]
  ! OR              [ shift and go to state 93 ]
  ! AS              [ shift and go to state 100 ]


state 106

    (152) exparr -> ID lista_arr .
    (97) lista_arr -> lista_arr . LCOR auxexp RCOR

  ! shift/reduce conflict for LCOR resolved as shift
    PUNTO           reduce using rule 152 (exparr -> ID lista_arr .)
    MAS             reduce using rule 152 (exparr -> ID lista_arr .)
    MENOS           reduce using rule 152 (exparr -> ID lista_arr .)
    MULTIPLICACION  reduce using rule 152 (exparr -> ID lista_arr .)
    DIVISION        reduce using rule 152 (exparr -> ID lista_arr .)
    MODULO          reduce using rule 152 (exparr -> ID lista_arr .)
    AND             reduce using rule 152 (exparr -> ID lista_arr .)
    OR              reduce using rule 152 (exparr -> ID lista_arr .)
    IGUALI          reduce using rule 152 (exparr -> ID lista_arr .)
    DIF             reduce using rule 152 (exparr -> ID lista_arr .)
    MAYOR           reduce using rule 152 (exparr -> ID lista_arr .)
    MENOR           reduce using rule 152 (exparr -> ID lista_arr .)
    MAYORI          reduce using rule 152 (exparr -> ID lista_arr .)
    MENORI          reduce using rule 152 (exparr -> ID lista_arr .)
    AS              reduce using rule 152 (exparr -> ID lista_arr .)
    LLLAV           reduce using rule 152 (exparr -> ID lista_arr .)
    PCOMA           reduce using rule 152 (exparr -> ID lista_arr .)
    COMA            reduce using rule 152 (exparr -> ID lista_arr .)
    RCOR            reduce using rule 152 (exparr -> ID lista_arr .)
    RPAR            reduce using rule 152 (exparr -> ID lista_arr .)
    RLLAV           reduce using rule 152 (exparr -> ID lista_arr .)
    ID              reduce using rule 152 (exparr -> ID lista_arr .)
    PRINT           reduce using rule 152 (exparr -> ID lista_arr .)
    LET             reduce using rule 152 (exparr -> ID lista_arr .)
    CONTINUE        reduce using rule 152 (exparr -> ID lista_arr .)
    BREAK           reduce using rule 152 (exparr -> ID lista_arr .)
    RETURN          reduce using rule 152 (exparr -> ID lista_arr .)
    IF              reduce using rule 152 (exparr -> ID lista_arr .)
    MATCH           reduce using rule 152 (exparr -> ID lista_arr .)
    LOOP            reduce using rule 152 (exparr -> ID lista_arr .)
    WHILE           reduce using rule 152 (exparr -> ID lista_arr .)
    FOR             reduce using rule 152 (exparr -> ID lista_arr .)
    LPAR            reduce using rule 152 (exparr -> ID lista_arr .)
    AD              reduce using rule 152 (exparr -> ID lista_arr .)
    VEC             reduce using rule 152 (exparr -> ID lista_arr .)
    VECTOR          reduce using rule 152 (exparr -> ID lista_arr .)
    MUT             reduce using rule 152 (exparr -> ID lista_arr .)
    ANDSINGLE       reduce using rule 152 (exparr -> ID lista_arr .)
    I64             reduce using rule 152 (exparr -> ID lista_arr .)
    F64             reduce using rule 152 (exparr -> ID lista_arr .)
    ENTERO          reduce using rule 152 (exparr -> ID lista_arr .)
    DECIMAL         reduce using rule 152 (exparr -> ID lista_arr .)
    CADENA          reduce using rule 152 (exparr -> ID lista_arr .)
    BOOLEANO        reduce using rule 152 (exparr -> ID lista_arr .)
    CARACTER        reduce using rule 152 (exparr -> ID lista_arr .)
    ARROW2          reduce using rule 152 (exparr -> ID lista_arr .)
    ORSINGLE        reduce using rule 152 (exparr -> ID lista_arr .)
    LCOR            shift and go to state 81

  ! LCOR            [ reduce using rule 152 (exparr -> ID lista_arr .) ]


state 107

    (176) llamada -> ID LPAR . RPAR
    (177) llamada -> ID LPAR . lista_exp RPAR
    (99) lista_exp -> . lista_exp COMA auxexp
    (100) lista_exp -> . auxexp
    (108) auxexp -> . expstruct
    (109) auxexp -> . exp
    (143) expstruct -> . lista_classtype LLLAV lista_att RLLAV
    (144) expstruct -> . lista_classtype LLLAV RLLAV
    (145) expstruct -> . lista_classtype DPUNTOS DPUNTOS llamada
    (110) exp -> . LPAR exp RPAR
    (111) exp -> . expmath
    (112) exp -> . expop
    (113) exp -> . exprel
    (114) exp -> . exparr
    (115) exp -> . newarray
    (116) exp -> . expvec
    (117) exp -> . exparam
    (118) exp -> . exppow
    (119) exp -> . expcast
    (120) exp -> . lista_acc
    (121) exp -> . llamada
    (122) exp -> . sentencia
    (123) exp -> . valores
    (124) exp -> . exp PUNTO exp_native
    (174) lista_classtype -> . lista_classtype DPUNTOS DPUNTOS ID
    (175) lista_classtype -> . ID
    (125) expmath -> . exp MAS exp
    (126) expmath -> . exp MENOS exp
    (127) expmath -> . exp MULTIPLICACION exp
    (128) expmath -> . exp DIVISION exp
    (129) expmath -> . exp MODULO exp
    (130) expmath -> . MENOS exp
    (133) expop -> . exp AND exp
    (134) expop -> . exp OR exp
    (135) expop -> . AD exp
    (137) exprel -> . exp IGUALI exp
    (138) exprel -> . exp DIF exp
    (139) exprel -> . exp MAYOR exp
    (140) exprel -> . exp MENOR exp
    (141) exprel -> . exp MAYORI exp
    (142) exprel -> . exp MENORI exp
    (152) exparr -> . ID lista_arr
    (155) newarray -> . LCOR lista_exp RCOR
    (156) newarray -> . LCOR auxexp PCOMA exp RCOR
    (153) expvec -> . VEC AD newarray
    (154) expvec -> . VECTOR DPUNTOS DPUNTOS exp_natarr
    (148) exparam -> . MUT ID
    (149) exparam -> . MUT valores
    (150) exparam -> . ANDSINGLE MUT ID
    (151) exparam -> . ANDSINGLE MUT valores
    (131) exppow -> . I64 DPUNTOS DPUNTOS POW LPAR exp COMA exp RPAR
    (132) exppow -> . F64 DPUNTOS DPUNTOS POWF LPAR exp COMA exp RPAR
    (136) expcast -> . exp AS tipo_var
    (92) lista_acc -> . lista_acc PUNTO ID
    (93) lista_acc -> . lista_acc PUNTO exp_native
    (94) lista_acc -> . auxacc
    (176) llamada -> . ID LPAR RPAR
    (177) llamada -> . ID LPAR lista_exp RPAR
    (37) sentencia -> . if
    (38) sentencia -> . match
    (39) sentencia -> . loop
    (40) sentencia -> . while
    (41) sentencia -> . for
    (157) valores -> . ENTERO
    (158) valores -> . DECIMAL
    (159) valores -> . CADENA
    (160) valores -> . BOOLEANO
    (161) valores -> . CARACTER
    (95) auxacc -> . exparr
    (96) auxacc -> . ID
    (42) if -> . IF exp statement else
    (47) match -> . MATCH exp match_statement
    (62) loop -> . LOOP statement
    (63) while -> . WHILE exp statement
    (64) for -> . FOR ID IN foriterative statement

    RPAR            shift and go to state 195
    LPAR            shift and go to state 29
    ID              shift and go to state 72
    MENOS           shift and go to state 43
    AD              shift and go to state 44
    LCOR            shift and go to state 46
    VEC             shift and go to state 47
    VECTOR          shift and go to state 48
    MUT             shift and go to state 49
    ANDSINGLE       shift and go to state 50
    I64             shift and go to state 51
    F64             shift and go to state 52
    ENTERO          shift and go to state 59
    DECIMAL         shift and go to state 60
    CADENA          shift and go to state 61
    BOOLEANO        shift and go to state 62
    CARACTER        shift and go to state 63
    IF              shift and go to state 12
    MATCH           shift and go to state 64
    LOOP            shift and go to state 65
    WHILE           shift and go to state 13
    FOR             shift and go to state 66

    lista_exp                      shift and go to state 196
    auxexp                         shift and go to state 145
    expstruct                      shift and go to state 74
    exp                            shift and go to state 75
    lista_classtype                shift and go to state 76
    llamada                        shift and go to state 40
    expmath                        shift and go to state 30
    expop                          shift and go to state 31
    exprel                         shift and go to state 32
    exparr                         shift and go to state 33
    newarray                       shift and go to state 34
    expvec                         shift and go to state 35
    exparam                        shift and go to state 36
    exppow                         shift and go to state 37
    expcast                        shift and go to state 38
    lista_acc                      shift and go to state 39
    sentencia                      shift and go to state 41
    valores                        shift and go to state 42
    auxacc                         shift and go to state 53
    if                             shift and go to state 54
    match                          shift and go to state 55
    loop                           shift and go to state 56
    while                          shift and go to state 57
    for                            shift and go to state 58

state 108

    (155) newarray -> LCOR lista_exp . RCOR
    (99) lista_exp -> lista_exp . COMA auxexp

    RCOR            shift and go to state 197
    COMA            shift and go to state 198


state 109

    (156) newarray -> LCOR auxexp . PCOMA exp RCOR
    (100) lista_exp -> auxexp .

    PCOMA           shift and go to state 199
    RCOR            reduce using rule 100 (lista_exp -> auxexp .)
    COMA            reduce using rule 100 (lista_exp -> auxexp .)


state 110

    (153) expvec -> VEC AD . newarray
    (155) newarray -> . LCOR lista_exp RCOR
    (156) newarray -> . LCOR auxexp PCOMA exp RCOR

    LCOR            shift and go to state 46

    newarray                       shift and go to state 200

state 111

    (154) expvec -> VECTOR DPUNTOS . DPUNTOS exp_natarr

    DPUNTOS         shift and go to state 201


state 112

    (148) exparam -> MUT ID .

    PUNTO           reduce using rule 148 (exparam -> MUT ID .)
    MAS             reduce using rule 148 (exparam -> MUT ID .)
    MENOS           reduce using rule 148 (exparam -> MUT ID .)
    MULTIPLICACION  reduce using rule 148 (exparam -> MUT ID .)
    DIVISION        reduce using rule 148 (exparam -> MUT ID .)
    MODULO          reduce using rule 148 (exparam -> MUT ID .)
    AND             reduce using rule 148 (exparam -> MUT ID .)
    OR              reduce using rule 148 (exparam -> MUT ID .)
    IGUALI          reduce using rule 148 (exparam -> MUT ID .)
    DIF             reduce using rule 148 (exparam -> MUT ID .)
    MAYOR           reduce using rule 148 (exparam -> MUT ID .)
    MENOR           reduce using rule 148 (exparam -> MUT ID .)
    MAYORI          reduce using rule 148 (exparam -> MUT ID .)
    MENORI          reduce using rule 148 (exparam -> MUT ID .)
    AS              reduce using rule 148 (exparam -> MUT ID .)
    LLLAV           reduce using rule 148 (exparam -> MUT ID .)
    PCOMA           reduce using rule 148 (exparam -> MUT ID .)
    COMA            reduce using rule 148 (exparam -> MUT ID .)
    RCOR            reduce using rule 148 (exparam -> MUT ID .)
    RPAR            reduce using rule 148 (exparam -> MUT ID .)
    RLLAV           reduce using rule 148 (exparam -> MUT ID .)
    ID              reduce using rule 148 (exparam -> MUT ID .)
    PRINT           reduce using rule 148 (exparam -> MUT ID .)
    LET             reduce using rule 148 (exparam -> MUT ID .)
    CONTINUE        reduce using rule 148 (exparam -> MUT ID .)
    BREAK           reduce using rule 148 (exparam -> MUT ID .)
    RETURN          reduce using rule 148 (exparam -> MUT ID .)
    IF              reduce using rule 148 (exparam -> MUT ID .)
    MATCH           reduce using rule 148 (exparam -> MUT ID .)
    LOOP            reduce using rule 148 (exparam -> MUT ID .)
    WHILE           reduce using rule 148 (exparam -> MUT ID .)
    FOR             reduce using rule 148 (exparam -> MUT ID .)
    LPAR            reduce using rule 148 (exparam -> MUT ID .)
    AD              reduce using rule 148 (exparam -> MUT ID .)
    LCOR            reduce using rule 148 (exparam -> MUT ID .)
    VEC             reduce using rule 148 (exparam -> MUT ID .)
    VECTOR          reduce using rule 148 (exparam -> MUT ID .)
    MUT             reduce using rule 148 (exparam -> MUT ID .)
    ANDSINGLE       reduce using rule 148 (exparam -> MUT ID .)
    I64             reduce using rule 148 (exparam -> MUT ID .)
    F64             reduce using rule 148 (exparam -> MUT ID .)
    ENTERO          reduce using rule 148 (exparam -> MUT ID .)
    DECIMAL         reduce using rule 148 (exparam -> MUT ID .)
    CADENA          reduce using rule 148 (exparam -> MUT ID .)
    BOOLEANO        reduce using rule 148 (exparam -> MUT ID .)
    CARACTER        reduce using rule 148 (exparam -> MUT ID .)
    ARROW2          reduce using rule 148 (exparam -> MUT ID .)
    ORSINGLE        reduce using rule 148 (exparam -> MUT ID .)


state 113

    (149) exparam -> MUT valores .

    PUNTO           reduce using rule 149 (exparam -> MUT valores .)
    MAS             reduce using rule 149 (exparam -> MUT valores .)
    MENOS           reduce using rule 149 (exparam -> MUT valores .)
    MULTIPLICACION  reduce using rule 149 (exparam -> MUT valores .)
    DIVISION        reduce using rule 149 (exparam -> MUT valores .)
    MODULO          reduce using rule 149 (exparam -> MUT valores .)
    AND             reduce using rule 149 (exparam -> MUT valores .)
    OR              reduce using rule 149 (exparam -> MUT valores .)
    IGUALI          reduce using rule 149 (exparam -> MUT valores .)
    DIF             reduce using rule 149 (exparam -> MUT valores .)
    MAYOR           reduce using rule 149 (exparam -> MUT valores .)
    MENOR           reduce using rule 149 (exparam -> MUT valores .)
    MAYORI          reduce using rule 149 (exparam -> MUT valores .)
    MENORI          reduce using rule 149 (exparam -> MUT valores .)
    AS              reduce using rule 149 (exparam -> MUT valores .)
    LLLAV           reduce using rule 149 (exparam -> MUT valores .)
    PCOMA           reduce using rule 149 (exparam -> MUT valores .)
    COMA            reduce using rule 149 (exparam -> MUT valores .)
    RCOR            reduce using rule 149 (exparam -> MUT valores .)
    RPAR            reduce using rule 149 (exparam -> MUT valores .)
    RLLAV           reduce using rule 149 (exparam -> MUT valores .)
    ID              reduce using rule 149 (exparam -> MUT valores .)
    PRINT           reduce using rule 149 (exparam -> MUT valores .)
    LET             reduce using rule 149 (exparam -> MUT valores .)
    CONTINUE        reduce using rule 149 (exparam -> MUT valores .)
    BREAK           reduce using rule 149 (exparam -> MUT valores .)
    RETURN          reduce using rule 149 (exparam -> MUT valores .)
    IF              reduce using rule 149 (exparam -> MUT valores .)
    MATCH           reduce using rule 149 (exparam -> MUT valores .)
    LOOP            reduce using rule 149 (exparam -> MUT valores .)
    WHILE           reduce using rule 149 (exparam -> MUT valores .)
    FOR             reduce using rule 149 (exparam -> MUT valores .)
    LPAR            reduce using rule 149 (exparam -> MUT valores .)
    AD              reduce using rule 149 (exparam -> MUT valores .)
    LCOR            reduce using rule 149 (exparam -> MUT valores .)
    VEC             reduce using rule 149 (exparam -> MUT valores .)
    VECTOR          reduce using rule 149 (exparam -> MUT valores .)
    MUT             reduce using rule 149 (exparam -> MUT valores .)
    ANDSINGLE       reduce using rule 149 (exparam -> MUT valores .)
    I64             reduce using rule 149 (exparam -> MUT valores .)
    F64             reduce using rule 149 (exparam -> MUT valores .)
    ENTERO          reduce using rule 149 (exparam -> MUT valores .)
    DECIMAL         reduce using rule 149 (exparam -> MUT valores .)
    CADENA          reduce using rule 149 (exparam -> MUT valores .)
    BOOLEANO        reduce using rule 149 (exparam -> MUT valores .)
    CARACTER        reduce using rule 149 (exparam -> MUT valores .)
    ARROW2          reduce using rule 149 (exparam -> MUT valores .)
    ORSINGLE        reduce using rule 149 (exparam -> MUT valores .)


state 114

    (150) exparam -> ANDSINGLE MUT . ID
    (151) exparam -> ANDSINGLE MUT . valores
    (157) valores -> . ENTERO
    (158) valores -> . DECIMAL
    (159) valores -> . CADENA
    (160) valores -> . BOOLEANO
    (161) valores -> . CARACTER

    ID              shift and go to state 202
    ENTERO          shift and go to state 59
    DECIMAL         shift and go to state 60
    CADENA          shift and go to state 61
    BOOLEANO        shift and go to state 62
    CARACTER        shift and go to state 63

    valores                        shift and go to state 203

state 115

    (131) exppow -> I64 DPUNTOS . DPUNTOS POW LPAR exp COMA exp RPAR

    DPUNTOS         shift and go to state 204


state 116

    (132) exppow -> F64 DPUNTOS . DPUNTOS POWF LPAR exp COMA exp RPAR

    DPUNTOS         shift and go to state 205


state 117

    (47) match -> MATCH exp . match_statement
    (124) exp -> exp . PUNTO exp_native
    (125) expmath -> exp . MAS exp
    (126) expmath -> exp . MENOS exp
    (127) expmath -> exp . MULTIPLICACION exp
    (128) expmath -> exp . DIVISION exp
    (129) expmath -> exp . MODULO exp
    (133) expop -> exp . AND exp
    (134) expop -> exp . OR exp
    (137) exprel -> exp . IGUALI exp
    (138) exprel -> exp . DIF exp
    (139) exprel -> exp . MAYOR exp
    (140) exprel -> exp . MENOR exp
    (141) exprel -> exp . MAYORI exp
    (142) exprel -> exp . MENORI exp
    (136) expcast -> exp . AS tipo_var
    (48) match_statement -> . LLLAV lista_brazos RLLAV
    (49) match_statement -> . LLLAV RLLAV

    PUNTO           shift and go to state 86
    MAS             shift and go to state 87
    MENOS           shift and go to state 88
    MULTIPLICACION  shift and go to state 89
    DIVISION        shift and go to state 90
    MODULO          shift and go to state 91
    AND             shift and go to state 92
    OR              shift and go to state 93
    IGUALI          shift and go to state 94
    DIF             shift and go to state 95
    MAYOR           shift and go to state 96
    MENOR           shift and go to state 97
    MAYORI          shift and go to state 98
    MENORI          shift and go to state 99
    AS              shift and go to state 100
    LLLAV           shift and go to state 207

    match_statement                shift and go to state 206

state 118

    (62) loop -> LOOP statement .

    PUNTO           reduce using rule 62 (loop -> LOOP statement .)
    MAS             reduce using rule 62 (loop -> LOOP statement .)
    MENOS           reduce using rule 62 (loop -> LOOP statement .)
    MULTIPLICACION  reduce using rule 62 (loop -> LOOP statement .)
    DIVISION        reduce using rule 62 (loop -> LOOP statement .)
    MODULO          reduce using rule 62 (loop -> LOOP statement .)
    AND             reduce using rule 62 (loop -> LOOP statement .)
    OR              reduce using rule 62 (loop -> LOOP statement .)
    IGUALI          reduce using rule 62 (loop -> LOOP statement .)
    DIF             reduce using rule 62 (loop -> LOOP statement .)
    MAYOR           reduce using rule 62 (loop -> LOOP statement .)
    MENOR           reduce using rule 62 (loop -> LOOP statement .)
    MAYORI          reduce using rule 62 (loop -> LOOP statement .)
    MENORI          reduce using rule 62 (loop -> LOOP statement .)
    AS              reduce using rule 62 (loop -> LOOP statement .)
    LLLAV           reduce using rule 62 (loop -> LOOP statement .)
    PCOMA           reduce using rule 62 (loop -> LOOP statement .)
    COMA            reduce using rule 62 (loop -> LOOP statement .)
    RCOR            reduce using rule 62 (loop -> LOOP statement .)
    RPAR            reduce using rule 62 (loop -> LOOP statement .)
    RLLAV           reduce using rule 62 (loop -> LOOP statement .)
    ID              reduce using rule 62 (loop -> LOOP statement .)
    PRINT           reduce using rule 62 (loop -> LOOP statement .)
    LET             reduce using rule 62 (loop -> LOOP statement .)
    CONTINUE        reduce using rule 62 (loop -> LOOP statement .)
    BREAK           reduce using rule 62 (loop -> LOOP statement .)
    RETURN          reduce using rule 62 (loop -> LOOP statement .)
    IF              reduce using rule 62 (loop -> LOOP statement .)
    MATCH           reduce using rule 62 (loop -> LOOP statement .)
    LOOP            reduce using rule 62 (loop -> LOOP statement .)
    WHILE           reduce using rule 62 (loop -> LOOP statement .)
    FOR             reduce using rule 62 (loop -> LOOP statement .)
    LPAR            reduce using rule 62 (loop -> LOOP statement .)
    AD              reduce using rule 62 (loop -> LOOP statement .)
    LCOR            reduce using rule 62 (loop -> LOOP statement .)
    VEC             reduce using rule 62 (loop -> LOOP statement .)
    VECTOR          reduce using rule 62 (loop -> LOOP statement .)
    MUT             reduce using rule 62 (loop -> LOOP statement .)
    ANDSINGLE       reduce using rule 62 (loop -> LOOP statement .)
    I64             reduce using rule 62 (loop -> LOOP statement .)
    F64             reduce using rule 62 (loop -> LOOP statement .)
    ENTERO          reduce using rule 62 (loop -> LOOP statement .)
    DECIMAL         reduce using rule 62 (loop -> LOOP statement .)
    CADENA          reduce using rule 62 (loop -> LOOP statement .)
    BOOLEANO        reduce using rule 62 (loop -> LOOP statement .)
    CARACTER        reduce using rule 62 (loop -> LOOP statement .)
    ARROW2          reduce using rule 62 (loop -> LOOP statement .)
    ORSINGLE        reduce using rule 62 (loop -> LOOP statement .)


state 119

    (64) for -> FOR ID . IN foriterative statement

    IN              shift and go to state 208


state 120

    (63) while -> WHILE exp statement .

    LET             reduce using rule 63 (while -> WHILE exp statement .)
    ID              reduce using rule 63 (while -> WHILE exp statement .)
    PRINT           reduce using rule 63 (while -> WHILE exp statement .)
    IF              reduce using rule 63 (while -> WHILE exp statement .)
    WHILE           reduce using rule 63 (while -> WHILE exp statement .)
    $end            reduce using rule 63 (while -> WHILE exp statement .)
    PUNTO           reduce using rule 63 (while -> WHILE exp statement .)
    MAS             reduce using rule 63 (while -> WHILE exp statement .)
    MENOS           reduce using rule 63 (while -> WHILE exp statement .)
    MULTIPLICACION  reduce using rule 63 (while -> WHILE exp statement .)
    DIVISION        reduce using rule 63 (while -> WHILE exp statement .)
    MODULO          reduce using rule 63 (while -> WHILE exp statement .)
    AND             reduce using rule 63 (while -> WHILE exp statement .)
    OR              reduce using rule 63 (while -> WHILE exp statement .)
    IGUALI          reduce using rule 63 (while -> WHILE exp statement .)
    DIF             reduce using rule 63 (while -> WHILE exp statement .)
    MAYOR           reduce using rule 63 (while -> WHILE exp statement .)
    MENOR           reduce using rule 63 (while -> WHILE exp statement .)
    MAYORI          reduce using rule 63 (while -> WHILE exp statement .)
    MENORI          reduce using rule 63 (while -> WHILE exp statement .)
    AS              reduce using rule 63 (while -> WHILE exp statement .)
    LLLAV           reduce using rule 63 (while -> WHILE exp statement .)
    PCOMA           reduce using rule 63 (while -> WHILE exp statement .)
    COMA            reduce using rule 63 (while -> WHILE exp statement .)
    RCOR            reduce using rule 63 (while -> WHILE exp statement .)
    RPAR            reduce using rule 63 (while -> WHILE exp statement .)
    RLLAV           reduce using rule 63 (while -> WHILE exp statement .)
    CONTINUE        reduce using rule 63 (while -> WHILE exp statement .)
    BREAK           reduce using rule 63 (while -> WHILE exp statement .)
    RETURN          reduce using rule 63 (while -> WHILE exp statement .)
    MATCH           reduce using rule 63 (while -> WHILE exp statement .)
    LOOP            reduce using rule 63 (while -> WHILE exp statement .)
    FOR             reduce using rule 63 (while -> WHILE exp statement .)
    LPAR            reduce using rule 63 (while -> WHILE exp statement .)
    AD              reduce using rule 63 (while -> WHILE exp statement .)
    LCOR            reduce using rule 63 (while -> WHILE exp statement .)
    VEC             reduce using rule 63 (while -> WHILE exp statement .)
    VECTOR          reduce using rule 63 (while -> WHILE exp statement .)
    MUT             reduce using rule 63 (while -> WHILE exp statement .)
    ANDSINGLE       reduce using rule 63 (while -> WHILE exp statement .)
    I64             reduce using rule 63 (while -> WHILE exp statement .)
    F64             reduce using rule 63 (while -> WHILE exp statement .)
    ENTERO          reduce using rule 63 (while -> WHILE exp statement .)
    DECIMAL         reduce using rule 63 (while -> WHILE exp statement .)
    CADENA          reduce using rule 63 (while -> WHILE exp statement .)
    BOOLEANO        reduce using rule 63 (while -> WHILE exp statement .)
    CARACTER        reduce using rule 63 (while -> WHILE exp statement .)
    ARROW2          reduce using rule 63 (while -> WHILE exp statement .)
    ORSINGLE        reduce using rule 63 (while -> WHILE exp statement .)


state 121

    (81) declaracion -> LET asignacion_simple IGUAL auxexp .

    PCOMA           reduce using rule 81 (declaracion -> LET asignacion_simple IGUAL auxexp .)


state 122

    (102) asignacion_simple -> MUT ID DPUNTOS . tipo_var
    (104) asignacion_simple -> MUT ID DPUNTOS . ANDSINGLE tipo_var
    (106) asignacion_simple -> MUT ID DPUNTOS . ANDSINGLE MUT tipo_var
    (162) tipo_var -> . I64
    (163) tipo_var -> . F64
    (164) tipo_var -> . STRING
    (165) tipo_var -> . ANDSINGLE aSTR
    (166) tipo_var -> . BOOL
    (167) tipo_var -> . CHAR
    (168) tipo_var -> . USIZE
    (169) tipo_var -> . lista_arr2
    (170) tipo_var -> . LCOR tipo_var RCOR
    (171) tipo_var -> . lista_classtype
    (172) tipo_var -> . VECTOR MENOR tipo_var MAYOR
    (173) tipo_var -> . VECTOR MENOR lista_classtype MAYOR
    (107) lista_arr2 -> . LCOR tipo_var PCOMA exp RCOR
    (174) lista_classtype -> . lista_classtype DPUNTOS DPUNTOS ID
    (175) lista_classtype -> . ID

    ANDSINGLE       shift and go to state 210
    I64             shift and go to state 126
    F64             shift and go to state 127
    STRING          shift and go to state 128
    BOOL            shift and go to state 129
    CHAR            shift and go to state 130
    USIZE           shift and go to state 131
    LCOR            shift and go to state 133
    VECTOR          shift and go to state 135
    ID              shift and go to state 123

    tipo_var                       shift and go to state 209
    lista_arr2                     shift and go to state 132
    lista_classtype                shift and go to state 134

state 123

    (175) lista_classtype -> ID .

    DPUNTOS         reduce using rule 175 (lista_classtype -> ID .)
    IGUAL           reduce using rule 175 (lista_classtype -> ID .)
    PUNTO           reduce using rule 175 (lista_classtype -> ID .)
    MAS             reduce using rule 175 (lista_classtype -> ID .)
    MENOS           reduce using rule 175 (lista_classtype -> ID .)
    MULTIPLICACION  reduce using rule 175 (lista_classtype -> ID .)
    DIVISION        reduce using rule 175 (lista_classtype -> ID .)
    MODULO          reduce using rule 175 (lista_classtype -> ID .)
    AND             reduce using rule 175 (lista_classtype -> ID .)
    OR              reduce using rule 175 (lista_classtype -> ID .)
    IGUALI          reduce using rule 175 (lista_classtype -> ID .)
    DIF             reduce using rule 175 (lista_classtype -> ID .)
    MAYOR           reduce using rule 175 (lista_classtype -> ID .)
    MENOR           reduce using rule 175 (lista_classtype -> ID .)
    MAYORI          reduce using rule 175 (lista_classtype -> ID .)
    MENORI          reduce using rule 175 (lista_classtype -> ID .)
    AS              reduce using rule 175 (lista_classtype -> ID .)
    LLLAV           reduce using rule 175 (lista_classtype -> ID .)
    PCOMA           reduce using rule 175 (lista_classtype -> ID .)
    COMA            reduce using rule 175 (lista_classtype -> ID .)
    RCOR            reduce using rule 175 (lista_classtype -> ID .)
    RPAR            reduce using rule 175 (lista_classtype -> ID .)
    RLLAV           reduce using rule 175 (lista_classtype -> ID .)
    ID              reduce using rule 175 (lista_classtype -> ID .)
    PRINT           reduce using rule 175 (lista_classtype -> ID .)
    LET             reduce using rule 175 (lista_classtype -> ID .)
    CONTINUE        reduce using rule 175 (lista_classtype -> ID .)
    BREAK           reduce using rule 175 (lista_classtype -> ID .)
    RETURN          reduce using rule 175 (lista_classtype -> ID .)
    IF              reduce using rule 175 (lista_classtype -> ID .)
    MATCH           reduce using rule 175 (lista_classtype -> ID .)
    LOOP            reduce using rule 175 (lista_classtype -> ID .)
    WHILE           reduce using rule 175 (lista_classtype -> ID .)
    FOR             reduce using rule 175 (lista_classtype -> ID .)
    LPAR            reduce using rule 175 (lista_classtype -> ID .)
    AD              reduce using rule 175 (lista_classtype -> ID .)
    LCOR            reduce using rule 175 (lista_classtype -> ID .)
    VEC             reduce using rule 175 (lista_classtype -> ID .)
    VECTOR          reduce using rule 175 (lista_classtype -> ID .)
    MUT             reduce using rule 175 (lista_classtype -> ID .)
    ANDSINGLE       reduce using rule 175 (lista_classtype -> ID .)
    I64             reduce using rule 175 (lista_classtype -> ID .)
    F64             reduce using rule 175 (lista_classtype -> ID .)
    ENTERO          reduce using rule 175 (lista_classtype -> ID .)
    DECIMAL         reduce using rule 175 (lista_classtype -> ID .)
    CADENA          reduce using rule 175 (lista_classtype -> ID .)
    BOOLEANO        reduce using rule 175 (lista_classtype -> ID .)
    CARACTER        reduce using rule 175 (lista_classtype -> ID .)
    ARROW2          reduce using rule 175 (lista_classtype -> ID .)
    ORSINGLE        reduce using rule 175 (lista_classtype -> ID .)


state 124

    (101) asignacion_simple -> ID DPUNTOS tipo_var .

    IGUAL           reduce using rule 101 (asignacion_simple -> ID DPUNTOS tipo_var .)


state 125

    (103) asignacion_simple -> ID DPUNTOS ANDSINGLE . tipo_var
    (105) asignacion_simple -> ID DPUNTOS ANDSINGLE . MUT tipo_var
    (165) tipo_var -> ANDSINGLE . aSTR
    (162) tipo_var -> . I64
    (163) tipo_var -> . F64
    (164) tipo_var -> . STRING
    (165) tipo_var -> . ANDSINGLE aSTR
    (166) tipo_var -> . BOOL
    (167) tipo_var -> . CHAR
    (168) tipo_var -> . USIZE
    (169) tipo_var -> . lista_arr2
    (170) tipo_var -> . LCOR tipo_var RCOR
    (171) tipo_var -> . lista_classtype
    (172) tipo_var -> . VECTOR MENOR tipo_var MAYOR
    (173) tipo_var -> . VECTOR MENOR lista_classtype MAYOR
    (107) lista_arr2 -> . LCOR tipo_var PCOMA exp RCOR
    (174) lista_classtype -> . lista_classtype DPUNTOS DPUNTOS ID
    (175) lista_classtype -> . ID

    MUT             shift and go to state 212
    aSTR            shift and go to state 213
    I64             shift and go to state 126
    F64             shift and go to state 127
    STRING          shift and go to state 128
    ANDSINGLE       shift and go to state 176
    BOOL            shift and go to state 129
    CHAR            shift and go to state 130
    USIZE           shift and go to state 131
    LCOR            shift and go to state 133
    VECTOR          shift and go to state 135
    ID              shift and go to state 123

    tipo_var                       shift and go to state 211
    lista_arr2                     shift and go to state 132
    lista_classtype                shift and go to state 134

state 126

    (162) tipo_var -> I64 .

    IGUAL           reduce using rule 162 (tipo_var -> I64 .)
    PUNTO           reduce using rule 162 (tipo_var -> I64 .)
    MAS             reduce using rule 162 (tipo_var -> I64 .)
    MENOS           reduce using rule 162 (tipo_var -> I64 .)
    MULTIPLICACION  reduce using rule 162 (tipo_var -> I64 .)
    DIVISION        reduce using rule 162 (tipo_var -> I64 .)
    MODULO          reduce using rule 162 (tipo_var -> I64 .)
    AND             reduce using rule 162 (tipo_var -> I64 .)
    OR              reduce using rule 162 (tipo_var -> I64 .)
    IGUALI          reduce using rule 162 (tipo_var -> I64 .)
    DIF             reduce using rule 162 (tipo_var -> I64 .)
    MAYOR           reduce using rule 162 (tipo_var -> I64 .)
    MENOR           reduce using rule 162 (tipo_var -> I64 .)
    MAYORI          reduce using rule 162 (tipo_var -> I64 .)
    MENORI          reduce using rule 162 (tipo_var -> I64 .)
    AS              reduce using rule 162 (tipo_var -> I64 .)
    LLLAV           reduce using rule 162 (tipo_var -> I64 .)
    PCOMA           reduce using rule 162 (tipo_var -> I64 .)
    COMA            reduce using rule 162 (tipo_var -> I64 .)
    RCOR            reduce using rule 162 (tipo_var -> I64 .)
    RPAR            reduce using rule 162 (tipo_var -> I64 .)
    RLLAV           reduce using rule 162 (tipo_var -> I64 .)
    ID              reduce using rule 162 (tipo_var -> I64 .)
    PRINT           reduce using rule 162 (tipo_var -> I64 .)
    LET             reduce using rule 162 (tipo_var -> I64 .)
    CONTINUE        reduce using rule 162 (tipo_var -> I64 .)
    BREAK           reduce using rule 162 (tipo_var -> I64 .)
    RETURN          reduce using rule 162 (tipo_var -> I64 .)
    IF              reduce using rule 162 (tipo_var -> I64 .)
    MATCH           reduce using rule 162 (tipo_var -> I64 .)
    LOOP            reduce using rule 162 (tipo_var -> I64 .)
    WHILE           reduce using rule 162 (tipo_var -> I64 .)
    FOR             reduce using rule 162 (tipo_var -> I64 .)
    LPAR            reduce using rule 162 (tipo_var -> I64 .)
    AD              reduce using rule 162 (tipo_var -> I64 .)
    LCOR            reduce using rule 162 (tipo_var -> I64 .)
    VEC             reduce using rule 162 (tipo_var -> I64 .)
    VECTOR          reduce using rule 162 (tipo_var -> I64 .)
    MUT             reduce using rule 162 (tipo_var -> I64 .)
    ANDSINGLE       reduce using rule 162 (tipo_var -> I64 .)
    I64             reduce using rule 162 (tipo_var -> I64 .)
    F64             reduce using rule 162 (tipo_var -> I64 .)
    ENTERO          reduce using rule 162 (tipo_var -> I64 .)
    DECIMAL         reduce using rule 162 (tipo_var -> I64 .)
    CADENA          reduce using rule 162 (tipo_var -> I64 .)
    BOOLEANO        reduce using rule 162 (tipo_var -> I64 .)
    CARACTER        reduce using rule 162 (tipo_var -> I64 .)
    ARROW2          reduce using rule 162 (tipo_var -> I64 .)
    ORSINGLE        reduce using rule 162 (tipo_var -> I64 .)


state 127

    (163) tipo_var -> F64 .

    IGUAL           reduce using rule 163 (tipo_var -> F64 .)
    PUNTO           reduce using rule 163 (tipo_var -> F64 .)
    MAS             reduce using rule 163 (tipo_var -> F64 .)
    MENOS           reduce using rule 163 (tipo_var -> F64 .)
    MULTIPLICACION  reduce using rule 163 (tipo_var -> F64 .)
    DIVISION        reduce using rule 163 (tipo_var -> F64 .)
    MODULO          reduce using rule 163 (tipo_var -> F64 .)
    AND             reduce using rule 163 (tipo_var -> F64 .)
    OR              reduce using rule 163 (tipo_var -> F64 .)
    IGUALI          reduce using rule 163 (tipo_var -> F64 .)
    DIF             reduce using rule 163 (tipo_var -> F64 .)
    MAYOR           reduce using rule 163 (tipo_var -> F64 .)
    MENOR           reduce using rule 163 (tipo_var -> F64 .)
    MAYORI          reduce using rule 163 (tipo_var -> F64 .)
    MENORI          reduce using rule 163 (tipo_var -> F64 .)
    AS              reduce using rule 163 (tipo_var -> F64 .)
    LLLAV           reduce using rule 163 (tipo_var -> F64 .)
    PCOMA           reduce using rule 163 (tipo_var -> F64 .)
    COMA            reduce using rule 163 (tipo_var -> F64 .)
    RCOR            reduce using rule 163 (tipo_var -> F64 .)
    RPAR            reduce using rule 163 (tipo_var -> F64 .)
    RLLAV           reduce using rule 163 (tipo_var -> F64 .)
    ID              reduce using rule 163 (tipo_var -> F64 .)
    PRINT           reduce using rule 163 (tipo_var -> F64 .)
    LET             reduce using rule 163 (tipo_var -> F64 .)
    CONTINUE        reduce using rule 163 (tipo_var -> F64 .)
    BREAK           reduce using rule 163 (tipo_var -> F64 .)
    RETURN          reduce using rule 163 (tipo_var -> F64 .)
    IF              reduce using rule 163 (tipo_var -> F64 .)
    MATCH           reduce using rule 163 (tipo_var -> F64 .)
    LOOP            reduce using rule 163 (tipo_var -> F64 .)
    WHILE           reduce using rule 163 (tipo_var -> F64 .)
    FOR             reduce using rule 163 (tipo_var -> F64 .)
    LPAR            reduce using rule 163 (tipo_var -> F64 .)
    AD              reduce using rule 163 (tipo_var -> F64 .)
    LCOR            reduce using rule 163 (tipo_var -> F64 .)
    VEC             reduce using rule 163 (tipo_var -> F64 .)
    VECTOR          reduce using rule 163 (tipo_var -> F64 .)
    MUT             reduce using rule 163 (tipo_var -> F64 .)
    ANDSINGLE       reduce using rule 163 (tipo_var -> F64 .)
    I64             reduce using rule 163 (tipo_var -> F64 .)
    F64             reduce using rule 163 (tipo_var -> F64 .)
    ENTERO          reduce using rule 163 (tipo_var -> F64 .)
    DECIMAL         reduce using rule 163 (tipo_var -> F64 .)
    CADENA          reduce using rule 163 (tipo_var -> F64 .)
    BOOLEANO        reduce using rule 163 (tipo_var -> F64 .)
    CARACTER        reduce using rule 163 (tipo_var -> F64 .)
    ARROW2          reduce using rule 163 (tipo_var -> F64 .)
    ORSINGLE        reduce using rule 163 (tipo_var -> F64 .)


state 128

    (164) tipo_var -> STRING .

    IGUAL           reduce using rule 164 (tipo_var -> STRING .)
    PUNTO           reduce using rule 164 (tipo_var -> STRING .)
    MAS             reduce using rule 164 (tipo_var -> STRING .)
    MENOS           reduce using rule 164 (tipo_var -> STRING .)
    MULTIPLICACION  reduce using rule 164 (tipo_var -> STRING .)
    DIVISION        reduce using rule 164 (tipo_var -> STRING .)
    MODULO          reduce using rule 164 (tipo_var -> STRING .)
    AND             reduce using rule 164 (tipo_var -> STRING .)
    OR              reduce using rule 164 (tipo_var -> STRING .)
    IGUALI          reduce using rule 164 (tipo_var -> STRING .)
    DIF             reduce using rule 164 (tipo_var -> STRING .)
    MAYOR           reduce using rule 164 (tipo_var -> STRING .)
    MENOR           reduce using rule 164 (tipo_var -> STRING .)
    MAYORI          reduce using rule 164 (tipo_var -> STRING .)
    MENORI          reduce using rule 164 (tipo_var -> STRING .)
    AS              reduce using rule 164 (tipo_var -> STRING .)
    LLLAV           reduce using rule 164 (tipo_var -> STRING .)
    PCOMA           reduce using rule 164 (tipo_var -> STRING .)
    COMA            reduce using rule 164 (tipo_var -> STRING .)
    RCOR            reduce using rule 164 (tipo_var -> STRING .)
    RPAR            reduce using rule 164 (tipo_var -> STRING .)
    RLLAV           reduce using rule 164 (tipo_var -> STRING .)
    ID              reduce using rule 164 (tipo_var -> STRING .)
    PRINT           reduce using rule 164 (tipo_var -> STRING .)
    LET             reduce using rule 164 (tipo_var -> STRING .)
    CONTINUE        reduce using rule 164 (tipo_var -> STRING .)
    BREAK           reduce using rule 164 (tipo_var -> STRING .)
    RETURN          reduce using rule 164 (tipo_var -> STRING .)
    IF              reduce using rule 164 (tipo_var -> STRING .)
    MATCH           reduce using rule 164 (tipo_var -> STRING .)
    LOOP            reduce using rule 164 (tipo_var -> STRING .)
    WHILE           reduce using rule 164 (tipo_var -> STRING .)
    FOR             reduce using rule 164 (tipo_var -> STRING .)
    LPAR            reduce using rule 164 (tipo_var -> STRING .)
    AD              reduce using rule 164 (tipo_var -> STRING .)
    LCOR            reduce using rule 164 (tipo_var -> STRING .)
    VEC             reduce using rule 164 (tipo_var -> STRING .)
    VECTOR          reduce using rule 164 (tipo_var -> STRING .)
    MUT             reduce using rule 164 (tipo_var -> STRING .)
    ANDSINGLE       reduce using rule 164 (tipo_var -> STRING .)
    I64             reduce using rule 164 (tipo_var -> STRING .)
    F64             reduce using rule 164 (tipo_var -> STRING .)
    ENTERO          reduce using rule 164 (tipo_var -> STRING .)
    DECIMAL         reduce using rule 164 (tipo_var -> STRING .)
    CADENA          reduce using rule 164 (tipo_var -> STRING .)
    BOOLEANO        reduce using rule 164 (tipo_var -> STRING .)
    CARACTER        reduce using rule 164 (tipo_var -> STRING .)
    ARROW2          reduce using rule 164 (tipo_var -> STRING .)
    ORSINGLE        reduce using rule 164 (tipo_var -> STRING .)


state 129

    (166) tipo_var -> BOOL .

    IGUAL           reduce using rule 166 (tipo_var -> BOOL .)
    PUNTO           reduce using rule 166 (tipo_var -> BOOL .)
    MAS             reduce using rule 166 (tipo_var -> BOOL .)
    MENOS           reduce using rule 166 (tipo_var -> BOOL .)
    MULTIPLICACION  reduce using rule 166 (tipo_var -> BOOL .)
    DIVISION        reduce using rule 166 (tipo_var -> BOOL .)
    MODULO          reduce using rule 166 (tipo_var -> BOOL .)
    AND             reduce using rule 166 (tipo_var -> BOOL .)
    OR              reduce using rule 166 (tipo_var -> BOOL .)
    IGUALI          reduce using rule 166 (tipo_var -> BOOL .)
    DIF             reduce using rule 166 (tipo_var -> BOOL .)
    MAYOR           reduce using rule 166 (tipo_var -> BOOL .)
    MENOR           reduce using rule 166 (tipo_var -> BOOL .)
    MAYORI          reduce using rule 166 (tipo_var -> BOOL .)
    MENORI          reduce using rule 166 (tipo_var -> BOOL .)
    AS              reduce using rule 166 (tipo_var -> BOOL .)
    LLLAV           reduce using rule 166 (tipo_var -> BOOL .)
    PCOMA           reduce using rule 166 (tipo_var -> BOOL .)
    COMA            reduce using rule 166 (tipo_var -> BOOL .)
    RCOR            reduce using rule 166 (tipo_var -> BOOL .)
    RPAR            reduce using rule 166 (tipo_var -> BOOL .)
    RLLAV           reduce using rule 166 (tipo_var -> BOOL .)
    ID              reduce using rule 166 (tipo_var -> BOOL .)
    PRINT           reduce using rule 166 (tipo_var -> BOOL .)
    LET             reduce using rule 166 (tipo_var -> BOOL .)
    CONTINUE        reduce using rule 166 (tipo_var -> BOOL .)
    BREAK           reduce using rule 166 (tipo_var -> BOOL .)
    RETURN          reduce using rule 166 (tipo_var -> BOOL .)
    IF              reduce using rule 166 (tipo_var -> BOOL .)
    MATCH           reduce using rule 166 (tipo_var -> BOOL .)
    LOOP            reduce using rule 166 (tipo_var -> BOOL .)
    WHILE           reduce using rule 166 (tipo_var -> BOOL .)
    FOR             reduce using rule 166 (tipo_var -> BOOL .)
    LPAR            reduce using rule 166 (tipo_var -> BOOL .)
    AD              reduce using rule 166 (tipo_var -> BOOL .)
    LCOR            reduce using rule 166 (tipo_var -> BOOL .)
    VEC             reduce using rule 166 (tipo_var -> BOOL .)
    VECTOR          reduce using rule 166 (tipo_var -> BOOL .)
    MUT             reduce using rule 166 (tipo_var -> BOOL .)
    ANDSINGLE       reduce using rule 166 (tipo_var -> BOOL .)
    I64             reduce using rule 166 (tipo_var -> BOOL .)
    F64             reduce using rule 166 (tipo_var -> BOOL .)
    ENTERO          reduce using rule 166 (tipo_var -> BOOL .)
    DECIMAL         reduce using rule 166 (tipo_var -> BOOL .)
    CADENA          reduce using rule 166 (tipo_var -> BOOL .)
    BOOLEANO        reduce using rule 166 (tipo_var -> BOOL .)
    CARACTER        reduce using rule 166 (tipo_var -> BOOL .)
    ARROW2          reduce using rule 166 (tipo_var -> BOOL .)
    ORSINGLE        reduce using rule 166 (tipo_var -> BOOL .)


state 130

    (167) tipo_var -> CHAR .

    IGUAL           reduce using rule 167 (tipo_var -> CHAR .)
    PUNTO           reduce using rule 167 (tipo_var -> CHAR .)
    MAS             reduce using rule 167 (tipo_var -> CHAR .)
    MENOS           reduce using rule 167 (tipo_var -> CHAR .)
    MULTIPLICACION  reduce using rule 167 (tipo_var -> CHAR .)
    DIVISION        reduce using rule 167 (tipo_var -> CHAR .)
    MODULO          reduce using rule 167 (tipo_var -> CHAR .)
    AND             reduce using rule 167 (tipo_var -> CHAR .)
    OR              reduce using rule 167 (tipo_var -> CHAR .)
    IGUALI          reduce using rule 167 (tipo_var -> CHAR .)
    DIF             reduce using rule 167 (tipo_var -> CHAR .)
    MAYOR           reduce using rule 167 (tipo_var -> CHAR .)
    MENOR           reduce using rule 167 (tipo_var -> CHAR .)
    MAYORI          reduce using rule 167 (tipo_var -> CHAR .)
    MENORI          reduce using rule 167 (tipo_var -> CHAR .)
    AS              reduce using rule 167 (tipo_var -> CHAR .)
    LLLAV           reduce using rule 167 (tipo_var -> CHAR .)
    PCOMA           reduce using rule 167 (tipo_var -> CHAR .)
    COMA            reduce using rule 167 (tipo_var -> CHAR .)
    RCOR            reduce using rule 167 (tipo_var -> CHAR .)
    RPAR            reduce using rule 167 (tipo_var -> CHAR .)
    RLLAV           reduce using rule 167 (tipo_var -> CHAR .)
    ID              reduce using rule 167 (tipo_var -> CHAR .)
    PRINT           reduce using rule 167 (tipo_var -> CHAR .)
    LET             reduce using rule 167 (tipo_var -> CHAR .)
    CONTINUE        reduce using rule 167 (tipo_var -> CHAR .)
    BREAK           reduce using rule 167 (tipo_var -> CHAR .)
    RETURN          reduce using rule 167 (tipo_var -> CHAR .)
    IF              reduce using rule 167 (tipo_var -> CHAR .)
    MATCH           reduce using rule 167 (tipo_var -> CHAR .)
    LOOP            reduce using rule 167 (tipo_var -> CHAR .)
    WHILE           reduce using rule 167 (tipo_var -> CHAR .)
    FOR             reduce using rule 167 (tipo_var -> CHAR .)
    LPAR            reduce using rule 167 (tipo_var -> CHAR .)
    AD              reduce using rule 167 (tipo_var -> CHAR .)
    LCOR            reduce using rule 167 (tipo_var -> CHAR .)
    VEC             reduce using rule 167 (tipo_var -> CHAR .)
    VECTOR          reduce using rule 167 (tipo_var -> CHAR .)
    MUT             reduce using rule 167 (tipo_var -> CHAR .)
    ANDSINGLE       reduce using rule 167 (tipo_var -> CHAR .)
    I64             reduce using rule 167 (tipo_var -> CHAR .)
    F64             reduce using rule 167 (tipo_var -> CHAR .)
    ENTERO          reduce using rule 167 (tipo_var -> CHAR .)
    DECIMAL         reduce using rule 167 (tipo_var -> CHAR .)
    CADENA          reduce using rule 167 (tipo_var -> CHAR .)
    BOOLEANO        reduce using rule 167 (tipo_var -> CHAR .)
    CARACTER        reduce using rule 167 (tipo_var -> CHAR .)
    ARROW2          reduce using rule 167 (tipo_var -> CHAR .)
    ORSINGLE        reduce using rule 167 (tipo_var -> CHAR .)


state 131

    (168) tipo_var -> USIZE .

    IGUAL           reduce using rule 168 (tipo_var -> USIZE .)
    PUNTO           reduce using rule 168 (tipo_var -> USIZE .)
    MAS             reduce using rule 168 (tipo_var -> USIZE .)
    MENOS           reduce using rule 168 (tipo_var -> USIZE .)
    MULTIPLICACION  reduce using rule 168 (tipo_var -> USIZE .)
    DIVISION        reduce using rule 168 (tipo_var -> USIZE .)
    MODULO          reduce using rule 168 (tipo_var -> USIZE .)
    AND             reduce using rule 168 (tipo_var -> USIZE .)
    OR              reduce using rule 168 (tipo_var -> USIZE .)
    IGUALI          reduce using rule 168 (tipo_var -> USIZE .)
    DIF             reduce using rule 168 (tipo_var -> USIZE .)
    MAYOR           reduce using rule 168 (tipo_var -> USIZE .)
    MENOR           reduce using rule 168 (tipo_var -> USIZE .)
    MAYORI          reduce using rule 168 (tipo_var -> USIZE .)
    MENORI          reduce using rule 168 (tipo_var -> USIZE .)
    AS              reduce using rule 168 (tipo_var -> USIZE .)
    LLLAV           reduce using rule 168 (tipo_var -> USIZE .)
    PCOMA           reduce using rule 168 (tipo_var -> USIZE .)
    COMA            reduce using rule 168 (tipo_var -> USIZE .)
    RCOR            reduce using rule 168 (tipo_var -> USIZE .)
    RPAR            reduce using rule 168 (tipo_var -> USIZE .)
    RLLAV           reduce using rule 168 (tipo_var -> USIZE .)
    ID              reduce using rule 168 (tipo_var -> USIZE .)
    PRINT           reduce using rule 168 (tipo_var -> USIZE .)
    LET             reduce using rule 168 (tipo_var -> USIZE .)
    CONTINUE        reduce using rule 168 (tipo_var -> USIZE .)
    BREAK           reduce using rule 168 (tipo_var -> USIZE .)
    RETURN          reduce using rule 168 (tipo_var -> USIZE .)
    IF              reduce using rule 168 (tipo_var -> USIZE .)
    MATCH           reduce using rule 168 (tipo_var -> USIZE .)
    LOOP            reduce using rule 168 (tipo_var -> USIZE .)
    WHILE           reduce using rule 168 (tipo_var -> USIZE .)
    FOR             reduce using rule 168 (tipo_var -> USIZE .)
    LPAR            reduce using rule 168 (tipo_var -> USIZE .)
    AD              reduce using rule 168 (tipo_var -> USIZE .)
    LCOR            reduce using rule 168 (tipo_var -> USIZE .)
    VEC             reduce using rule 168 (tipo_var -> USIZE .)
    VECTOR          reduce using rule 168 (tipo_var -> USIZE .)
    MUT             reduce using rule 168 (tipo_var -> USIZE .)
    ANDSINGLE       reduce using rule 168 (tipo_var -> USIZE .)
    I64             reduce using rule 168 (tipo_var -> USIZE .)
    F64             reduce using rule 168 (tipo_var -> USIZE .)
    ENTERO          reduce using rule 168 (tipo_var -> USIZE .)
    DECIMAL         reduce using rule 168 (tipo_var -> USIZE .)
    CADENA          reduce using rule 168 (tipo_var -> USIZE .)
    BOOLEANO        reduce using rule 168 (tipo_var -> USIZE .)
    CARACTER        reduce using rule 168 (tipo_var -> USIZE .)
    ARROW2          reduce using rule 168 (tipo_var -> USIZE .)
    ORSINGLE        reduce using rule 168 (tipo_var -> USIZE .)


state 132

    (169) tipo_var -> lista_arr2 .

    IGUAL           reduce using rule 169 (tipo_var -> lista_arr2 .)
    PUNTO           reduce using rule 169 (tipo_var -> lista_arr2 .)
    MAS             reduce using rule 169 (tipo_var -> lista_arr2 .)
    MENOS           reduce using rule 169 (tipo_var -> lista_arr2 .)
    MULTIPLICACION  reduce using rule 169 (tipo_var -> lista_arr2 .)
    DIVISION        reduce using rule 169 (tipo_var -> lista_arr2 .)
    MODULO          reduce using rule 169 (tipo_var -> lista_arr2 .)
    AND             reduce using rule 169 (tipo_var -> lista_arr2 .)
    OR              reduce using rule 169 (tipo_var -> lista_arr2 .)
    IGUALI          reduce using rule 169 (tipo_var -> lista_arr2 .)
    DIF             reduce using rule 169 (tipo_var -> lista_arr2 .)
    MAYOR           reduce using rule 169 (tipo_var -> lista_arr2 .)
    MENOR           reduce using rule 169 (tipo_var -> lista_arr2 .)
    MAYORI          reduce using rule 169 (tipo_var -> lista_arr2 .)
    MENORI          reduce using rule 169 (tipo_var -> lista_arr2 .)
    AS              reduce using rule 169 (tipo_var -> lista_arr2 .)
    LLLAV           reduce using rule 169 (tipo_var -> lista_arr2 .)
    PCOMA           reduce using rule 169 (tipo_var -> lista_arr2 .)
    COMA            reduce using rule 169 (tipo_var -> lista_arr2 .)
    RCOR            reduce using rule 169 (tipo_var -> lista_arr2 .)
    RPAR            reduce using rule 169 (tipo_var -> lista_arr2 .)
    RLLAV           reduce using rule 169 (tipo_var -> lista_arr2 .)
    ID              reduce using rule 169 (tipo_var -> lista_arr2 .)
    PRINT           reduce using rule 169 (tipo_var -> lista_arr2 .)
    LET             reduce using rule 169 (tipo_var -> lista_arr2 .)
    CONTINUE        reduce using rule 169 (tipo_var -> lista_arr2 .)
    BREAK           reduce using rule 169 (tipo_var -> lista_arr2 .)
    RETURN          reduce using rule 169 (tipo_var -> lista_arr2 .)
    IF              reduce using rule 169 (tipo_var -> lista_arr2 .)
    MATCH           reduce using rule 169 (tipo_var -> lista_arr2 .)
    LOOP            reduce using rule 169 (tipo_var -> lista_arr2 .)
    WHILE           reduce using rule 169 (tipo_var -> lista_arr2 .)
    FOR             reduce using rule 169 (tipo_var -> lista_arr2 .)
    LPAR            reduce using rule 169 (tipo_var -> lista_arr2 .)
    AD              reduce using rule 169 (tipo_var -> lista_arr2 .)
    LCOR            reduce using rule 169 (tipo_var -> lista_arr2 .)
    VEC             reduce using rule 169 (tipo_var -> lista_arr2 .)
    VECTOR          reduce using rule 169 (tipo_var -> lista_arr2 .)
    MUT             reduce using rule 169 (tipo_var -> lista_arr2 .)
    ANDSINGLE       reduce using rule 169 (tipo_var -> lista_arr2 .)
    I64             reduce using rule 169 (tipo_var -> lista_arr2 .)
    F64             reduce using rule 169 (tipo_var -> lista_arr2 .)
    ENTERO          reduce using rule 169 (tipo_var -> lista_arr2 .)
    DECIMAL         reduce using rule 169 (tipo_var -> lista_arr2 .)
    CADENA          reduce using rule 169 (tipo_var -> lista_arr2 .)
    BOOLEANO        reduce using rule 169 (tipo_var -> lista_arr2 .)
    CARACTER        reduce using rule 169 (tipo_var -> lista_arr2 .)
    ARROW2          reduce using rule 169 (tipo_var -> lista_arr2 .)
    ORSINGLE        reduce using rule 169 (tipo_var -> lista_arr2 .)


state 133

    (170) tipo_var -> LCOR . tipo_var RCOR
    (107) lista_arr2 -> LCOR . tipo_var PCOMA exp RCOR
    (162) tipo_var -> . I64
    (163) tipo_var -> . F64
    (164) tipo_var -> . STRING
    (165) tipo_var -> . ANDSINGLE aSTR
    (166) tipo_var -> . BOOL
    (167) tipo_var -> . CHAR
    (168) tipo_var -> . USIZE
    (169) tipo_var -> . lista_arr2
    (170) tipo_var -> . LCOR tipo_var RCOR
    (171) tipo_var -> . lista_classtype
    (172) tipo_var -> . VECTOR MENOR tipo_var MAYOR
    (173) tipo_var -> . VECTOR MENOR lista_classtype MAYOR
    (107) lista_arr2 -> . LCOR tipo_var PCOMA exp RCOR
    (174) lista_classtype -> . lista_classtype DPUNTOS DPUNTOS ID
    (175) lista_classtype -> . ID

    I64             shift and go to state 126
    F64             shift and go to state 127
    STRING          shift and go to state 128
    ANDSINGLE       shift and go to state 176
    BOOL            shift and go to state 129
    CHAR            shift and go to state 130
    USIZE           shift and go to state 131
    LCOR            shift and go to state 133
    VECTOR          shift and go to state 135
    ID              shift and go to state 123

    tipo_var                       shift and go to state 214
    lista_arr2                     shift and go to state 132
    lista_classtype                shift and go to state 134

state 134

    (171) tipo_var -> lista_classtype .
    (174) lista_classtype -> lista_classtype . DPUNTOS DPUNTOS ID

    IGUAL           reduce using rule 171 (tipo_var -> lista_classtype .)
    PUNTO           reduce using rule 171 (tipo_var -> lista_classtype .)
    MAS             reduce using rule 171 (tipo_var -> lista_classtype .)
    MENOS           reduce using rule 171 (tipo_var -> lista_classtype .)
    MULTIPLICACION  reduce using rule 171 (tipo_var -> lista_classtype .)
    DIVISION        reduce using rule 171 (tipo_var -> lista_classtype .)
    MODULO          reduce using rule 171 (tipo_var -> lista_classtype .)
    AND             reduce using rule 171 (tipo_var -> lista_classtype .)
    OR              reduce using rule 171 (tipo_var -> lista_classtype .)
    IGUALI          reduce using rule 171 (tipo_var -> lista_classtype .)
    DIF             reduce using rule 171 (tipo_var -> lista_classtype .)
    MAYOR           reduce using rule 171 (tipo_var -> lista_classtype .)
    MENOR           reduce using rule 171 (tipo_var -> lista_classtype .)
    MAYORI          reduce using rule 171 (tipo_var -> lista_classtype .)
    MENORI          reduce using rule 171 (tipo_var -> lista_classtype .)
    AS              reduce using rule 171 (tipo_var -> lista_classtype .)
    LLLAV           reduce using rule 171 (tipo_var -> lista_classtype .)
    PCOMA           reduce using rule 171 (tipo_var -> lista_classtype .)
    COMA            reduce using rule 171 (tipo_var -> lista_classtype .)
    RCOR            reduce using rule 171 (tipo_var -> lista_classtype .)
    RPAR            reduce using rule 171 (tipo_var -> lista_classtype .)
    RLLAV           reduce using rule 171 (tipo_var -> lista_classtype .)
    ID              reduce using rule 171 (tipo_var -> lista_classtype .)
    PRINT           reduce using rule 171 (tipo_var -> lista_classtype .)
    LET             reduce using rule 171 (tipo_var -> lista_classtype .)
    CONTINUE        reduce using rule 171 (tipo_var -> lista_classtype .)
    BREAK           reduce using rule 171 (tipo_var -> lista_classtype .)
    RETURN          reduce using rule 171 (tipo_var -> lista_classtype .)
    IF              reduce using rule 171 (tipo_var -> lista_classtype .)
    MATCH           reduce using rule 171 (tipo_var -> lista_classtype .)
    LOOP            reduce using rule 171 (tipo_var -> lista_classtype .)
    WHILE           reduce using rule 171 (tipo_var -> lista_classtype .)
    FOR             reduce using rule 171 (tipo_var -> lista_classtype .)
    LPAR            reduce using rule 171 (tipo_var -> lista_classtype .)
    AD              reduce using rule 171 (tipo_var -> lista_classtype .)
    LCOR            reduce using rule 171 (tipo_var -> lista_classtype .)
    VEC             reduce using rule 171 (tipo_var -> lista_classtype .)
    VECTOR          reduce using rule 171 (tipo_var -> lista_classtype .)
    MUT             reduce using rule 171 (tipo_var -> lista_classtype .)
    ANDSINGLE       reduce using rule 171 (tipo_var -> lista_classtype .)
    I64             reduce using rule 171 (tipo_var -> lista_classtype .)
    F64             reduce using rule 171 (tipo_var -> lista_classtype .)
    ENTERO          reduce using rule 171 (tipo_var -> lista_classtype .)
    DECIMAL         reduce using rule 171 (tipo_var -> lista_classtype .)
    CADENA          reduce using rule 171 (tipo_var -> lista_classtype .)
    BOOLEANO        reduce using rule 171 (tipo_var -> lista_classtype .)
    CARACTER        reduce using rule 171 (tipo_var -> lista_classtype .)
    ARROW2          reduce using rule 171 (tipo_var -> lista_classtype .)
    ORSINGLE        reduce using rule 171 (tipo_var -> lista_classtype .)
    DPUNTOS         shift and go to state 215


state 135

    (172) tipo_var -> VECTOR . MENOR tipo_var MAYOR
    (173) tipo_var -> VECTOR . MENOR lista_classtype MAYOR

    MENOR           shift and go to state 216


state 136

    (143) expstruct -> lista_classtype LLLAV . lista_att RLLAV
    (144) expstruct -> lista_classtype LLLAV . RLLAV
    (146) lista_att -> . lista_att COMA ID DPUNTOS auxexp
    (147) lista_att -> . ID DPUNTOS auxexp

    RLLAV           shift and go to state 218
    ID              shift and go to state 219

    lista_att                      shift and go to state 217

state 137

    (145) expstruct -> lista_classtype DPUNTOS . DPUNTOS llamada
    (174) lista_classtype -> lista_classtype DPUNTOS . DPUNTOS ID

    DPUNTOS         shift and go to state 220


state 138

    (85) asignacion -> ID lista_assign2 IGUAL auxexp .

    PCOMA           reduce using rule 85 (asignacion -> ID lista_assign2 IGUAL auxexp .)
    COMA            reduce using rule 85 (asignacion -> ID lista_assign2 IGUAL auxexp .)


state 139

    (88) lista_assign2 -> lista_assign2 PUNTO ID .

    IGUAL           reduce using rule 88 (lista_assign2 -> lista_assign2 PUNTO ID .)
    PUNTO           reduce using rule 88 (lista_assign2 -> lista_assign2 PUNTO ID .)


state 140

    (86) asignacion -> ID lista_arr IGUAL auxexp .

    PCOMA           reduce using rule 86 (asignacion -> ID lista_arr IGUAL auxexp .)
    COMA            reduce using rule 86 (asignacion -> ID lista_arr IGUAL auxexp .)


state 141

    (87) asignacion -> ID lista_arr lista_assign2 IGUAL . auxexp
    (108) auxexp -> . expstruct
    (109) auxexp -> . exp
    (143) expstruct -> . lista_classtype LLLAV lista_att RLLAV
    (144) expstruct -> . lista_classtype LLLAV RLLAV
    (145) expstruct -> . lista_classtype DPUNTOS DPUNTOS llamada
    (110) exp -> . LPAR exp RPAR
    (111) exp -> . expmath
    (112) exp -> . expop
    (113) exp -> . exprel
    (114) exp -> . exparr
    (115) exp -> . newarray
    (116) exp -> . expvec
    (117) exp -> . exparam
    (118) exp -> . exppow
    (119) exp -> . expcast
    (120) exp -> . lista_acc
    (121) exp -> . llamada
    (122) exp -> . sentencia
    (123) exp -> . valores
    (124) exp -> . exp PUNTO exp_native
    (174) lista_classtype -> . lista_classtype DPUNTOS DPUNTOS ID
    (175) lista_classtype -> . ID
    (125) expmath -> . exp MAS exp
    (126) expmath -> . exp MENOS exp
    (127) expmath -> . exp MULTIPLICACION exp
    (128) expmath -> . exp DIVISION exp
    (129) expmath -> . exp MODULO exp
    (130) expmath -> . MENOS exp
    (133) expop -> . exp AND exp
    (134) expop -> . exp OR exp
    (135) expop -> . AD exp
    (137) exprel -> . exp IGUALI exp
    (138) exprel -> . exp DIF exp
    (139) exprel -> . exp MAYOR exp
    (140) exprel -> . exp MENOR exp
    (141) exprel -> . exp MAYORI exp
    (142) exprel -> . exp MENORI exp
    (152) exparr -> . ID lista_arr
    (155) newarray -> . LCOR lista_exp RCOR
    (156) newarray -> . LCOR auxexp PCOMA exp RCOR
    (153) expvec -> . VEC AD newarray
    (154) expvec -> . VECTOR DPUNTOS DPUNTOS exp_natarr
    (148) exparam -> . MUT ID
    (149) exparam -> . MUT valores
    (150) exparam -> . ANDSINGLE MUT ID
    (151) exparam -> . ANDSINGLE MUT valores
    (131) exppow -> . I64 DPUNTOS DPUNTOS POW LPAR exp COMA exp RPAR
    (132) exppow -> . F64 DPUNTOS DPUNTOS POWF LPAR exp COMA exp RPAR
    (136) expcast -> . exp AS tipo_var
    (92) lista_acc -> . lista_acc PUNTO ID
    (93) lista_acc -> . lista_acc PUNTO exp_native
    (94) lista_acc -> . auxacc
    (176) llamada -> . ID LPAR RPAR
    (177) llamada -> . ID LPAR lista_exp RPAR
    (37) sentencia -> . if
    (38) sentencia -> . match
    (39) sentencia -> . loop
    (40) sentencia -> . while
    (41) sentencia -> . for
    (157) valores -> . ENTERO
    (158) valores -> . DECIMAL
    (159) valores -> . CADENA
    (160) valores -> . BOOLEANO
    (161) valores -> . CARACTER
    (95) auxacc -> . exparr
    (96) auxacc -> . ID
    (42) if -> . IF exp statement else
    (47) match -> . MATCH exp match_statement
    (62) loop -> . LOOP statement
    (63) while -> . WHILE exp statement
    (64) for -> . FOR ID IN foriterative statement

    LPAR            shift and go to state 29
    ID              shift and go to state 72
    MENOS           shift and go to state 43
    AD              shift and go to state 44
    LCOR            shift and go to state 46
    VEC             shift and go to state 47
    VECTOR          shift and go to state 48
    MUT             shift and go to state 49
    ANDSINGLE       shift and go to state 50
    I64             shift and go to state 51
    F64             shift and go to state 52
    ENTERO          shift and go to state 59
    DECIMAL         shift and go to state 60
    CADENA          shift and go to state 61
    BOOLEANO        shift and go to state 62
    CARACTER        shift and go to state 63
    IF              shift and go to state 12
    MATCH           shift and go to state 64
    LOOP            shift and go to state 65
    WHILE           shift and go to state 13
    FOR             shift and go to state 66

    auxexp                         shift and go to state 221
    expstruct                      shift and go to state 74
    exp                            shift and go to state 75
    lista_classtype                shift and go to state 76
    llamada                        shift and go to state 40
    expmath                        shift and go to state 30
    expop                          shift and go to state 31
    exprel                         shift and go to state 32
    exparr                         shift and go to state 33
    newarray                       shift and go to state 34
    expvec                         shift and go to state 35
    exparam                        shift and go to state 36
    exppow                         shift and go to state 37
    expcast                        shift and go to state 38
    lista_acc                      shift and go to state 39
    sentencia                      shift and go to state 41
    valores                        shift and go to state 42
    auxacc                         shift and go to state 53
    if                             shift and go to state 54
    match                          shift and go to state 55
    loop                           shift and go to state 56
    while                          shift and go to state 57
    for                            shift and go to state 58

state 142

    (97) lista_arr -> lista_arr LCOR auxexp . RCOR

    RCOR            shift and go to state 222


state 143

    (98) lista_arr -> LCOR auxexp RCOR .

    IGUAL           reduce using rule 98 (lista_arr -> LCOR auxexp RCOR .)
    LCOR            reduce using rule 98 (lista_arr -> LCOR auxexp RCOR .)
    PUNTO           reduce using rule 98 (lista_arr -> LCOR auxexp RCOR .)
    MAS             reduce using rule 98 (lista_arr -> LCOR auxexp RCOR .)
    MENOS           reduce using rule 98 (lista_arr -> LCOR auxexp RCOR .)
    MULTIPLICACION  reduce using rule 98 (lista_arr -> LCOR auxexp RCOR .)
    DIVISION        reduce using rule 98 (lista_arr -> LCOR auxexp RCOR .)
    MODULO          reduce using rule 98 (lista_arr -> LCOR auxexp RCOR .)
    AND             reduce using rule 98 (lista_arr -> LCOR auxexp RCOR .)
    OR              reduce using rule 98 (lista_arr -> LCOR auxexp RCOR .)
    IGUALI          reduce using rule 98 (lista_arr -> LCOR auxexp RCOR .)
    DIF             reduce using rule 98 (lista_arr -> LCOR auxexp RCOR .)
    MAYOR           reduce using rule 98 (lista_arr -> LCOR auxexp RCOR .)
    MENOR           reduce using rule 98 (lista_arr -> LCOR auxexp RCOR .)
    MAYORI          reduce using rule 98 (lista_arr -> LCOR auxexp RCOR .)
    MENORI          reduce using rule 98 (lista_arr -> LCOR auxexp RCOR .)
    AS              reduce using rule 98 (lista_arr -> LCOR auxexp RCOR .)
    LLLAV           reduce using rule 98 (lista_arr -> LCOR auxexp RCOR .)
    RPAR            reduce using rule 98 (lista_arr -> LCOR auxexp RCOR .)
    PCOMA           reduce using rule 98 (lista_arr -> LCOR auxexp RCOR .)
    COMA            reduce using rule 98 (lista_arr -> LCOR auxexp RCOR .)
    RCOR            reduce using rule 98 (lista_arr -> LCOR auxexp RCOR .)
    RLLAV           reduce using rule 98 (lista_arr -> LCOR auxexp RCOR .)
    ID              reduce using rule 98 (lista_arr -> LCOR auxexp RCOR .)
    PRINT           reduce using rule 98 (lista_arr -> LCOR auxexp RCOR .)
    LET             reduce using rule 98 (lista_arr -> LCOR auxexp RCOR .)
    CONTINUE        reduce using rule 98 (lista_arr -> LCOR auxexp RCOR .)
    BREAK           reduce using rule 98 (lista_arr -> LCOR auxexp RCOR .)
    RETURN          reduce using rule 98 (lista_arr -> LCOR auxexp RCOR .)
    IF              reduce using rule 98 (lista_arr -> LCOR auxexp RCOR .)
    MATCH           reduce using rule 98 (lista_arr -> LCOR auxexp RCOR .)
    LOOP            reduce using rule 98 (lista_arr -> LCOR auxexp RCOR .)
    WHILE           reduce using rule 98 (lista_arr -> LCOR auxexp RCOR .)
    FOR             reduce using rule 98 (lista_arr -> LCOR auxexp RCOR .)
    LPAR            reduce using rule 98 (lista_arr -> LCOR auxexp RCOR .)
    AD              reduce using rule 98 (lista_arr -> LCOR auxexp RCOR .)
    VEC             reduce using rule 98 (lista_arr -> LCOR auxexp RCOR .)
    VECTOR          reduce using rule 98 (lista_arr -> LCOR auxexp RCOR .)
    MUT             reduce using rule 98 (lista_arr -> LCOR auxexp RCOR .)
    ANDSINGLE       reduce using rule 98 (lista_arr -> LCOR auxexp RCOR .)
    I64             reduce using rule 98 (lista_arr -> LCOR auxexp RCOR .)
    F64             reduce using rule 98 (lista_arr -> LCOR auxexp RCOR .)
    ENTERO          reduce using rule 98 (lista_arr -> LCOR auxexp RCOR .)
    DECIMAL         reduce using rule 98 (lista_arr -> LCOR auxexp RCOR .)
    CADENA          reduce using rule 98 (lista_arr -> LCOR auxexp RCOR .)
    BOOLEANO        reduce using rule 98 (lista_arr -> LCOR auxexp RCOR .)
    CARACTER        reduce using rule 98 (lista_arr -> LCOR auxexp RCOR .)
    ARROW2          reduce using rule 98 (lista_arr -> LCOR auxexp RCOR .)
    ORSINGLE        reduce using rule 98 (lista_arr -> LCOR auxexp RCOR .)


state 144

    (192) print -> PRINT AD LPAR lista_exp . RPAR
    (99) lista_exp -> lista_exp . COMA auxexp

    RPAR            shift and go to state 223
    COMA            shift and go to state 198


state 145

    (100) lista_exp -> auxexp .

    RPAR            reduce using rule 100 (lista_exp -> auxexp .)
    COMA            reduce using rule 100 (lista_exp -> auxexp .)


state 146

    (42) if -> IF exp statement else .

    LET             reduce using rule 42 (if -> IF exp statement else .)
    ID              reduce using rule 42 (if -> IF exp statement else .)
    PRINT           reduce using rule 42 (if -> IF exp statement else .)
    IF              reduce using rule 42 (if -> IF exp statement else .)
    WHILE           reduce using rule 42 (if -> IF exp statement else .)
    $end            reduce using rule 42 (if -> IF exp statement else .)
    PUNTO           reduce using rule 42 (if -> IF exp statement else .)
    MAS             reduce using rule 42 (if -> IF exp statement else .)
    MENOS           reduce using rule 42 (if -> IF exp statement else .)
    MULTIPLICACION  reduce using rule 42 (if -> IF exp statement else .)
    DIVISION        reduce using rule 42 (if -> IF exp statement else .)
    MODULO          reduce using rule 42 (if -> IF exp statement else .)
    AND             reduce using rule 42 (if -> IF exp statement else .)
    OR              reduce using rule 42 (if -> IF exp statement else .)
    IGUALI          reduce using rule 42 (if -> IF exp statement else .)
    DIF             reduce using rule 42 (if -> IF exp statement else .)
    MAYOR           reduce using rule 42 (if -> IF exp statement else .)
    MENOR           reduce using rule 42 (if -> IF exp statement else .)
    MAYORI          reduce using rule 42 (if -> IF exp statement else .)
    MENORI          reduce using rule 42 (if -> IF exp statement else .)
    AS              reduce using rule 42 (if -> IF exp statement else .)
    LLLAV           reduce using rule 42 (if -> IF exp statement else .)
    PCOMA           reduce using rule 42 (if -> IF exp statement else .)
    COMA            reduce using rule 42 (if -> IF exp statement else .)
    RCOR            reduce using rule 42 (if -> IF exp statement else .)
    RPAR            reduce using rule 42 (if -> IF exp statement else .)
    RLLAV           reduce using rule 42 (if -> IF exp statement else .)
    CONTINUE        reduce using rule 42 (if -> IF exp statement else .)
    BREAK           reduce using rule 42 (if -> IF exp statement else .)
    RETURN          reduce using rule 42 (if -> IF exp statement else .)
    MATCH           reduce using rule 42 (if -> IF exp statement else .)
    LOOP            reduce using rule 42 (if -> IF exp statement else .)
    FOR             reduce using rule 42 (if -> IF exp statement else .)
    LPAR            reduce using rule 42 (if -> IF exp statement else .)
    AD              reduce using rule 42 (if -> IF exp statement else .)
    LCOR            reduce using rule 42 (if -> IF exp statement else .)
    VEC             reduce using rule 42 (if -> IF exp statement else .)
    VECTOR          reduce using rule 42 (if -> IF exp statement else .)
    MUT             reduce using rule 42 (if -> IF exp statement else .)
    ANDSINGLE       reduce using rule 42 (if -> IF exp statement else .)
    I64             reduce using rule 42 (if -> IF exp statement else .)
    F64             reduce using rule 42 (if -> IF exp statement else .)
    ENTERO          reduce using rule 42 (if -> IF exp statement else .)
    DECIMAL         reduce using rule 42 (if -> IF exp statement else .)
    CADENA          reduce using rule 42 (if -> IF exp statement else .)
    BOOLEANO        reduce using rule 42 (if -> IF exp statement else .)
    CARACTER        reduce using rule 42 (if -> IF exp statement else .)
    ARROW2          reduce using rule 42 (if -> IF exp statement else .)
    ORSINGLE        reduce using rule 42 (if -> IF exp statement else .)


state 147

    (43) else -> ELSE . statement
    (44) else -> ELSE . if
    (73) statement -> . LLLAV instrucciones_l RLLAV
    (74) statement -> . LLLAV RLLAV
    (42) if -> . IF exp statement else

    LLLAV           shift and go to state 101
    IF              shift and go to state 12

    statement                      shift and go to state 224
    if                             shift and go to state 225

state 148

    (45) else -> epsilon .

    LET             reduce using rule 45 (else -> epsilon .)
    ID              reduce using rule 45 (else -> epsilon .)
    PRINT           reduce using rule 45 (else -> epsilon .)
    IF              reduce using rule 45 (else -> epsilon .)
    WHILE           reduce using rule 45 (else -> epsilon .)
    $end            reduce using rule 45 (else -> epsilon .)
    PUNTO           reduce using rule 45 (else -> epsilon .)
    MAS             reduce using rule 45 (else -> epsilon .)
    MENOS           reduce using rule 45 (else -> epsilon .)
    MULTIPLICACION  reduce using rule 45 (else -> epsilon .)
    DIVISION        reduce using rule 45 (else -> epsilon .)
    MODULO          reduce using rule 45 (else -> epsilon .)
    AND             reduce using rule 45 (else -> epsilon .)
    OR              reduce using rule 45 (else -> epsilon .)
    IGUALI          reduce using rule 45 (else -> epsilon .)
    DIF             reduce using rule 45 (else -> epsilon .)
    MAYOR           reduce using rule 45 (else -> epsilon .)
    MENOR           reduce using rule 45 (else -> epsilon .)
    MAYORI          reduce using rule 45 (else -> epsilon .)
    MENORI          reduce using rule 45 (else -> epsilon .)
    AS              reduce using rule 45 (else -> epsilon .)
    LLLAV           reduce using rule 45 (else -> epsilon .)
    PCOMA           reduce using rule 45 (else -> epsilon .)
    COMA            reduce using rule 45 (else -> epsilon .)
    RCOR            reduce using rule 45 (else -> epsilon .)
    RPAR            reduce using rule 45 (else -> epsilon .)
    RLLAV           reduce using rule 45 (else -> epsilon .)
    CONTINUE        reduce using rule 45 (else -> epsilon .)
    BREAK           reduce using rule 45 (else -> epsilon .)
    RETURN          reduce using rule 45 (else -> epsilon .)
    MATCH           reduce using rule 45 (else -> epsilon .)
    LOOP            reduce using rule 45 (else -> epsilon .)
    FOR             reduce using rule 45 (else -> epsilon .)
    LPAR            reduce using rule 45 (else -> epsilon .)
    AD              reduce using rule 45 (else -> epsilon .)
    LCOR            reduce using rule 45 (else -> epsilon .)
    VEC             reduce using rule 45 (else -> epsilon .)
    VECTOR          reduce using rule 45 (else -> epsilon .)
    MUT             reduce using rule 45 (else -> epsilon .)
    ANDSINGLE       reduce using rule 45 (else -> epsilon .)
    I64             reduce using rule 45 (else -> epsilon .)
    F64             reduce using rule 45 (else -> epsilon .)
    ENTERO          reduce using rule 45 (else -> epsilon .)
    DECIMAL         reduce using rule 45 (else -> epsilon .)
    CADENA          reduce using rule 45 (else -> epsilon .)
    BOOLEANO        reduce using rule 45 (else -> epsilon .)
    CARACTER        reduce using rule 45 (else -> epsilon .)
    ARROW2          reduce using rule 45 (else -> epsilon .)
    ORSINGLE        reduce using rule 45 (else -> epsilon .)


state 149

    (124) exp -> exp PUNTO exp_native .

    PUNTO           reduce using rule 124 (exp -> exp PUNTO exp_native .)
    MAS             reduce using rule 124 (exp -> exp PUNTO exp_native .)
    MENOS           reduce using rule 124 (exp -> exp PUNTO exp_native .)
    MULTIPLICACION  reduce using rule 124 (exp -> exp PUNTO exp_native .)
    DIVISION        reduce using rule 124 (exp -> exp PUNTO exp_native .)
    MODULO          reduce using rule 124 (exp -> exp PUNTO exp_native .)
    AND             reduce using rule 124 (exp -> exp PUNTO exp_native .)
    OR              reduce using rule 124 (exp -> exp PUNTO exp_native .)
    IGUALI          reduce using rule 124 (exp -> exp PUNTO exp_native .)
    DIF             reduce using rule 124 (exp -> exp PUNTO exp_native .)
    MAYOR           reduce using rule 124 (exp -> exp PUNTO exp_native .)
    MENOR           reduce using rule 124 (exp -> exp PUNTO exp_native .)
    MAYORI          reduce using rule 124 (exp -> exp PUNTO exp_native .)
    MENORI          reduce using rule 124 (exp -> exp PUNTO exp_native .)
    AS              reduce using rule 124 (exp -> exp PUNTO exp_native .)
    LLLAV           reduce using rule 124 (exp -> exp PUNTO exp_native .)
    PCOMA           reduce using rule 124 (exp -> exp PUNTO exp_native .)
    COMA            reduce using rule 124 (exp -> exp PUNTO exp_native .)
    RCOR            reduce using rule 124 (exp -> exp PUNTO exp_native .)
    RPAR            reduce using rule 124 (exp -> exp PUNTO exp_native .)
    RLLAV           reduce using rule 124 (exp -> exp PUNTO exp_native .)
    ID              reduce using rule 124 (exp -> exp PUNTO exp_native .)
    PRINT           reduce using rule 124 (exp -> exp PUNTO exp_native .)
    LET             reduce using rule 124 (exp -> exp PUNTO exp_native .)
    CONTINUE        reduce using rule 124 (exp -> exp PUNTO exp_native .)
    BREAK           reduce using rule 124 (exp -> exp PUNTO exp_native .)
    RETURN          reduce using rule 124 (exp -> exp PUNTO exp_native .)
    IF              reduce using rule 124 (exp -> exp PUNTO exp_native .)
    MATCH           reduce using rule 124 (exp -> exp PUNTO exp_native .)
    LOOP            reduce using rule 124 (exp -> exp PUNTO exp_native .)
    WHILE           reduce using rule 124 (exp -> exp PUNTO exp_native .)
    FOR             reduce using rule 124 (exp -> exp PUNTO exp_native .)
    LPAR            reduce using rule 124 (exp -> exp PUNTO exp_native .)
    AD              reduce using rule 124 (exp -> exp PUNTO exp_native .)
    LCOR            reduce using rule 124 (exp -> exp PUNTO exp_native .)
    VEC             reduce using rule 124 (exp -> exp PUNTO exp_native .)
    VECTOR          reduce using rule 124 (exp -> exp PUNTO exp_native .)
    MUT             reduce using rule 124 (exp -> exp PUNTO exp_native .)
    ANDSINGLE       reduce using rule 124 (exp -> exp PUNTO exp_native .)
    I64             reduce using rule 124 (exp -> exp PUNTO exp_native .)
    F64             reduce using rule 124 (exp -> exp PUNTO exp_native .)
    ENTERO          reduce using rule 124 (exp -> exp PUNTO exp_native .)
    DECIMAL         reduce using rule 124 (exp -> exp PUNTO exp_native .)
    CADENA          reduce using rule 124 (exp -> exp PUNTO exp_native .)
    BOOLEANO        reduce using rule 124 (exp -> exp PUNTO exp_native .)
    CARACTER        reduce using rule 124 (exp -> exp PUNTO exp_native .)
    ARROW2          reduce using rule 124 (exp -> exp PUNTO exp_native .)
    ORSINGLE        reduce using rule 124 (exp -> exp PUNTO exp_native .)


state 150

    (178) exp_native -> TOSTRING . LPAR RPAR

    LPAR            shift and go to state 226


state 151

    (179) exp_native -> TOOWNED . LPAR RPAR

    LPAR            shift and go to state 227


state 152

    (180) exp_native -> CLONE . LPAR RPAR

    LPAR            shift and go to state 228


state 153

    (181) exp_native -> LEN . LPAR RPAR

    LPAR            shift and go to state 229


state 154

    (182) exp_native -> CAPACITY . LPAR RPAR

    LPAR            shift and go to state 230


state 155

    (183) exp_native -> REMOVE . LPAR auxexp RPAR

    LPAR            shift and go to state 231


state 156

    (184) exp_native -> CONTAINS . LPAR ANDSINGLE auxexp RPAR

    LPAR            shift and go to state 232


state 157

    (185) exp_native -> PUSH . LPAR auxexp RPAR

    LPAR            shift and go to state 233


state 158

    (186) exp_native -> INSERT . LPAR lista_exp RPAR

    LPAR            shift and go to state 234


state 159

    (187) exp_native -> CHARS . LPAR RPAR

    LPAR            shift and go to state 235


state 160

    (188) exp_native -> SQRT . LPAR RPAR

    LPAR            shift and go to state 236


state 161

    (189) exp_native -> ABS . LPAR RPAR

    LPAR            shift and go to state 237


state 162

    (125) expmath -> exp MAS exp .
    (124) exp -> exp . PUNTO exp_native
    (125) expmath -> exp . MAS exp
    (126) expmath -> exp . MENOS exp
    (127) expmath -> exp . MULTIPLICACION exp
    (128) expmath -> exp . DIVISION exp
    (129) expmath -> exp . MODULO exp
    (133) expop -> exp . AND exp
    (134) expop -> exp . OR exp
    (137) exprel -> exp . IGUALI exp
    (138) exprel -> exp . DIF exp
    (139) exprel -> exp . MAYOR exp
    (140) exprel -> exp . MENOR exp
    (141) exprel -> exp . MAYORI exp
    (142) exprel -> exp . MENORI exp
    (136) expcast -> exp . AS tipo_var

    PUNTO           reduce using rule 125 (expmath -> exp MAS exp .)
    MAS             reduce using rule 125 (expmath -> exp MAS exp .)
    MENOS           reduce using rule 125 (expmath -> exp MAS exp .)
    AND             reduce using rule 125 (expmath -> exp MAS exp .)
    OR              reduce using rule 125 (expmath -> exp MAS exp .)
    IGUALI          reduce using rule 125 (expmath -> exp MAS exp .)
    DIF             reduce using rule 125 (expmath -> exp MAS exp .)
    MAYOR           reduce using rule 125 (expmath -> exp MAS exp .)
    MENOR           reduce using rule 125 (expmath -> exp MAS exp .)
    MAYORI          reduce using rule 125 (expmath -> exp MAS exp .)
    MENORI          reduce using rule 125 (expmath -> exp MAS exp .)
    AS              reduce using rule 125 (expmath -> exp MAS exp .)
    LLLAV           reduce using rule 125 (expmath -> exp MAS exp .)
    PCOMA           reduce using rule 125 (expmath -> exp MAS exp .)
    COMA            reduce using rule 125 (expmath -> exp MAS exp .)
    RCOR            reduce using rule 125 (expmath -> exp MAS exp .)
    RPAR            reduce using rule 125 (expmath -> exp MAS exp .)
    RLLAV           reduce using rule 125 (expmath -> exp MAS exp .)
    ID              reduce using rule 125 (expmath -> exp MAS exp .)
    PRINT           reduce using rule 125 (expmath -> exp MAS exp .)
    LET             reduce using rule 125 (expmath -> exp MAS exp .)
    CONTINUE        reduce using rule 125 (expmath -> exp MAS exp .)
    BREAK           reduce using rule 125 (expmath -> exp MAS exp .)
    RETURN          reduce using rule 125 (expmath -> exp MAS exp .)
    IF              reduce using rule 125 (expmath -> exp MAS exp .)
    MATCH           reduce using rule 125 (expmath -> exp MAS exp .)
    LOOP            reduce using rule 125 (expmath -> exp MAS exp .)
    WHILE           reduce using rule 125 (expmath -> exp MAS exp .)
    FOR             reduce using rule 125 (expmath -> exp MAS exp .)
    LPAR            reduce using rule 125 (expmath -> exp MAS exp .)
    AD              reduce using rule 125 (expmath -> exp MAS exp .)
    LCOR            reduce using rule 125 (expmath -> exp MAS exp .)
    VEC             reduce using rule 125 (expmath -> exp MAS exp .)
    VECTOR          reduce using rule 125 (expmath -> exp MAS exp .)
    MUT             reduce using rule 125 (expmath -> exp MAS exp .)
    ANDSINGLE       reduce using rule 125 (expmath -> exp MAS exp .)
    I64             reduce using rule 125 (expmath -> exp MAS exp .)
    F64             reduce using rule 125 (expmath -> exp MAS exp .)
    ENTERO          reduce using rule 125 (expmath -> exp MAS exp .)
    DECIMAL         reduce using rule 125 (expmath -> exp MAS exp .)
    CADENA          reduce using rule 125 (expmath -> exp MAS exp .)
    BOOLEANO        reduce using rule 125 (expmath -> exp MAS exp .)
    CARACTER        reduce using rule 125 (expmath -> exp MAS exp .)
    ARROW2          reduce using rule 125 (expmath -> exp MAS exp .)
    ORSINGLE        reduce using rule 125 (expmath -> exp MAS exp .)
    MULTIPLICACION  shift and go to state 89
    DIVISION        shift and go to state 90
    MODULO          shift and go to state 91

  ! MULTIPLICACION  [ reduce using rule 125 (expmath -> exp MAS exp .) ]
  ! DIVISION        [ reduce using rule 125 (expmath -> exp MAS exp .) ]
  ! MODULO          [ reduce using rule 125 (expmath -> exp MAS exp .) ]
  ! PUNTO           [ shift and go to state 86 ]
  ! MAS             [ shift and go to state 87 ]
  ! MENOS           [ shift and go to state 88 ]
  ! AND             [ shift and go to state 92 ]
  ! OR              [ shift and go to state 93 ]
  ! IGUALI          [ shift and go to state 94 ]
  ! DIF             [ shift and go to state 95 ]
  ! MAYOR           [ shift and go to state 96 ]
  ! MENOR           [ shift and go to state 97 ]
  ! MAYORI          [ shift and go to state 98 ]
  ! MENORI          [ shift and go to state 99 ]
  ! AS              [ shift and go to state 100 ]


state 163

    (126) expmath -> exp MENOS exp .
    (124) exp -> exp . PUNTO exp_native
    (125) expmath -> exp . MAS exp
    (126) expmath -> exp . MENOS exp
    (127) expmath -> exp . MULTIPLICACION exp
    (128) expmath -> exp . DIVISION exp
    (129) expmath -> exp . MODULO exp
    (133) expop -> exp . AND exp
    (134) expop -> exp . OR exp
    (137) exprel -> exp . IGUALI exp
    (138) exprel -> exp . DIF exp
    (139) exprel -> exp . MAYOR exp
    (140) exprel -> exp . MENOR exp
    (141) exprel -> exp . MAYORI exp
    (142) exprel -> exp . MENORI exp
    (136) expcast -> exp . AS tipo_var

    PUNTO           reduce using rule 126 (expmath -> exp MENOS exp .)
    MAS             reduce using rule 126 (expmath -> exp MENOS exp .)
    MENOS           reduce using rule 126 (expmath -> exp MENOS exp .)
    AND             reduce using rule 126 (expmath -> exp MENOS exp .)
    OR              reduce using rule 126 (expmath -> exp MENOS exp .)
    IGUALI          reduce using rule 126 (expmath -> exp MENOS exp .)
    DIF             reduce using rule 126 (expmath -> exp MENOS exp .)
    MAYOR           reduce using rule 126 (expmath -> exp MENOS exp .)
    MENOR           reduce using rule 126 (expmath -> exp MENOS exp .)
    MAYORI          reduce using rule 126 (expmath -> exp MENOS exp .)
    MENORI          reduce using rule 126 (expmath -> exp MENOS exp .)
    AS              reduce using rule 126 (expmath -> exp MENOS exp .)
    LLLAV           reduce using rule 126 (expmath -> exp MENOS exp .)
    PCOMA           reduce using rule 126 (expmath -> exp MENOS exp .)
    COMA            reduce using rule 126 (expmath -> exp MENOS exp .)
    RCOR            reduce using rule 126 (expmath -> exp MENOS exp .)
    RPAR            reduce using rule 126 (expmath -> exp MENOS exp .)
    RLLAV           reduce using rule 126 (expmath -> exp MENOS exp .)
    ID              reduce using rule 126 (expmath -> exp MENOS exp .)
    PRINT           reduce using rule 126 (expmath -> exp MENOS exp .)
    LET             reduce using rule 126 (expmath -> exp MENOS exp .)
    CONTINUE        reduce using rule 126 (expmath -> exp MENOS exp .)
    BREAK           reduce using rule 126 (expmath -> exp MENOS exp .)
    RETURN          reduce using rule 126 (expmath -> exp MENOS exp .)
    IF              reduce using rule 126 (expmath -> exp MENOS exp .)
    MATCH           reduce using rule 126 (expmath -> exp MENOS exp .)
    LOOP            reduce using rule 126 (expmath -> exp MENOS exp .)
    WHILE           reduce using rule 126 (expmath -> exp MENOS exp .)
    FOR             reduce using rule 126 (expmath -> exp MENOS exp .)
    LPAR            reduce using rule 126 (expmath -> exp MENOS exp .)
    AD              reduce using rule 126 (expmath -> exp MENOS exp .)
    LCOR            reduce using rule 126 (expmath -> exp MENOS exp .)
    VEC             reduce using rule 126 (expmath -> exp MENOS exp .)
    VECTOR          reduce using rule 126 (expmath -> exp MENOS exp .)
    MUT             reduce using rule 126 (expmath -> exp MENOS exp .)
    ANDSINGLE       reduce using rule 126 (expmath -> exp MENOS exp .)
    I64             reduce using rule 126 (expmath -> exp MENOS exp .)
    F64             reduce using rule 126 (expmath -> exp MENOS exp .)
    ENTERO          reduce using rule 126 (expmath -> exp MENOS exp .)
    DECIMAL         reduce using rule 126 (expmath -> exp MENOS exp .)
    CADENA          reduce using rule 126 (expmath -> exp MENOS exp .)
    BOOLEANO        reduce using rule 126 (expmath -> exp MENOS exp .)
    CARACTER        reduce using rule 126 (expmath -> exp MENOS exp .)
    ARROW2          reduce using rule 126 (expmath -> exp MENOS exp .)
    ORSINGLE        reduce using rule 126 (expmath -> exp MENOS exp .)
    MULTIPLICACION  shift and go to state 89
    DIVISION        shift and go to state 90
    MODULO          shift and go to state 91

  ! MULTIPLICACION  [ reduce using rule 126 (expmath -> exp MENOS exp .) ]
  ! DIVISION        [ reduce using rule 126 (expmath -> exp MENOS exp .) ]
  ! MODULO          [ reduce using rule 126 (expmath -> exp MENOS exp .) ]
  ! PUNTO           [ shift and go to state 86 ]
  ! MAS             [ shift and go to state 87 ]
  ! MENOS           [ shift and go to state 88 ]
  ! AND             [ shift and go to state 92 ]
  ! OR              [ shift and go to state 93 ]
  ! IGUALI          [ shift and go to state 94 ]
  ! DIF             [ shift and go to state 95 ]
  ! MAYOR           [ shift and go to state 96 ]
  ! MENOR           [ shift and go to state 97 ]
  ! MAYORI          [ shift and go to state 98 ]
  ! MENORI          [ shift and go to state 99 ]
  ! AS              [ shift and go to state 100 ]


state 164

    (127) expmath -> exp MULTIPLICACION exp .
    (124) exp -> exp . PUNTO exp_native
    (125) expmath -> exp . MAS exp
    (126) expmath -> exp . MENOS exp
    (127) expmath -> exp . MULTIPLICACION exp
    (128) expmath -> exp . DIVISION exp
    (129) expmath -> exp . MODULO exp
    (133) expop -> exp . AND exp
    (134) expop -> exp . OR exp
    (137) exprel -> exp . IGUALI exp
    (138) exprel -> exp . DIF exp
    (139) exprel -> exp . MAYOR exp
    (140) exprel -> exp . MENOR exp
    (141) exprel -> exp . MAYORI exp
    (142) exprel -> exp . MENORI exp
    (136) expcast -> exp . AS tipo_var

    PUNTO           reduce using rule 127 (expmath -> exp MULTIPLICACION exp .)
    MAS             reduce using rule 127 (expmath -> exp MULTIPLICACION exp .)
    MENOS           reduce using rule 127 (expmath -> exp MULTIPLICACION exp .)
    MULTIPLICACION  reduce using rule 127 (expmath -> exp MULTIPLICACION exp .)
    DIVISION        reduce using rule 127 (expmath -> exp MULTIPLICACION exp .)
    MODULO          reduce using rule 127 (expmath -> exp MULTIPLICACION exp .)
    AND             reduce using rule 127 (expmath -> exp MULTIPLICACION exp .)
    OR              reduce using rule 127 (expmath -> exp MULTIPLICACION exp .)
    IGUALI          reduce using rule 127 (expmath -> exp MULTIPLICACION exp .)
    DIF             reduce using rule 127 (expmath -> exp MULTIPLICACION exp .)
    MAYOR           reduce using rule 127 (expmath -> exp MULTIPLICACION exp .)
    MENOR           reduce using rule 127 (expmath -> exp MULTIPLICACION exp .)
    MAYORI          reduce using rule 127 (expmath -> exp MULTIPLICACION exp .)
    MENORI          reduce using rule 127 (expmath -> exp MULTIPLICACION exp .)
    AS              reduce using rule 127 (expmath -> exp MULTIPLICACION exp .)
    LLLAV           reduce using rule 127 (expmath -> exp MULTIPLICACION exp .)
    PCOMA           reduce using rule 127 (expmath -> exp MULTIPLICACION exp .)
    COMA            reduce using rule 127 (expmath -> exp MULTIPLICACION exp .)
    RCOR            reduce using rule 127 (expmath -> exp MULTIPLICACION exp .)
    RPAR            reduce using rule 127 (expmath -> exp MULTIPLICACION exp .)
    RLLAV           reduce using rule 127 (expmath -> exp MULTIPLICACION exp .)
    ID              reduce using rule 127 (expmath -> exp MULTIPLICACION exp .)
    PRINT           reduce using rule 127 (expmath -> exp MULTIPLICACION exp .)
    LET             reduce using rule 127 (expmath -> exp MULTIPLICACION exp .)
    CONTINUE        reduce using rule 127 (expmath -> exp MULTIPLICACION exp .)
    BREAK           reduce using rule 127 (expmath -> exp MULTIPLICACION exp .)
    RETURN          reduce using rule 127 (expmath -> exp MULTIPLICACION exp .)
    IF              reduce using rule 127 (expmath -> exp MULTIPLICACION exp .)
    MATCH           reduce using rule 127 (expmath -> exp MULTIPLICACION exp .)
    LOOP            reduce using rule 127 (expmath -> exp MULTIPLICACION exp .)
    WHILE           reduce using rule 127 (expmath -> exp MULTIPLICACION exp .)
    FOR             reduce using rule 127 (expmath -> exp MULTIPLICACION exp .)
    LPAR            reduce using rule 127 (expmath -> exp MULTIPLICACION exp .)
    AD              reduce using rule 127 (expmath -> exp MULTIPLICACION exp .)
    LCOR            reduce using rule 127 (expmath -> exp MULTIPLICACION exp .)
    VEC             reduce using rule 127 (expmath -> exp MULTIPLICACION exp .)
    VECTOR          reduce using rule 127 (expmath -> exp MULTIPLICACION exp .)
    MUT             reduce using rule 127 (expmath -> exp MULTIPLICACION exp .)
    ANDSINGLE       reduce using rule 127 (expmath -> exp MULTIPLICACION exp .)
    I64             reduce using rule 127 (expmath -> exp MULTIPLICACION exp .)
    F64             reduce using rule 127 (expmath -> exp MULTIPLICACION exp .)
    ENTERO          reduce using rule 127 (expmath -> exp MULTIPLICACION exp .)
    DECIMAL         reduce using rule 127 (expmath -> exp MULTIPLICACION exp .)
    CADENA          reduce using rule 127 (expmath -> exp MULTIPLICACION exp .)
    BOOLEANO        reduce using rule 127 (expmath -> exp MULTIPLICACION exp .)
    CARACTER        reduce using rule 127 (expmath -> exp MULTIPLICACION exp .)
    ARROW2          reduce using rule 127 (expmath -> exp MULTIPLICACION exp .)
    ORSINGLE        reduce using rule 127 (expmath -> exp MULTIPLICACION exp .)

  ! PUNTO           [ shift and go to state 86 ]
  ! MAS             [ shift and go to state 87 ]
  ! MENOS           [ shift and go to state 88 ]
  ! MULTIPLICACION  [ shift and go to state 89 ]
  ! DIVISION        [ shift and go to state 90 ]
  ! MODULO          [ shift and go to state 91 ]
  ! AND             [ shift and go to state 92 ]
  ! OR              [ shift and go to state 93 ]
  ! IGUALI          [ shift and go to state 94 ]
  ! DIF             [ shift and go to state 95 ]
  ! MAYOR           [ shift and go to state 96 ]
  ! MENOR           [ shift and go to state 97 ]
  ! MAYORI          [ shift and go to state 98 ]
  ! MENORI          [ shift and go to state 99 ]
  ! AS              [ shift and go to state 100 ]


state 165

    (128) expmath -> exp DIVISION exp .
    (124) exp -> exp . PUNTO exp_native
    (125) expmath -> exp . MAS exp
    (126) expmath -> exp . MENOS exp
    (127) expmath -> exp . MULTIPLICACION exp
    (128) expmath -> exp . DIVISION exp
    (129) expmath -> exp . MODULO exp
    (133) expop -> exp . AND exp
    (134) expop -> exp . OR exp
    (137) exprel -> exp . IGUALI exp
    (138) exprel -> exp . DIF exp
    (139) exprel -> exp . MAYOR exp
    (140) exprel -> exp . MENOR exp
    (141) exprel -> exp . MAYORI exp
    (142) exprel -> exp . MENORI exp
    (136) expcast -> exp . AS tipo_var

    PUNTO           reduce using rule 128 (expmath -> exp DIVISION exp .)
    MAS             reduce using rule 128 (expmath -> exp DIVISION exp .)
    MENOS           reduce using rule 128 (expmath -> exp DIVISION exp .)
    MULTIPLICACION  reduce using rule 128 (expmath -> exp DIVISION exp .)
    DIVISION        reduce using rule 128 (expmath -> exp DIVISION exp .)
    MODULO          reduce using rule 128 (expmath -> exp DIVISION exp .)
    AND             reduce using rule 128 (expmath -> exp DIVISION exp .)
    OR              reduce using rule 128 (expmath -> exp DIVISION exp .)
    IGUALI          reduce using rule 128 (expmath -> exp DIVISION exp .)
    DIF             reduce using rule 128 (expmath -> exp DIVISION exp .)
    MAYOR           reduce using rule 128 (expmath -> exp DIVISION exp .)
    MENOR           reduce using rule 128 (expmath -> exp DIVISION exp .)
    MAYORI          reduce using rule 128 (expmath -> exp DIVISION exp .)
    MENORI          reduce using rule 128 (expmath -> exp DIVISION exp .)
    AS              reduce using rule 128 (expmath -> exp DIVISION exp .)
    LLLAV           reduce using rule 128 (expmath -> exp DIVISION exp .)
    PCOMA           reduce using rule 128 (expmath -> exp DIVISION exp .)
    COMA            reduce using rule 128 (expmath -> exp DIVISION exp .)
    RCOR            reduce using rule 128 (expmath -> exp DIVISION exp .)
    RPAR            reduce using rule 128 (expmath -> exp DIVISION exp .)
    RLLAV           reduce using rule 128 (expmath -> exp DIVISION exp .)
    ID              reduce using rule 128 (expmath -> exp DIVISION exp .)
    PRINT           reduce using rule 128 (expmath -> exp DIVISION exp .)
    LET             reduce using rule 128 (expmath -> exp DIVISION exp .)
    CONTINUE        reduce using rule 128 (expmath -> exp DIVISION exp .)
    BREAK           reduce using rule 128 (expmath -> exp DIVISION exp .)
    RETURN          reduce using rule 128 (expmath -> exp DIVISION exp .)
    IF              reduce using rule 128 (expmath -> exp DIVISION exp .)
    MATCH           reduce using rule 128 (expmath -> exp DIVISION exp .)
    LOOP            reduce using rule 128 (expmath -> exp DIVISION exp .)
    WHILE           reduce using rule 128 (expmath -> exp DIVISION exp .)
    FOR             reduce using rule 128 (expmath -> exp DIVISION exp .)
    LPAR            reduce using rule 128 (expmath -> exp DIVISION exp .)
    AD              reduce using rule 128 (expmath -> exp DIVISION exp .)
    LCOR            reduce using rule 128 (expmath -> exp DIVISION exp .)
    VEC             reduce using rule 128 (expmath -> exp DIVISION exp .)
    VECTOR          reduce using rule 128 (expmath -> exp DIVISION exp .)
    MUT             reduce using rule 128 (expmath -> exp DIVISION exp .)
    ANDSINGLE       reduce using rule 128 (expmath -> exp DIVISION exp .)
    I64             reduce using rule 128 (expmath -> exp DIVISION exp .)
    F64             reduce using rule 128 (expmath -> exp DIVISION exp .)
    ENTERO          reduce using rule 128 (expmath -> exp DIVISION exp .)
    DECIMAL         reduce using rule 128 (expmath -> exp DIVISION exp .)
    CADENA          reduce using rule 128 (expmath -> exp DIVISION exp .)
    BOOLEANO        reduce using rule 128 (expmath -> exp DIVISION exp .)
    CARACTER        reduce using rule 128 (expmath -> exp DIVISION exp .)
    ARROW2          reduce using rule 128 (expmath -> exp DIVISION exp .)
    ORSINGLE        reduce using rule 128 (expmath -> exp DIVISION exp .)

  ! PUNTO           [ shift and go to state 86 ]
  ! MAS             [ shift and go to state 87 ]
  ! MENOS           [ shift and go to state 88 ]
  ! MULTIPLICACION  [ shift and go to state 89 ]
  ! DIVISION        [ shift and go to state 90 ]
  ! MODULO          [ shift and go to state 91 ]
  ! AND             [ shift and go to state 92 ]
  ! OR              [ shift and go to state 93 ]
  ! IGUALI          [ shift and go to state 94 ]
  ! DIF             [ shift and go to state 95 ]
  ! MAYOR           [ shift and go to state 96 ]
  ! MENOR           [ shift and go to state 97 ]
  ! MAYORI          [ shift and go to state 98 ]
  ! MENORI          [ shift and go to state 99 ]
  ! AS              [ shift and go to state 100 ]


state 166

    (129) expmath -> exp MODULO exp .
    (124) exp -> exp . PUNTO exp_native
    (125) expmath -> exp . MAS exp
    (126) expmath -> exp . MENOS exp
    (127) expmath -> exp . MULTIPLICACION exp
    (128) expmath -> exp . DIVISION exp
    (129) expmath -> exp . MODULO exp
    (133) expop -> exp . AND exp
    (134) expop -> exp . OR exp
    (137) exprel -> exp . IGUALI exp
    (138) exprel -> exp . DIF exp
    (139) exprel -> exp . MAYOR exp
    (140) exprel -> exp . MENOR exp
    (141) exprel -> exp . MAYORI exp
    (142) exprel -> exp . MENORI exp
    (136) expcast -> exp . AS tipo_var

    PUNTO           reduce using rule 129 (expmath -> exp MODULO exp .)
    MAS             reduce using rule 129 (expmath -> exp MODULO exp .)
    MENOS           reduce using rule 129 (expmath -> exp MODULO exp .)
    MULTIPLICACION  reduce using rule 129 (expmath -> exp MODULO exp .)
    DIVISION        reduce using rule 129 (expmath -> exp MODULO exp .)
    MODULO          reduce using rule 129 (expmath -> exp MODULO exp .)
    AND             reduce using rule 129 (expmath -> exp MODULO exp .)
    OR              reduce using rule 129 (expmath -> exp MODULO exp .)
    IGUALI          reduce using rule 129 (expmath -> exp MODULO exp .)
    DIF             reduce using rule 129 (expmath -> exp MODULO exp .)
    MAYOR           reduce using rule 129 (expmath -> exp MODULO exp .)
    MENOR           reduce using rule 129 (expmath -> exp MODULO exp .)
    MAYORI          reduce using rule 129 (expmath -> exp MODULO exp .)
    MENORI          reduce using rule 129 (expmath -> exp MODULO exp .)
    AS              reduce using rule 129 (expmath -> exp MODULO exp .)
    LLLAV           reduce using rule 129 (expmath -> exp MODULO exp .)
    PCOMA           reduce using rule 129 (expmath -> exp MODULO exp .)
    COMA            reduce using rule 129 (expmath -> exp MODULO exp .)
    RCOR            reduce using rule 129 (expmath -> exp MODULO exp .)
    RPAR            reduce using rule 129 (expmath -> exp MODULO exp .)
    RLLAV           reduce using rule 129 (expmath -> exp MODULO exp .)
    ID              reduce using rule 129 (expmath -> exp MODULO exp .)
    PRINT           reduce using rule 129 (expmath -> exp MODULO exp .)
    LET             reduce using rule 129 (expmath -> exp MODULO exp .)
    CONTINUE        reduce using rule 129 (expmath -> exp MODULO exp .)
    BREAK           reduce using rule 129 (expmath -> exp MODULO exp .)
    RETURN          reduce using rule 129 (expmath -> exp MODULO exp .)
    IF              reduce using rule 129 (expmath -> exp MODULO exp .)
    MATCH           reduce using rule 129 (expmath -> exp MODULO exp .)
    LOOP            reduce using rule 129 (expmath -> exp MODULO exp .)
    WHILE           reduce using rule 129 (expmath -> exp MODULO exp .)
    FOR             reduce using rule 129 (expmath -> exp MODULO exp .)
    LPAR            reduce using rule 129 (expmath -> exp MODULO exp .)
    AD              reduce using rule 129 (expmath -> exp MODULO exp .)
    LCOR            reduce using rule 129 (expmath -> exp MODULO exp .)
    VEC             reduce using rule 129 (expmath -> exp MODULO exp .)
    VECTOR          reduce using rule 129 (expmath -> exp MODULO exp .)
    MUT             reduce using rule 129 (expmath -> exp MODULO exp .)
    ANDSINGLE       reduce using rule 129 (expmath -> exp MODULO exp .)
    I64             reduce using rule 129 (expmath -> exp MODULO exp .)
    F64             reduce using rule 129 (expmath -> exp MODULO exp .)
    ENTERO          reduce using rule 129 (expmath -> exp MODULO exp .)
    DECIMAL         reduce using rule 129 (expmath -> exp MODULO exp .)
    CADENA          reduce using rule 129 (expmath -> exp MODULO exp .)
    BOOLEANO        reduce using rule 129 (expmath -> exp MODULO exp .)
    CARACTER        reduce using rule 129 (expmath -> exp MODULO exp .)
    ARROW2          reduce using rule 129 (expmath -> exp MODULO exp .)
    ORSINGLE        reduce using rule 129 (expmath -> exp MODULO exp .)

  ! PUNTO           [ shift and go to state 86 ]
  ! MAS             [ shift and go to state 87 ]
  ! MENOS           [ shift and go to state 88 ]
  ! MULTIPLICACION  [ shift and go to state 89 ]
  ! DIVISION        [ shift and go to state 90 ]
  ! MODULO          [ shift and go to state 91 ]
  ! AND             [ shift and go to state 92 ]
  ! OR              [ shift and go to state 93 ]
  ! IGUALI          [ shift and go to state 94 ]
  ! DIF             [ shift and go to state 95 ]
  ! MAYOR           [ shift and go to state 96 ]
  ! MENOR           [ shift and go to state 97 ]
  ! MAYORI          [ shift and go to state 98 ]
  ! MENORI          [ shift and go to state 99 ]
  ! AS              [ shift and go to state 100 ]


state 167

    (133) expop -> exp AND exp .
    (124) exp -> exp . PUNTO exp_native
    (125) expmath -> exp . MAS exp
    (126) expmath -> exp . MENOS exp
    (127) expmath -> exp . MULTIPLICACION exp
    (128) expmath -> exp . DIVISION exp
    (129) expmath -> exp . MODULO exp
    (133) expop -> exp . AND exp
    (134) expop -> exp . OR exp
    (137) exprel -> exp . IGUALI exp
    (138) exprel -> exp . DIF exp
    (139) exprel -> exp . MAYOR exp
    (140) exprel -> exp . MENOR exp
    (141) exprel -> exp . MAYORI exp
    (142) exprel -> exp . MENORI exp
    (136) expcast -> exp . AS tipo_var

    PUNTO           reduce using rule 133 (expop -> exp AND exp .)
    AND             reduce using rule 133 (expop -> exp AND exp .)
    OR              reduce using rule 133 (expop -> exp AND exp .)
    AS              reduce using rule 133 (expop -> exp AND exp .)
    LLLAV           reduce using rule 133 (expop -> exp AND exp .)
    PCOMA           reduce using rule 133 (expop -> exp AND exp .)
    COMA            reduce using rule 133 (expop -> exp AND exp .)
    RCOR            reduce using rule 133 (expop -> exp AND exp .)
    RPAR            reduce using rule 133 (expop -> exp AND exp .)
    RLLAV           reduce using rule 133 (expop -> exp AND exp .)
    ID              reduce using rule 133 (expop -> exp AND exp .)
    PRINT           reduce using rule 133 (expop -> exp AND exp .)
    LET             reduce using rule 133 (expop -> exp AND exp .)
    CONTINUE        reduce using rule 133 (expop -> exp AND exp .)
    BREAK           reduce using rule 133 (expop -> exp AND exp .)
    RETURN          reduce using rule 133 (expop -> exp AND exp .)
    IF              reduce using rule 133 (expop -> exp AND exp .)
    MATCH           reduce using rule 133 (expop -> exp AND exp .)
    LOOP            reduce using rule 133 (expop -> exp AND exp .)
    WHILE           reduce using rule 133 (expop -> exp AND exp .)
    FOR             reduce using rule 133 (expop -> exp AND exp .)
    LPAR            reduce using rule 133 (expop -> exp AND exp .)
    AD              reduce using rule 133 (expop -> exp AND exp .)
    LCOR            reduce using rule 133 (expop -> exp AND exp .)
    VEC             reduce using rule 133 (expop -> exp AND exp .)
    VECTOR          reduce using rule 133 (expop -> exp AND exp .)
    MUT             reduce using rule 133 (expop -> exp AND exp .)
    ANDSINGLE       reduce using rule 133 (expop -> exp AND exp .)
    I64             reduce using rule 133 (expop -> exp AND exp .)
    F64             reduce using rule 133 (expop -> exp AND exp .)
    ENTERO          reduce using rule 133 (expop -> exp AND exp .)
    DECIMAL         reduce using rule 133 (expop -> exp AND exp .)
    CADENA          reduce using rule 133 (expop -> exp AND exp .)
    BOOLEANO        reduce using rule 133 (expop -> exp AND exp .)
    CARACTER        reduce using rule 133 (expop -> exp AND exp .)
    ARROW2          reduce using rule 133 (expop -> exp AND exp .)
    ORSINGLE        reduce using rule 133 (expop -> exp AND exp .)
    MAS             shift and go to state 87
    MENOS           shift and go to state 88
    MULTIPLICACION  shift and go to state 89
    DIVISION        shift and go to state 90
    MODULO          shift and go to state 91
    IGUALI          shift and go to state 94
    DIF             shift and go to state 95
    MAYOR           shift and go to state 96
    MENOR           shift and go to state 97
    MAYORI          shift and go to state 98
    MENORI          shift and go to state 99

  ! MAS             [ reduce using rule 133 (expop -> exp AND exp .) ]
  ! MENOS           [ reduce using rule 133 (expop -> exp AND exp .) ]
  ! MULTIPLICACION  [ reduce using rule 133 (expop -> exp AND exp .) ]
  ! DIVISION        [ reduce using rule 133 (expop -> exp AND exp .) ]
  ! MODULO          [ reduce using rule 133 (expop -> exp AND exp .) ]
  ! IGUALI          [ reduce using rule 133 (expop -> exp AND exp .) ]
  ! DIF             [ reduce using rule 133 (expop -> exp AND exp .) ]
  ! MAYOR           [ reduce using rule 133 (expop -> exp AND exp .) ]
  ! MENOR           [ reduce using rule 133 (expop -> exp AND exp .) ]
  ! MAYORI          [ reduce using rule 133 (expop -> exp AND exp .) ]
  ! MENORI          [ reduce using rule 133 (expop -> exp AND exp .) ]
  ! PUNTO           [ shift and go to state 86 ]
  ! AND             [ shift and go to state 92 ]
  ! OR              [ shift and go to state 93 ]
  ! AS              [ shift and go to state 100 ]


state 168

    (134) expop -> exp OR exp .
    (124) exp -> exp . PUNTO exp_native
    (125) expmath -> exp . MAS exp
    (126) expmath -> exp . MENOS exp
    (127) expmath -> exp . MULTIPLICACION exp
    (128) expmath -> exp . DIVISION exp
    (129) expmath -> exp . MODULO exp
    (133) expop -> exp . AND exp
    (134) expop -> exp . OR exp
    (137) exprel -> exp . IGUALI exp
    (138) exprel -> exp . DIF exp
    (139) exprel -> exp . MAYOR exp
    (140) exprel -> exp . MENOR exp
    (141) exprel -> exp . MAYORI exp
    (142) exprel -> exp . MENORI exp
    (136) expcast -> exp . AS tipo_var

    PUNTO           reduce using rule 134 (expop -> exp OR exp .)
    OR              reduce using rule 134 (expop -> exp OR exp .)
    AS              reduce using rule 134 (expop -> exp OR exp .)
    LLLAV           reduce using rule 134 (expop -> exp OR exp .)
    PCOMA           reduce using rule 134 (expop -> exp OR exp .)
    COMA            reduce using rule 134 (expop -> exp OR exp .)
    RCOR            reduce using rule 134 (expop -> exp OR exp .)
    RPAR            reduce using rule 134 (expop -> exp OR exp .)
    RLLAV           reduce using rule 134 (expop -> exp OR exp .)
    ID              reduce using rule 134 (expop -> exp OR exp .)
    PRINT           reduce using rule 134 (expop -> exp OR exp .)
    LET             reduce using rule 134 (expop -> exp OR exp .)
    CONTINUE        reduce using rule 134 (expop -> exp OR exp .)
    BREAK           reduce using rule 134 (expop -> exp OR exp .)
    RETURN          reduce using rule 134 (expop -> exp OR exp .)
    IF              reduce using rule 134 (expop -> exp OR exp .)
    MATCH           reduce using rule 134 (expop -> exp OR exp .)
    LOOP            reduce using rule 134 (expop -> exp OR exp .)
    WHILE           reduce using rule 134 (expop -> exp OR exp .)
    FOR             reduce using rule 134 (expop -> exp OR exp .)
    LPAR            reduce using rule 134 (expop -> exp OR exp .)
    AD              reduce using rule 134 (expop -> exp OR exp .)
    LCOR            reduce using rule 134 (expop -> exp OR exp .)
    VEC             reduce using rule 134 (expop -> exp OR exp .)
    VECTOR          reduce using rule 134 (expop -> exp OR exp .)
    MUT             reduce using rule 134 (expop -> exp OR exp .)
    ANDSINGLE       reduce using rule 134 (expop -> exp OR exp .)
    I64             reduce using rule 134 (expop -> exp OR exp .)
    F64             reduce using rule 134 (expop -> exp OR exp .)
    ENTERO          reduce using rule 134 (expop -> exp OR exp .)
    DECIMAL         reduce using rule 134 (expop -> exp OR exp .)
    CADENA          reduce using rule 134 (expop -> exp OR exp .)
    BOOLEANO        reduce using rule 134 (expop -> exp OR exp .)
    CARACTER        reduce using rule 134 (expop -> exp OR exp .)
    ARROW2          reduce using rule 134 (expop -> exp OR exp .)
    ORSINGLE        reduce using rule 134 (expop -> exp OR exp .)
    MAS             shift and go to state 87
    MENOS           shift and go to state 88
    MULTIPLICACION  shift and go to state 89
    DIVISION        shift and go to state 90
    MODULO          shift and go to state 91
    AND             shift and go to state 92
    IGUALI          shift and go to state 94
    DIF             shift and go to state 95
    MAYOR           shift and go to state 96
    MENOR           shift and go to state 97
    MAYORI          shift and go to state 98
    MENORI          shift and go to state 99

  ! MAS             [ reduce using rule 134 (expop -> exp OR exp .) ]
  ! MENOS           [ reduce using rule 134 (expop -> exp OR exp .) ]
  ! MULTIPLICACION  [ reduce using rule 134 (expop -> exp OR exp .) ]
  ! DIVISION        [ reduce using rule 134 (expop -> exp OR exp .) ]
  ! MODULO          [ reduce using rule 134 (expop -> exp OR exp .) ]
  ! AND             [ reduce using rule 134 (expop -> exp OR exp .) ]
  ! IGUALI          [ reduce using rule 134 (expop -> exp OR exp .) ]
  ! DIF             [ reduce using rule 134 (expop -> exp OR exp .) ]
  ! MAYOR           [ reduce using rule 134 (expop -> exp OR exp .) ]
  ! MENOR           [ reduce using rule 134 (expop -> exp OR exp .) ]
  ! MAYORI          [ reduce using rule 134 (expop -> exp OR exp .) ]
  ! MENORI          [ reduce using rule 134 (expop -> exp OR exp .) ]
  ! PUNTO           [ shift and go to state 86 ]
  ! OR              [ shift and go to state 93 ]
  ! AS              [ shift and go to state 100 ]


state 169

    (137) exprel -> exp IGUALI exp .
    (124) exp -> exp . PUNTO exp_native
    (125) expmath -> exp . MAS exp
    (126) expmath -> exp . MENOS exp
    (127) expmath -> exp . MULTIPLICACION exp
    (128) expmath -> exp . DIVISION exp
    (129) expmath -> exp . MODULO exp
    (133) expop -> exp . AND exp
    (134) expop -> exp . OR exp
    (137) exprel -> exp . IGUALI exp
    (138) exprel -> exp . DIF exp
    (139) exprel -> exp . MAYOR exp
    (140) exprel -> exp . MENOR exp
    (141) exprel -> exp . MAYORI exp
    (142) exprel -> exp . MENORI exp
    (136) expcast -> exp . AS tipo_var

    PUNTO           reduce using rule 137 (exprel -> exp IGUALI exp .)
    AND             reduce using rule 137 (exprel -> exp IGUALI exp .)
    OR              reduce using rule 137 (exprel -> exp IGUALI exp .)
    IGUALI          reduce using rule 137 (exprel -> exp IGUALI exp .)
    DIF             reduce using rule 137 (exprel -> exp IGUALI exp .)
    MAYOR           reduce using rule 137 (exprel -> exp IGUALI exp .)
    MENOR           reduce using rule 137 (exprel -> exp IGUALI exp .)
    MAYORI          reduce using rule 137 (exprel -> exp IGUALI exp .)
    MENORI          reduce using rule 137 (exprel -> exp IGUALI exp .)
    AS              reduce using rule 137 (exprel -> exp IGUALI exp .)
    LLLAV           reduce using rule 137 (exprel -> exp IGUALI exp .)
    PCOMA           reduce using rule 137 (exprel -> exp IGUALI exp .)
    COMA            reduce using rule 137 (exprel -> exp IGUALI exp .)
    RCOR            reduce using rule 137 (exprel -> exp IGUALI exp .)
    RPAR            reduce using rule 137 (exprel -> exp IGUALI exp .)
    RLLAV           reduce using rule 137 (exprel -> exp IGUALI exp .)
    ID              reduce using rule 137 (exprel -> exp IGUALI exp .)
    PRINT           reduce using rule 137 (exprel -> exp IGUALI exp .)
    LET             reduce using rule 137 (exprel -> exp IGUALI exp .)
    CONTINUE        reduce using rule 137 (exprel -> exp IGUALI exp .)
    BREAK           reduce using rule 137 (exprel -> exp IGUALI exp .)
    RETURN          reduce using rule 137 (exprel -> exp IGUALI exp .)
    IF              reduce using rule 137 (exprel -> exp IGUALI exp .)
    MATCH           reduce using rule 137 (exprel -> exp IGUALI exp .)
    LOOP            reduce using rule 137 (exprel -> exp IGUALI exp .)
    WHILE           reduce using rule 137 (exprel -> exp IGUALI exp .)
    FOR             reduce using rule 137 (exprel -> exp IGUALI exp .)
    LPAR            reduce using rule 137 (exprel -> exp IGUALI exp .)
    AD              reduce using rule 137 (exprel -> exp IGUALI exp .)
    LCOR            reduce using rule 137 (exprel -> exp IGUALI exp .)
    VEC             reduce using rule 137 (exprel -> exp IGUALI exp .)
    VECTOR          reduce using rule 137 (exprel -> exp IGUALI exp .)
    MUT             reduce using rule 137 (exprel -> exp IGUALI exp .)
    ANDSINGLE       reduce using rule 137 (exprel -> exp IGUALI exp .)
    I64             reduce using rule 137 (exprel -> exp IGUALI exp .)
    F64             reduce using rule 137 (exprel -> exp IGUALI exp .)
    ENTERO          reduce using rule 137 (exprel -> exp IGUALI exp .)
    DECIMAL         reduce using rule 137 (exprel -> exp IGUALI exp .)
    CADENA          reduce using rule 137 (exprel -> exp IGUALI exp .)
    BOOLEANO        reduce using rule 137 (exprel -> exp IGUALI exp .)
    CARACTER        reduce using rule 137 (exprel -> exp IGUALI exp .)
    ARROW2          reduce using rule 137 (exprel -> exp IGUALI exp .)
    ORSINGLE        reduce using rule 137 (exprel -> exp IGUALI exp .)
    MAS             shift and go to state 87
    MENOS           shift and go to state 88
    MULTIPLICACION  shift and go to state 89
    DIVISION        shift and go to state 90
    MODULO          shift and go to state 91

  ! MAS             [ reduce using rule 137 (exprel -> exp IGUALI exp .) ]
  ! MENOS           [ reduce using rule 137 (exprel -> exp IGUALI exp .) ]
  ! MULTIPLICACION  [ reduce using rule 137 (exprel -> exp IGUALI exp .) ]
  ! DIVISION        [ reduce using rule 137 (exprel -> exp IGUALI exp .) ]
  ! MODULO          [ reduce using rule 137 (exprel -> exp IGUALI exp .) ]
  ! PUNTO           [ shift and go to state 86 ]
  ! AND             [ shift and go to state 92 ]
  ! OR              [ shift and go to state 93 ]
  ! IGUALI          [ shift and go to state 94 ]
  ! DIF             [ shift and go to state 95 ]
  ! MAYOR           [ shift and go to state 96 ]
  ! MENOR           [ shift and go to state 97 ]
  ! MAYORI          [ shift and go to state 98 ]
  ! MENORI          [ shift and go to state 99 ]
  ! AS              [ shift and go to state 100 ]


state 170

    (138) exprel -> exp DIF exp .
    (124) exp -> exp . PUNTO exp_native
    (125) expmath -> exp . MAS exp
    (126) expmath -> exp . MENOS exp
    (127) expmath -> exp . MULTIPLICACION exp
    (128) expmath -> exp . DIVISION exp
    (129) expmath -> exp . MODULO exp
    (133) expop -> exp . AND exp
    (134) expop -> exp . OR exp
    (137) exprel -> exp . IGUALI exp
    (138) exprel -> exp . DIF exp
    (139) exprel -> exp . MAYOR exp
    (140) exprel -> exp . MENOR exp
    (141) exprel -> exp . MAYORI exp
    (142) exprel -> exp . MENORI exp
    (136) expcast -> exp . AS tipo_var

    PUNTO           reduce using rule 138 (exprel -> exp DIF exp .)
    AND             reduce using rule 138 (exprel -> exp DIF exp .)
    OR              reduce using rule 138 (exprel -> exp DIF exp .)
    IGUALI          reduce using rule 138 (exprel -> exp DIF exp .)
    DIF             reduce using rule 138 (exprel -> exp DIF exp .)
    MAYOR           reduce using rule 138 (exprel -> exp DIF exp .)
    MENOR           reduce using rule 138 (exprel -> exp DIF exp .)
    MAYORI          reduce using rule 138 (exprel -> exp DIF exp .)
    MENORI          reduce using rule 138 (exprel -> exp DIF exp .)
    AS              reduce using rule 138 (exprel -> exp DIF exp .)
    LLLAV           reduce using rule 138 (exprel -> exp DIF exp .)
    PCOMA           reduce using rule 138 (exprel -> exp DIF exp .)
    COMA            reduce using rule 138 (exprel -> exp DIF exp .)
    RCOR            reduce using rule 138 (exprel -> exp DIF exp .)
    RPAR            reduce using rule 138 (exprel -> exp DIF exp .)
    RLLAV           reduce using rule 138 (exprel -> exp DIF exp .)
    ID              reduce using rule 138 (exprel -> exp DIF exp .)
    PRINT           reduce using rule 138 (exprel -> exp DIF exp .)
    LET             reduce using rule 138 (exprel -> exp DIF exp .)
    CONTINUE        reduce using rule 138 (exprel -> exp DIF exp .)
    BREAK           reduce using rule 138 (exprel -> exp DIF exp .)
    RETURN          reduce using rule 138 (exprel -> exp DIF exp .)
    IF              reduce using rule 138 (exprel -> exp DIF exp .)
    MATCH           reduce using rule 138 (exprel -> exp DIF exp .)
    LOOP            reduce using rule 138 (exprel -> exp DIF exp .)
    WHILE           reduce using rule 138 (exprel -> exp DIF exp .)
    FOR             reduce using rule 138 (exprel -> exp DIF exp .)
    LPAR            reduce using rule 138 (exprel -> exp DIF exp .)
    AD              reduce using rule 138 (exprel -> exp DIF exp .)
    LCOR            reduce using rule 138 (exprel -> exp DIF exp .)
    VEC             reduce using rule 138 (exprel -> exp DIF exp .)
    VECTOR          reduce using rule 138 (exprel -> exp DIF exp .)
    MUT             reduce using rule 138 (exprel -> exp DIF exp .)
    ANDSINGLE       reduce using rule 138 (exprel -> exp DIF exp .)
    I64             reduce using rule 138 (exprel -> exp DIF exp .)
    F64             reduce using rule 138 (exprel -> exp DIF exp .)
    ENTERO          reduce using rule 138 (exprel -> exp DIF exp .)
    DECIMAL         reduce using rule 138 (exprel -> exp DIF exp .)
    CADENA          reduce using rule 138 (exprel -> exp DIF exp .)
    BOOLEANO        reduce using rule 138 (exprel -> exp DIF exp .)
    CARACTER        reduce using rule 138 (exprel -> exp DIF exp .)
    ARROW2          reduce using rule 138 (exprel -> exp DIF exp .)
    ORSINGLE        reduce using rule 138 (exprel -> exp DIF exp .)
    MAS             shift and go to state 87
    MENOS           shift and go to state 88
    MULTIPLICACION  shift and go to state 89
    DIVISION        shift and go to state 90
    MODULO          shift and go to state 91

  ! MAS             [ reduce using rule 138 (exprel -> exp DIF exp .) ]
  ! MENOS           [ reduce using rule 138 (exprel -> exp DIF exp .) ]
  ! MULTIPLICACION  [ reduce using rule 138 (exprel -> exp DIF exp .) ]
  ! DIVISION        [ reduce using rule 138 (exprel -> exp DIF exp .) ]
  ! MODULO          [ reduce using rule 138 (exprel -> exp DIF exp .) ]
  ! PUNTO           [ shift and go to state 86 ]
  ! AND             [ shift and go to state 92 ]
  ! OR              [ shift and go to state 93 ]
  ! IGUALI          [ shift and go to state 94 ]
  ! DIF             [ shift and go to state 95 ]
  ! MAYOR           [ shift and go to state 96 ]
  ! MENOR           [ shift and go to state 97 ]
  ! MAYORI          [ shift and go to state 98 ]
  ! MENORI          [ shift and go to state 99 ]
  ! AS              [ shift and go to state 100 ]


state 171

    (139) exprel -> exp MAYOR exp .
    (124) exp -> exp . PUNTO exp_native
    (125) expmath -> exp . MAS exp
    (126) expmath -> exp . MENOS exp
    (127) expmath -> exp . MULTIPLICACION exp
    (128) expmath -> exp . DIVISION exp
    (129) expmath -> exp . MODULO exp
    (133) expop -> exp . AND exp
    (134) expop -> exp . OR exp
    (137) exprel -> exp . IGUALI exp
    (138) exprel -> exp . DIF exp
    (139) exprel -> exp . MAYOR exp
    (140) exprel -> exp . MENOR exp
    (141) exprel -> exp . MAYORI exp
    (142) exprel -> exp . MENORI exp
    (136) expcast -> exp . AS tipo_var

    PUNTO           reduce using rule 139 (exprel -> exp MAYOR exp .)
    AND             reduce using rule 139 (exprel -> exp MAYOR exp .)
    OR              reduce using rule 139 (exprel -> exp MAYOR exp .)
    IGUALI          reduce using rule 139 (exprel -> exp MAYOR exp .)
    DIF             reduce using rule 139 (exprel -> exp MAYOR exp .)
    MAYOR           reduce using rule 139 (exprel -> exp MAYOR exp .)
    MENOR           reduce using rule 139 (exprel -> exp MAYOR exp .)
    MAYORI          reduce using rule 139 (exprel -> exp MAYOR exp .)
    MENORI          reduce using rule 139 (exprel -> exp MAYOR exp .)
    AS              reduce using rule 139 (exprel -> exp MAYOR exp .)
    LLLAV           reduce using rule 139 (exprel -> exp MAYOR exp .)
    PCOMA           reduce using rule 139 (exprel -> exp MAYOR exp .)
    COMA            reduce using rule 139 (exprel -> exp MAYOR exp .)
    RCOR            reduce using rule 139 (exprel -> exp MAYOR exp .)
    RPAR            reduce using rule 139 (exprel -> exp MAYOR exp .)
    RLLAV           reduce using rule 139 (exprel -> exp MAYOR exp .)
    ID              reduce using rule 139 (exprel -> exp MAYOR exp .)
    PRINT           reduce using rule 139 (exprel -> exp MAYOR exp .)
    LET             reduce using rule 139 (exprel -> exp MAYOR exp .)
    CONTINUE        reduce using rule 139 (exprel -> exp MAYOR exp .)
    BREAK           reduce using rule 139 (exprel -> exp MAYOR exp .)
    RETURN          reduce using rule 139 (exprel -> exp MAYOR exp .)
    IF              reduce using rule 139 (exprel -> exp MAYOR exp .)
    MATCH           reduce using rule 139 (exprel -> exp MAYOR exp .)
    LOOP            reduce using rule 139 (exprel -> exp MAYOR exp .)
    WHILE           reduce using rule 139 (exprel -> exp MAYOR exp .)
    FOR             reduce using rule 139 (exprel -> exp MAYOR exp .)
    LPAR            reduce using rule 139 (exprel -> exp MAYOR exp .)
    AD              reduce using rule 139 (exprel -> exp MAYOR exp .)
    LCOR            reduce using rule 139 (exprel -> exp MAYOR exp .)
    VEC             reduce using rule 139 (exprel -> exp MAYOR exp .)
    VECTOR          reduce using rule 139 (exprel -> exp MAYOR exp .)
    MUT             reduce using rule 139 (exprel -> exp MAYOR exp .)
    ANDSINGLE       reduce using rule 139 (exprel -> exp MAYOR exp .)
    I64             reduce using rule 139 (exprel -> exp MAYOR exp .)
    F64             reduce using rule 139 (exprel -> exp MAYOR exp .)
    ENTERO          reduce using rule 139 (exprel -> exp MAYOR exp .)
    DECIMAL         reduce using rule 139 (exprel -> exp MAYOR exp .)
    CADENA          reduce using rule 139 (exprel -> exp MAYOR exp .)
    BOOLEANO        reduce using rule 139 (exprel -> exp MAYOR exp .)
    CARACTER        reduce using rule 139 (exprel -> exp MAYOR exp .)
    ARROW2          reduce using rule 139 (exprel -> exp MAYOR exp .)
    ORSINGLE        reduce using rule 139 (exprel -> exp MAYOR exp .)
    MAS             shift and go to state 87
    MENOS           shift and go to state 88
    MULTIPLICACION  shift and go to state 89
    DIVISION        shift and go to state 90
    MODULO          shift and go to state 91

  ! MAS             [ reduce using rule 139 (exprel -> exp MAYOR exp .) ]
  ! MENOS           [ reduce using rule 139 (exprel -> exp MAYOR exp .) ]
  ! MULTIPLICACION  [ reduce using rule 139 (exprel -> exp MAYOR exp .) ]
  ! DIVISION        [ reduce using rule 139 (exprel -> exp MAYOR exp .) ]
  ! MODULO          [ reduce using rule 139 (exprel -> exp MAYOR exp .) ]
  ! PUNTO           [ shift and go to state 86 ]
  ! AND             [ shift and go to state 92 ]
  ! OR              [ shift and go to state 93 ]
  ! IGUALI          [ shift and go to state 94 ]
  ! DIF             [ shift and go to state 95 ]
  ! MAYOR           [ shift and go to state 96 ]
  ! MENOR           [ shift and go to state 97 ]
  ! MAYORI          [ shift and go to state 98 ]
  ! MENORI          [ shift and go to state 99 ]
  ! AS              [ shift and go to state 100 ]


state 172

    (140) exprel -> exp MENOR exp .
    (124) exp -> exp . PUNTO exp_native
    (125) expmath -> exp . MAS exp
    (126) expmath -> exp . MENOS exp
    (127) expmath -> exp . MULTIPLICACION exp
    (128) expmath -> exp . DIVISION exp
    (129) expmath -> exp . MODULO exp
    (133) expop -> exp . AND exp
    (134) expop -> exp . OR exp
    (137) exprel -> exp . IGUALI exp
    (138) exprel -> exp . DIF exp
    (139) exprel -> exp . MAYOR exp
    (140) exprel -> exp . MENOR exp
    (141) exprel -> exp . MAYORI exp
    (142) exprel -> exp . MENORI exp
    (136) expcast -> exp . AS tipo_var

    PUNTO           reduce using rule 140 (exprel -> exp MENOR exp .)
    AND             reduce using rule 140 (exprel -> exp MENOR exp .)
    OR              reduce using rule 140 (exprel -> exp MENOR exp .)
    IGUALI          reduce using rule 140 (exprel -> exp MENOR exp .)
    DIF             reduce using rule 140 (exprel -> exp MENOR exp .)
    MAYOR           reduce using rule 140 (exprel -> exp MENOR exp .)
    MENOR           reduce using rule 140 (exprel -> exp MENOR exp .)
    MAYORI          reduce using rule 140 (exprel -> exp MENOR exp .)
    MENORI          reduce using rule 140 (exprel -> exp MENOR exp .)
    AS              reduce using rule 140 (exprel -> exp MENOR exp .)
    LLLAV           reduce using rule 140 (exprel -> exp MENOR exp .)
    PCOMA           reduce using rule 140 (exprel -> exp MENOR exp .)
    COMA            reduce using rule 140 (exprel -> exp MENOR exp .)
    RCOR            reduce using rule 140 (exprel -> exp MENOR exp .)
    RPAR            reduce using rule 140 (exprel -> exp MENOR exp .)
    RLLAV           reduce using rule 140 (exprel -> exp MENOR exp .)
    ID              reduce using rule 140 (exprel -> exp MENOR exp .)
    PRINT           reduce using rule 140 (exprel -> exp MENOR exp .)
    LET             reduce using rule 140 (exprel -> exp MENOR exp .)
    CONTINUE        reduce using rule 140 (exprel -> exp MENOR exp .)
    BREAK           reduce using rule 140 (exprel -> exp MENOR exp .)
    RETURN          reduce using rule 140 (exprel -> exp MENOR exp .)
    IF              reduce using rule 140 (exprel -> exp MENOR exp .)
    MATCH           reduce using rule 140 (exprel -> exp MENOR exp .)
    LOOP            reduce using rule 140 (exprel -> exp MENOR exp .)
    WHILE           reduce using rule 140 (exprel -> exp MENOR exp .)
    FOR             reduce using rule 140 (exprel -> exp MENOR exp .)
    LPAR            reduce using rule 140 (exprel -> exp MENOR exp .)
    AD              reduce using rule 140 (exprel -> exp MENOR exp .)
    LCOR            reduce using rule 140 (exprel -> exp MENOR exp .)
    VEC             reduce using rule 140 (exprel -> exp MENOR exp .)
    VECTOR          reduce using rule 140 (exprel -> exp MENOR exp .)
    MUT             reduce using rule 140 (exprel -> exp MENOR exp .)
    ANDSINGLE       reduce using rule 140 (exprel -> exp MENOR exp .)
    I64             reduce using rule 140 (exprel -> exp MENOR exp .)
    F64             reduce using rule 140 (exprel -> exp MENOR exp .)
    ENTERO          reduce using rule 140 (exprel -> exp MENOR exp .)
    DECIMAL         reduce using rule 140 (exprel -> exp MENOR exp .)
    CADENA          reduce using rule 140 (exprel -> exp MENOR exp .)
    BOOLEANO        reduce using rule 140 (exprel -> exp MENOR exp .)
    CARACTER        reduce using rule 140 (exprel -> exp MENOR exp .)
    ARROW2          reduce using rule 140 (exprel -> exp MENOR exp .)
    ORSINGLE        reduce using rule 140 (exprel -> exp MENOR exp .)
    MAS             shift and go to state 87
    MENOS           shift and go to state 88
    MULTIPLICACION  shift and go to state 89
    DIVISION        shift and go to state 90
    MODULO          shift and go to state 91

  ! MAS             [ reduce using rule 140 (exprel -> exp MENOR exp .) ]
  ! MENOS           [ reduce using rule 140 (exprel -> exp MENOR exp .) ]
  ! MULTIPLICACION  [ reduce using rule 140 (exprel -> exp MENOR exp .) ]
  ! DIVISION        [ reduce using rule 140 (exprel -> exp MENOR exp .) ]
  ! MODULO          [ reduce using rule 140 (exprel -> exp MENOR exp .) ]
  ! PUNTO           [ shift and go to state 86 ]
  ! AND             [ shift and go to state 92 ]
  ! OR              [ shift and go to state 93 ]
  ! IGUALI          [ shift and go to state 94 ]
  ! DIF             [ shift and go to state 95 ]
  ! MAYOR           [ shift and go to state 96 ]
  ! MENOR           [ shift and go to state 97 ]
  ! MAYORI          [ shift and go to state 98 ]
  ! MENORI          [ shift and go to state 99 ]
  ! AS              [ shift and go to state 100 ]


state 173

    (141) exprel -> exp MAYORI exp .
    (124) exp -> exp . PUNTO exp_native
    (125) expmath -> exp . MAS exp
    (126) expmath -> exp . MENOS exp
    (127) expmath -> exp . MULTIPLICACION exp
    (128) expmath -> exp . DIVISION exp
    (129) expmath -> exp . MODULO exp
    (133) expop -> exp . AND exp
    (134) expop -> exp . OR exp
    (137) exprel -> exp . IGUALI exp
    (138) exprel -> exp . DIF exp
    (139) exprel -> exp . MAYOR exp
    (140) exprel -> exp . MENOR exp
    (141) exprel -> exp . MAYORI exp
    (142) exprel -> exp . MENORI exp
    (136) expcast -> exp . AS tipo_var

    PUNTO           reduce using rule 141 (exprel -> exp MAYORI exp .)
    AND             reduce using rule 141 (exprel -> exp MAYORI exp .)
    OR              reduce using rule 141 (exprel -> exp MAYORI exp .)
    IGUALI          reduce using rule 141 (exprel -> exp MAYORI exp .)
    DIF             reduce using rule 141 (exprel -> exp MAYORI exp .)
    MAYOR           reduce using rule 141 (exprel -> exp MAYORI exp .)
    MENOR           reduce using rule 141 (exprel -> exp MAYORI exp .)
    MAYORI          reduce using rule 141 (exprel -> exp MAYORI exp .)
    MENORI          reduce using rule 141 (exprel -> exp MAYORI exp .)
    AS              reduce using rule 141 (exprel -> exp MAYORI exp .)
    LLLAV           reduce using rule 141 (exprel -> exp MAYORI exp .)
    PCOMA           reduce using rule 141 (exprel -> exp MAYORI exp .)
    COMA            reduce using rule 141 (exprel -> exp MAYORI exp .)
    RCOR            reduce using rule 141 (exprel -> exp MAYORI exp .)
    RPAR            reduce using rule 141 (exprel -> exp MAYORI exp .)
    RLLAV           reduce using rule 141 (exprel -> exp MAYORI exp .)
    ID              reduce using rule 141 (exprel -> exp MAYORI exp .)
    PRINT           reduce using rule 141 (exprel -> exp MAYORI exp .)
    LET             reduce using rule 141 (exprel -> exp MAYORI exp .)
    CONTINUE        reduce using rule 141 (exprel -> exp MAYORI exp .)
    BREAK           reduce using rule 141 (exprel -> exp MAYORI exp .)
    RETURN          reduce using rule 141 (exprel -> exp MAYORI exp .)
    IF              reduce using rule 141 (exprel -> exp MAYORI exp .)
    MATCH           reduce using rule 141 (exprel -> exp MAYORI exp .)
    LOOP            reduce using rule 141 (exprel -> exp MAYORI exp .)
    WHILE           reduce using rule 141 (exprel -> exp MAYORI exp .)
    FOR             reduce using rule 141 (exprel -> exp MAYORI exp .)
    LPAR            reduce using rule 141 (exprel -> exp MAYORI exp .)
    AD              reduce using rule 141 (exprel -> exp MAYORI exp .)
    LCOR            reduce using rule 141 (exprel -> exp MAYORI exp .)
    VEC             reduce using rule 141 (exprel -> exp MAYORI exp .)
    VECTOR          reduce using rule 141 (exprel -> exp MAYORI exp .)
    MUT             reduce using rule 141 (exprel -> exp MAYORI exp .)
    ANDSINGLE       reduce using rule 141 (exprel -> exp MAYORI exp .)
    I64             reduce using rule 141 (exprel -> exp MAYORI exp .)
    F64             reduce using rule 141 (exprel -> exp MAYORI exp .)
    ENTERO          reduce using rule 141 (exprel -> exp MAYORI exp .)
    DECIMAL         reduce using rule 141 (exprel -> exp MAYORI exp .)
    CADENA          reduce using rule 141 (exprel -> exp MAYORI exp .)
    BOOLEANO        reduce using rule 141 (exprel -> exp MAYORI exp .)
    CARACTER        reduce using rule 141 (exprel -> exp MAYORI exp .)
    ARROW2          reduce using rule 141 (exprel -> exp MAYORI exp .)
    ORSINGLE        reduce using rule 141 (exprel -> exp MAYORI exp .)
    MAS             shift and go to state 87
    MENOS           shift and go to state 88
    MULTIPLICACION  shift and go to state 89
    DIVISION        shift and go to state 90
    MODULO          shift and go to state 91

  ! MAS             [ reduce using rule 141 (exprel -> exp MAYORI exp .) ]
  ! MENOS           [ reduce using rule 141 (exprel -> exp MAYORI exp .) ]
  ! MULTIPLICACION  [ reduce using rule 141 (exprel -> exp MAYORI exp .) ]
  ! DIVISION        [ reduce using rule 141 (exprel -> exp MAYORI exp .) ]
  ! MODULO          [ reduce using rule 141 (exprel -> exp MAYORI exp .) ]
  ! PUNTO           [ shift and go to state 86 ]
  ! AND             [ shift and go to state 92 ]
  ! OR              [ shift and go to state 93 ]
  ! IGUALI          [ shift and go to state 94 ]
  ! DIF             [ shift and go to state 95 ]
  ! MAYOR           [ shift and go to state 96 ]
  ! MENOR           [ shift and go to state 97 ]
  ! MAYORI          [ shift and go to state 98 ]
  ! MENORI          [ shift and go to state 99 ]
  ! AS              [ shift and go to state 100 ]


state 174

    (142) exprel -> exp MENORI exp .
    (124) exp -> exp . PUNTO exp_native
    (125) expmath -> exp . MAS exp
    (126) expmath -> exp . MENOS exp
    (127) expmath -> exp . MULTIPLICACION exp
    (128) expmath -> exp . DIVISION exp
    (129) expmath -> exp . MODULO exp
    (133) expop -> exp . AND exp
    (134) expop -> exp . OR exp
    (137) exprel -> exp . IGUALI exp
    (138) exprel -> exp . DIF exp
    (139) exprel -> exp . MAYOR exp
    (140) exprel -> exp . MENOR exp
    (141) exprel -> exp . MAYORI exp
    (142) exprel -> exp . MENORI exp
    (136) expcast -> exp . AS tipo_var

    PUNTO           reduce using rule 142 (exprel -> exp MENORI exp .)
    AND             reduce using rule 142 (exprel -> exp MENORI exp .)
    OR              reduce using rule 142 (exprel -> exp MENORI exp .)
    IGUALI          reduce using rule 142 (exprel -> exp MENORI exp .)
    DIF             reduce using rule 142 (exprel -> exp MENORI exp .)
    MAYOR           reduce using rule 142 (exprel -> exp MENORI exp .)
    MENOR           reduce using rule 142 (exprel -> exp MENORI exp .)
    MAYORI          reduce using rule 142 (exprel -> exp MENORI exp .)
    MENORI          reduce using rule 142 (exprel -> exp MENORI exp .)
    AS              reduce using rule 142 (exprel -> exp MENORI exp .)
    LLLAV           reduce using rule 142 (exprel -> exp MENORI exp .)
    PCOMA           reduce using rule 142 (exprel -> exp MENORI exp .)
    COMA            reduce using rule 142 (exprel -> exp MENORI exp .)
    RCOR            reduce using rule 142 (exprel -> exp MENORI exp .)
    RPAR            reduce using rule 142 (exprel -> exp MENORI exp .)
    RLLAV           reduce using rule 142 (exprel -> exp MENORI exp .)
    ID              reduce using rule 142 (exprel -> exp MENORI exp .)
    PRINT           reduce using rule 142 (exprel -> exp MENORI exp .)
    LET             reduce using rule 142 (exprel -> exp MENORI exp .)
    CONTINUE        reduce using rule 142 (exprel -> exp MENORI exp .)
    BREAK           reduce using rule 142 (exprel -> exp MENORI exp .)
    RETURN          reduce using rule 142 (exprel -> exp MENORI exp .)
    IF              reduce using rule 142 (exprel -> exp MENORI exp .)
    MATCH           reduce using rule 142 (exprel -> exp MENORI exp .)
    LOOP            reduce using rule 142 (exprel -> exp MENORI exp .)
    WHILE           reduce using rule 142 (exprel -> exp MENORI exp .)
    FOR             reduce using rule 142 (exprel -> exp MENORI exp .)
    LPAR            reduce using rule 142 (exprel -> exp MENORI exp .)
    AD              reduce using rule 142 (exprel -> exp MENORI exp .)
    LCOR            reduce using rule 142 (exprel -> exp MENORI exp .)
    VEC             reduce using rule 142 (exprel -> exp MENORI exp .)
    VECTOR          reduce using rule 142 (exprel -> exp MENORI exp .)
    MUT             reduce using rule 142 (exprel -> exp MENORI exp .)
    ANDSINGLE       reduce using rule 142 (exprel -> exp MENORI exp .)
    I64             reduce using rule 142 (exprel -> exp MENORI exp .)
    F64             reduce using rule 142 (exprel -> exp MENORI exp .)
    ENTERO          reduce using rule 142 (exprel -> exp MENORI exp .)
    DECIMAL         reduce using rule 142 (exprel -> exp MENORI exp .)
    CADENA          reduce using rule 142 (exprel -> exp MENORI exp .)
    BOOLEANO        reduce using rule 142 (exprel -> exp MENORI exp .)
    CARACTER        reduce using rule 142 (exprel -> exp MENORI exp .)
    ARROW2          reduce using rule 142 (exprel -> exp MENORI exp .)
    ORSINGLE        reduce using rule 142 (exprel -> exp MENORI exp .)
    MAS             shift and go to state 87
    MENOS           shift and go to state 88
    MULTIPLICACION  shift and go to state 89
    DIVISION        shift and go to state 90
    MODULO          shift and go to state 91

  ! MAS             [ reduce using rule 142 (exprel -> exp MENORI exp .) ]
  ! MENOS           [ reduce using rule 142 (exprel -> exp MENORI exp .) ]
  ! MULTIPLICACION  [ reduce using rule 142 (exprel -> exp MENORI exp .) ]
  ! DIVISION        [ reduce using rule 142 (exprel -> exp MENORI exp .) ]
  ! MODULO          [ reduce using rule 142 (exprel -> exp MENORI exp .) ]
  ! PUNTO           [ shift and go to state 86 ]
  ! AND             [ shift and go to state 92 ]
  ! OR              [ shift and go to state 93 ]
  ! IGUALI          [ shift and go to state 94 ]
  ! DIF             [ shift and go to state 95 ]
  ! MAYOR           [ shift and go to state 96 ]
  ! MENOR           [ shift and go to state 97 ]
  ! MAYORI          [ shift and go to state 98 ]
  ! MENORI          [ shift and go to state 99 ]
  ! AS              [ shift and go to state 100 ]


state 175

    (136) expcast -> exp AS tipo_var .

    PUNTO           reduce using rule 136 (expcast -> exp AS tipo_var .)
    MAS             reduce using rule 136 (expcast -> exp AS tipo_var .)
    MENOS           reduce using rule 136 (expcast -> exp AS tipo_var .)
    MULTIPLICACION  reduce using rule 136 (expcast -> exp AS tipo_var .)
    DIVISION        reduce using rule 136 (expcast -> exp AS tipo_var .)
    MODULO          reduce using rule 136 (expcast -> exp AS tipo_var .)
    AND             reduce using rule 136 (expcast -> exp AS tipo_var .)
    OR              reduce using rule 136 (expcast -> exp AS tipo_var .)
    IGUALI          reduce using rule 136 (expcast -> exp AS tipo_var .)
    DIF             reduce using rule 136 (expcast -> exp AS tipo_var .)
    MAYOR           reduce using rule 136 (expcast -> exp AS tipo_var .)
    MENOR           reduce using rule 136 (expcast -> exp AS tipo_var .)
    MAYORI          reduce using rule 136 (expcast -> exp AS tipo_var .)
    MENORI          reduce using rule 136 (expcast -> exp AS tipo_var .)
    AS              reduce using rule 136 (expcast -> exp AS tipo_var .)
    LLLAV           reduce using rule 136 (expcast -> exp AS tipo_var .)
    PCOMA           reduce using rule 136 (expcast -> exp AS tipo_var .)
    COMA            reduce using rule 136 (expcast -> exp AS tipo_var .)
    RCOR            reduce using rule 136 (expcast -> exp AS tipo_var .)
    RPAR            reduce using rule 136 (expcast -> exp AS tipo_var .)
    RLLAV           reduce using rule 136 (expcast -> exp AS tipo_var .)
    ID              reduce using rule 136 (expcast -> exp AS tipo_var .)
    PRINT           reduce using rule 136 (expcast -> exp AS tipo_var .)
    LET             reduce using rule 136 (expcast -> exp AS tipo_var .)
    CONTINUE        reduce using rule 136 (expcast -> exp AS tipo_var .)
    BREAK           reduce using rule 136 (expcast -> exp AS tipo_var .)
    RETURN          reduce using rule 136 (expcast -> exp AS tipo_var .)
    IF              reduce using rule 136 (expcast -> exp AS tipo_var .)
    MATCH           reduce using rule 136 (expcast -> exp AS tipo_var .)
    LOOP            reduce using rule 136 (expcast -> exp AS tipo_var .)
    WHILE           reduce using rule 136 (expcast -> exp AS tipo_var .)
    FOR             reduce using rule 136 (expcast -> exp AS tipo_var .)
    LPAR            reduce using rule 136 (expcast -> exp AS tipo_var .)
    AD              reduce using rule 136 (expcast -> exp AS tipo_var .)
    LCOR            reduce using rule 136 (expcast -> exp AS tipo_var .)
    VEC             reduce using rule 136 (expcast -> exp AS tipo_var .)
    VECTOR          reduce using rule 136 (expcast -> exp AS tipo_var .)
    MUT             reduce using rule 136 (expcast -> exp AS tipo_var .)
    ANDSINGLE       reduce using rule 136 (expcast -> exp AS tipo_var .)
    I64             reduce using rule 136 (expcast -> exp AS tipo_var .)
    F64             reduce using rule 136 (expcast -> exp AS tipo_var .)
    ENTERO          reduce using rule 136 (expcast -> exp AS tipo_var .)
    DECIMAL         reduce using rule 136 (expcast -> exp AS tipo_var .)
    CADENA          reduce using rule 136 (expcast -> exp AS tipo_var .)
    BOOLEANO        reduce using rule 136 (expcast -> exp AS tipo_var .)
    CARACTER        reduce using rule 136 (expcast -> exp AS tipo_var .)
    ARROW2          reduce using rule 136 (expcast -> exp AS tipo_var .)
    ORSINGLE        reduce using rule 136 (expcast -> exp AS tipo_var .)


state 176

    (165) tipo_var -> ANDSINGLE . aSTR

    aSTR            shift and go to state 213


state 177

    (73) statement -> LLLAV instrucciones_l . RLLAV
    (9) instrucciones_l -> instrucciones_l . instruccion_l
    (11) instruccion_l -> . print PCOMA
    (12) instruccion_l -> . declaracion PCOMA
    (13) instruccion_l -> . asignacion PCOMA
    (14) instruccion_l -> . llamada PCOMA
    (15) instruccion_l -> . expstruct PCOMA
    (16) instruccion_l -> . ID PUNTO exp_native PCOMA
    (17) instruccion_l -> . sentencia
    (18) instruccion_l -> . transferencia
    (19) instruccion_l -> . transferencia PCOMA
    (192) print -> . PRINT AD LPAR lista_exp RPAR
    (81) declaracion -> . LET asignacion_simple IGUAL auxexp
    (82) declaracion -> . LET MUT asignacion
    (83) declaracion -> . LET asignacion
    (84) asignacion -> . ID IGUAL auxexp
    (85) asignacion -> . ID lista_assign2 IGUAL auxexp
    (86) asignacion -> . ID lista_arr IGUAL auxexp
    (87) asignacion -> . ID lista_arr lista_assign2 IGUAL auxexp
    (176) llamada -> . ID LPAR RPAR
    (177) llamada -> . ID LPAR lista_exp RPAR
    (143) expstruct -> . lista_classtype LLLAV lista_att RLLAV
    (144) expstruct -> . lista_classtype LLLAV RLLAV
    (145) expstruct -> . lista_classtype DPUNTOS DPUNTOS llamada
    (37) sentencia -> . if
    (38) sentencia -> . match
    (39) sentencia -> . loop
    (40) sentencia -> . while
    (41) sentencia -> . for
    (67) transferencia -> . CONTINUE
    (68) transferencia -> . BREAK
    (69) transferencia -> . BREAK auxexp
    (70) transferencia -> . RETURN
    (71) transferencia -> . RETURN auxexp
    (72) transferencia -> . auxexp
    (174) lista_classtype -> . lista_classtype DPUNTOS DPUNTOS ID
    (175) lista_classtype -> . ID
    (42) if -> . IF exp statement else
    (47) match -> . MATCH exp match_statement
    (62) loop -> . LOOP statement
    (63) while -> . WHILE exp statement
    (64) for -> . FOR ID IN foriterative statement
    (108) auxexp -> . expstruct
    (109) auxexp -> . exp
    (110) exp -> . LPAR exp RPAR
    (111) exp -> . expmath
    (112) exp -> . expop
    (113) exp -> . exprel
    (114) exp -> . exparr
    (115) exp -> . newarray
    (116) exp -> . expvec
    (117) exp -> . exparam
    (118) exp -> . exppow
    (119) exp -> . expcast
    (120) exp -> . lista_acc
    (121) exp -> . llamada
    (122) exp -> . sentencia
    (123) exp -> . valores
    (124) exp -> . exp PUNTO exp_native
    (125) expmath -> . exp MAS exp
    (126) expmath -> . exp MENOS exp
    (127) expmath -> . exp MULTIPLICACION exp
    (128) expmath -> . exp DIVISION exp
    (129) expmath -> . exp MODULO exp
    (130) expmath -> . MENOS exp
    (133) expop -> . exp AND exp
    (134) expop -> . exp OR exp
    (135) expop -> . AD exp
    (137) exprel -> . exp IGUALI exp
    (138) exprel -> . exp DIF exp
    (139) exprel -> . exp MAYOR exp
    (140) exprel -> . exp MENOR exp
    (141) exprel -> . exp MAYORI exp
    (142) exprel -> . exp MENORI exp
    (152) exparr -> . ID lista_arr
    (155) newarray -> . LCOR lista_exp RCOR
    (156) newarray -> . LCOR auxexp PCOMA exp RCOR
    (153) expvec -> . VEC AD newarray
    (154) expvec -> . VECTOR DPUNTOS DPUNTOS exp_natarr
    (148) exparam -> . MUT ID
    (149) exparam -> . MUT valores
    (150) exparam -> . ANDSINGLE MUT ID
    (151) exparam -> . ANDSINGLE MUT valores
    (131) exppow -> . I64 DPUNTOS DPUNTOS POW LPAR exp COMA exp RPAR
    (132) exppow -> . F64 DPUNTOS DPUNTOS POWF LPAR exp COMA exp RPAR
    (136) expcast -> . exp AS tipo_var
    (92) lista_acc -> . lista_acc PUNTO ID
    (93) lista_acc -> . lista_acc PUNTO exp_native
    (94) lista_acc -> . auxacc
    (157) valores -> . ENTERO
    (158) valores -> . DECIMAL
    (159) valores -> . CADENA
    (160) valores -> . BOOLEANO
    (161) valores -> . CARACTER
    (95) auxacc -> . exparr
    (96) auxacc -> . ID

    RLLAV           shift and go to state 238
    ID              shift and go to state 185
    PRINT           shift and go to state 11
    LET             shift and go to state 9
    CONTINUE        shift and go to state 189
    BREAK           shift and go to state 190
    RETURN          shift and go to state 191
    IF              shift and go to state 12
    MATCH           shift and go to state 64
    LOOP            shift and go to state 65
    WHILE           shift and go to state 13
    FOR             shift and go to state 66
    LPAR            shift and go to state 29
    MENOS           shift and go to state 43
    AD              shift and go to state 44
    LCOR            shift and go to state 46
    VEC             shift and go to state 47
    VECTOR          shift and go to state 48
    MUT             shift and go to state 49
    ANDSINGLE       shift and go to state 50
    I64             shift and go to state 51
    F64             shift and go to state 52
    ENTERO          shift and go to state 59
    DECIMAL         shift and go to state 60
    CADENA          shift and go to state 61
    BOOLEANO        shift and go to state 62
    CARACTER        shift and go to state 63

    instruccion_l                  shift and go to state 239
    print                          shift and go to state 180
    declaracion                    shift and go to state 181
    asignacion                     shift and go to state 182
    llamada                        shift and go to state 183
    expstruct                      shift and go to state 184
    sentencia                      shift and go to state 186
    transferencia                  shift and go to state 187
    auxexp                         shift and go to state 188
    lista_classtype                shift and go to state 76
    if                             shift and go to state 54
    match                          shift and go to state 55
    loop                           shift and go to state 56
    while                          shift and go to state 57
    for                            shift and go to state 58
    exp                            shift and go to state 75
    expmath                        shift and go to state 30
    expop                          shift and go to state 31
    exprel                         shift and go to state 32
    exparr                         shift and go to state 33
    newarray                       shift and go to state 34
    expvec                         shift and go to state 35
    exparam                        shift and go to state 36
    exppow                         shift and go to state 37
    expcast                        shift and go to state 38
    lista_acc                      shift and go to state 39
    valores                        shift and go to state 42
    auxacc                         shift and go to state 53

state 178

    (74) statement -> LLLAV RLLAV .

    ELSE            reduce using rule 74 (statement -> LLLAV RLLAV .)
    LET             reduce using rule 74 (statement -> LLLAV RLLAV .)
    ID              reduce using rule 74 (statement -> LLLAV RLLAV .)
    PRINT           reduce using rule 74 (statement -> LLLAV RLLAV .)
    IF              reduce using rule 74 (statement -> LLLAV RLLAV .)
    WHILE           reduce using rule 74 (statement -> LLLAV RLLAV .)
    $end            reduce using rule 74 (statement -> LLLAV RLLAV .)
    PUNTO           reduce using rule 74 (statement -> LLLAV RLLAV .)
    MAS             reduce using rule 74 (statement -> LLLAV RLLAV .)
    MENOS           reduce using rule 74 (statement -> LLLAV RLLAV .)
    MULTIPLICACION  reduce using rule 74 (statement -> LLLAV RLLAV .)
    DIVISION        reduce using rule 74 (statement -> LLLAV RLLAV .)
    MODULO          reduce using rule 74 (statement -> LLLAV RLLAV .)
    AND             reduce using rule 74 (statement -> LLLAV RLLAV .)
    OR              reduce using rule 74 (statement -> LLLAV RLLAV .)
    IGUALI          reduce using rule 74 (statement -> LLLAV RLLAV .)
    DIF             reduce using rule 74 (statement -> LLLAV RLLAV .)
    MAYOR           reduce using rule 74 (statement -> LLLAV RLLAV .)
    MENOR           reduce using rule 74 (statement -> LLLAV RLLAV .)
    MAYORI          reduce using rule 74 (statement -> LLLAV RLLAV .)
    MENORI          reduce using rule 74 (statement -> LLLAV RLLAV .)
    AS              reduce using rule 74 (statement -> LLLAV RLLAV .)
    LLLAV           reduce using rule 74 (statement -> LLLAV RLLAV .)
    PCOMA           reduce using rule 74 (statement -> LLLAV RLLAV .)
    COMA            reduce using rule 74 (statement -> LLLAV RLLAV .)
    RCOR            reduce using rule 74 (statement -> LLLAV RLLAV .)
    RPAR            reduce using rule 74 (statement -> LLLAV RLLAV .)
    RLLAV           reduce using rule 74 (statement -> LLLAV RLLAV .)
    CONTINUE        reduce using rule 74 (statement -> LLLAV RLLAV .)
    BREAK           reduce using rule 74 (statement -> LLLAV RLLAV .)
    RETURN          reduce using rule 74 (statement -> LLLAV RLLAV .)
    MATCH           reduce using rule 74 (statement -> LLLAV RLLAV .)
    LOOP            reduce using rule 74 (statement -> LLLAV RLLAV .)
    FOR             reduce using rule 74 (statement -> LLLAV RLLAV .)
    LPAR            reduce using rule 74 (statement -> LLLAV RLLAV .)
    AD              reduce using rule 74 (statement -> LLLAV RLLAV .)
    LCOR            reduce using rule 74 (statement -> LLLAV RLLAV .)
    VEC             reduce using rule 74 (statement -> LLLAV RLLAV .)
    VECTOR          reduce using rule 74 (statement -> LLLAV RLLAV .)
    MUT             reduce using rule 74 (statement -> LLLAV RLLAV .)
    ANDSINGLE       reduce using rule 74 (statement -> LLLAV RLLAV .)
    I64             reduce using rule 74 (statement -> LLLAV RLLAV .)
    F64             reduce using rule 74 (statement -> LLLAV RLLAV .)
    ENTERO          reduce using rule 74 (statement -> LLLAV RLLAV .)
    DECIMAL         reduce using rule 74 (statement -> LLLAV RLLAV .)
    CADENA          reduce using rule 74 (statement -> LLLAV RLLAV .)
    BOOLEANO        reduce using rule 74 (statement -> LLLAV RLLAV .)
    CARACTER        reduce using rule 74 (statement -> LLLAV RLLAV .)
    ARROW2          reduce using rule 74 (statement -> LLLAV RLLAV .)
    ORSINGLE        reduce using rule 74 (statement -> LLLAV RLLAV .)


state 179

    (10) instrucciones_l -> instruccion_l .

    RLLAV           reduce using rule 10 (instrucciones_l -> instruccion_l .)
    ID              reduce using rule 10 (instrucciones_l -> instruccion_l .)
    PRINT           reduce using rule 10 (instrucciones_l -> instruccion_l .)
    LET             reduce using rule 10 (instrucciones_l -> instruccion_l .)
    CONTINUE        reduce using rule 10 (instrucciones_l -> instruccion_l .)
    BREAK           reduce using rule 10 (instrucciones_l -> instruccion_l .)
    RETURN          reduce using rule 10 (instrucciones_l -> instruccion_l .)
    IF              reduce using rule 10 (instrucciones_l -> instruccion_l .)
    MATCH           reduce using rule 10 (instrucciones_l -> instruccion_l .)
    LOOP            reduce using rule 10 (instrucciones_l -> instruccion_l .)
    WHILE           reduce using rule 10 (instrucciones_l -> instruccion_l .)
    FOR             reduce using rule 10 (instrucciones_l -> instruccion_l .)
    LPAR            reduce using rule 10 (instrucciones_l -> instruccion_l .)
    MENOS           reduce using rule 10 (instrucciones_l -> instruccion_l .)
    AD              reduce using rule 10 (instrucciones_l -> instruccion_l .)
    LCOR            reduce using rule 10 (instrucciones_l -> instruccion_l .)
    VEC             reduce using rule 10 (instrucciones_l -> instruccion_l .)
    VECTOR          reduce using rule 10 (instrucciones_l -> instruccion_l .)
    MUT             reduce using rule 10 (instrucciones_l -> instruccion_l .)
    ANDSINGLE       reduce using rule 10 (instrucciones_l -> instruccion_l .)
    I64             reduce using rule 10 (instrucciones_l -> instruccion_l .)
    F64             reduce using rule 10 (instrucciones_l -> instruccion_l .)
    ENTERO          reduce using rule 10 (instrucciones_l -> instruccion_l .)
    DECIMAL         reduce using rule 10 (instrucciones_l -> instruccion_l .)
    CADENA          reduce using rule 10 (instrucciones_l -> instruccion_l .)
    BOOLEANO        reduce using rule 10 (instrucciones_l -> instruccion_l .)
    CARACTER        reduce using rule 10 (instrucciones_l -> instruccion_l .)


state 180

    (11) instruccion_l -> print . PCOMA

    PCOMA           shift and go to state 240


state 181

    (12) instruccion_l -> declaracion . PCOMA

    PCOMA           shift and go to state 241


state 182

    (13) instruccion_l -> asignacion . PCOMA

    PCOMA           shift and go to state 242


state 183

    (14) instruccion_l -> llamada . PCOMA
    (121) exp -> llamada .

  ! shift/reduce conflict for PCOMA resolved as shift
    PCOMA           shift and go to state 243
    PUNTO           reduce using rule 121 (exp -> llamada .)
    MAS             reduce using rule 121 (exp -> llamada .)
    MENOS           reduce using rule 121 (exp -> llamada .)
    MULTIPLICACION  reduce using rule 121 (exp -> llamada .)
    DIVISION        reduce using rule 121 (exp -> llamada .)
    MODULO          reduce using rule 121 (exp -> llamada .)
    AND             reduce using rule 121 (exp -> llamada .)
    OR              reduce using rule 121 (exp -> llamada .)
    IGUALI          reduce using rule 121 (exp -> llamada .)
    DIF             reduce using rule 121 (exp -> llamada .)
    MAYOR           reduce using rule 121 (exp -> llamada .)
    MENOR           reduce using rule 121 (exp -> llamada .)
    MAYORI          reduce using rule 121 (exp -> llamada .)
    MENORI          reduce using rule 121 (exp -> llamada .)
    AS              reduce using rule 121 (exp -> llamada .)
    RLLAV           reduce using rule 121 (exp -> llamada .)
    ID              reduce using rule 121 (exp -> llamada .)
    PRINT           reduce using rule 121 (exp -> llamada .)
    LET             reduce using rule 121 (exp -> llamada .)
    CONTINUE        reduce using rule 121 (exp -> llamada .)
    BREAK           reduce using rule 121 (exp -> llamada .)
    RETURN          reduce using rule 121 (exp -> llamada .)
    IF              reduce using rule 121 (exp -> llamada .)
    MATCH           reduce using rule 121 (exp -> llamada .)
    LOOP            reduce using rule 121 (exp -> llamada .)
    WHILE           reduce using rule 121 (exp -> llamada .)
    FOR             reduce using rule 121 (exp -> llamada .)
    LPAR            reduce using rule 121 (exp -> llamada .)
    AD              reduce using rule 121 (exp -> llamada .)
    LCOR            reduce using rule 121 (exp -> llamada .)
    VEC             reduce using rule 121 (exp -> llamada .)
    VECTOR          reduce using rule 121 (exp -> llamada .)
    MUT             reduce using rule 121 (exp -> llamada .)
    ANDSINGLE       reduce using rule 121 (exp -> llamada .)
    I64             reduce using rule 121 (exp -> llamada .)
    F64             reduce using rule 121 (exp -> llamada .)
    ENTERO          reduce using rule 121 (exp -> llamada .)
    DECIMAL         reduce using rule 121 (exp -> llamada .)
    CADENA          reduce using rule 121 (exp -> llamada .)
    BOOLEANO        reduce using rule 121 (exp -> llamada .)
    CARACTER        reduce using rule 121 (exp -> llamada .)

  ! PCOMA           [ reduce using rule 121 (exp -> llamada .) ]


state 184

    (15) instruccion_l -> expstruct . PCOMA
    (108) auxexp -> expstruct .

  ! shift/reduce conflict for PCOMA resolved as shift
    PCOMA           shift and go to state 244
    RLLAV           reduce using rule 108 (auxexp -> expstruct .)
    ID              reduce using rule 108 (auxexp -> expstruct .)
    PRINT           reduce using rule 108 (auxexp -> expstruct .)
    LET             reduce using rule 108 (auxexp -> expstruct .)
    CONTINUE        reduce using rule 108 (auxexp -> expstruct .)
    BREAK           reduce using rule 108 (auxexp -> expstruct .)
    RETURN          reduce using rule 108 (auxexp -> expstruct .)
    IF              reduce using rule 108 (auxexp -> expstruct .)
    MATCH           reduce using rule 108 (auxexp -> expstruct .)
    LOOP            reduce using rule 108 (auxexp -> expstruct .)
    WHILE           reduce using rule 108 (auxexp -> expstruct .)
    FOR             reduce using rule 108 (auxexp -> expstruct .)
    LPAR            reduce using rule 108 (auxexp -> expstruct .)
    MENOS           reduce using rule 108 (auxexp -> expstruct .)
    AD              reduce using rule 108 (auxexp -> expstruct .)
    LCOR            reduce using rule 108 (auxexp -> expstruct .)
    VEC             reduce using rule 108 (auxexp -> expstruct .)
    VECTOR          reduce using rule 108 (auxexp -> expstruct .)
    MUT             reduce using rule 108 (auxexp -> expstruct .)
    ANDSINGLE       reduce using rule 108 (auxexp -> expstruct .)
    I64             reduce using rule 108 (auxexp -> expstruct .)
    F64             reduce using rule 108 (auxexp -> expstruct .)
    ENTERO          reduce using rule 108 (auxexp -> expstruct .)
    DECIMAL         reduce using rule 108 (auxexp -> expstruct .)
    CADENA          reduce using rule 108 (auxexp -> expstruct .)
    BOOLEANO        reduce using rule 108 (auxexp -> expstruct .)
    CARACTER        reduce using rule 108 (auxexp -> expstruct .)

  ! PCOMA           [ reduce using rule 108 (auxexp -> expstruct .) ]


state 185

    (16) instruccion_l -> ID . PUNTO exp_native PCOMA
    (84) asignacion -> ID . IGUAL auxexp
    (85) asignacion -> ID . lista_assign2 IGUAL auxexp
    (86) asignacion -> ID . lista_arr IGUAL auxexp
    (87) asignacion -> ID . lista_arr lista_assign2 IGUAL auxexp
    (176) llamada -> ID . LPAR RPAR
    (177) llamada -> ID . LPAR lista_exp RPAR
    (175) lista_classtype -> ID .
    (152) exparr -> ID . lista_arr
    (96) auxacc -> ID .
    (88) lista_assign2 -> . lista_assign2 PUNTO ID
    (89) lista_assign2 -> . PUNTO ID
    (97) lista_arr -> . lista_arr LCOR auxexp RCOR
    (98) lista_arr -> . LCOR auxexp RCOR

  ! shift/reduce conflict for PUNTO resolved as shift
  ! shift/reduce conflict for LPAR resolved as shift
  ! shift/reduce conflict for LCOR resolved as shift
    PUNTO           shift and go to state 245
    IGUAL           shift and go to state 22
    LPAR            shift and go to state 107
    LLLAV           reduce using rule 175 (lista_classtype -> ID .)
    DPUNTOS         reduce using rule 175 (lista_classtype -> ID .)
    MAS             reduce using rule 96 (auxacc -> ID .)
    MENOS           reduce using rule 96 (auxacc -> ID .)
    MULTIPLICACION  reduce using rule 96 (auxacc -> ID .)
    DIVISION        reduce using rule 96 (auxacc -> ID .)
    MODULO          reduce using rule 96 (auxacc -> ID .)
    AND             reduce using rule 96 (auxacc -> ID .)
    OR              reduce using rule 96 (auxacc -> ID .)
    IGUALI          reduce using rule 96 (auxacc -> ID .)
    DIF             reduce using rule 96 (auxacc -> ID .)
    MAYOR           reduce using rule 96 (auxacc -> ID .)
    MENOR           reduce using rule 96 (auxacc -> ID .)
    MAYORI          reduce using rule 96 (auxacc -> ID .)
    MENORI          reduce using rule 96 (auxacc -> ID .)
    AS              reduce using rule 96 (auxacc -> ID .)
    PCOMA           reduce using rule 96 (auxacc -> ID .)
    RLLAV           reduce using rule 96 (auxacc -> ID .)
    ID              reduce using rule 96 (auxacc -> ID .)
    PRINT           reduce using rule 96 (auxacc -> ID .)
    LET             reduce using rule 96 (auxacc -> ID .)
    CONTINUE        reduce using rule 96 (auxacc -> ID .)
    BREAK           reduce using rule 96 (auxacc -> ID .)
    RETURN          reduce using rule 96 (auxacc -> ID .)
    IF              reduce using rule 96 (auxacc -> ID .)
    MATCH           reduce using rule 96 (auxacc -> ID .)
    LOOP            reduce using rule 96 (auxacc -> ID .)
    WHILE           reduce using rule 96 (auxacc -> ID .)
    FOR             reduce using rule 96 (auxacc -> ID .)
    AD              reduce using rule 96 (auxacc -> ID .)
    VEC             reduce using rule 96 (auxacc -> ID .)
    VECTOR          reduce using rule 96 (auxacc -> ID .)
    MUT             reduce using rule 96 (auxacc -> ID .)
    ANDSINGLE       reduce using rule 96 (auxacc -> ID .)
    I64             reduce using rule 96 (auxacc -> ID .)
    F64             reduce using rule 96 (auxacc -> ID .)
    ENTERO          reduce using rule 96 (auxacc -> ID .)
    DECIMAL         reduce using rule 96 (auxacc -> ID .)
    CADENA          reduce using rule 96 (auxacc -> ID .)
    BOOLEANO        reduce using rule 96 (auxacc -> ID .)
    CARACTER        reduce using rule 96 (auxacc -> ID .)
    LCOR            shift and go to state 26

  ! PUNTO           [ reduce using rule 96 (auxacc -> ID .) ]
  ! LPAR            [ reduce using rule 96 (auxacc -> ID .) ]
  ! LCOR            [ reduce using rule 96 (auxacc -> ID .) ]

    lista_assign2                  shift and go to state 23
    lista_arr                      shift and go to state 246

state 186

    (17) instruccion_l -> sentencia .
    (122) exp -> sentencia .

  ! reduce/reduce conflict for MENOS resolved using rule 17 (instruccion_l -> sentencia .)
  ! reduce/reduce conflict for RLLAV resolved using rule 17 (instruccion_l -> sentencia .)
  ! reduce/reduce conflict for ID resolved using rule 17 (instruccion_l -> sentencia .)
  ! reduce/reduce conflict for PRINT resolved using rule 17 (instruccion_l -> sentencia .)
  ! reduce/reduce conflict for LET resolved using rule 17 (instruccion_l -> sentencia .)
  ! reduce/reduce conflict for CONTINUE resolved using rule 17 (instruccion_l -> sentencia .)
  ! reduce/reduce conflict for BREAK resolved using rule 17 (instruccion_l -> sentencia .)
  ! reduce/reduce conflict for RETURN resolved using rule 17 (instruccion_l -> sentencia .)
  ! reduce/reduce conflict for IF resolved using rule 17 (instruccion_l -> sentencia .)
  ! reduce/reduce conflict for MATCH resolved using rule 17 (instruccion_l -> sentencia .)
  ! reduce/reduce conflict for LOOP resolved using rule 17 (instruccion_l -> sentencia .)
  ! reduce/reduce conflict for WHILE resolved using rule 17 (instruccion_l -> sentencia .)
  ! reduce/reduce conflict for FOR resolved using rule 17 (instruccion_l -> sentencia .)
  ! reduce/reduce conflict for LPAR resolved using rule 17 (instruccion_l -> sentencia .)
  ! reduce/reduce conflict for AD resolved using rule 17 (instruccion_l -> sentencia .)
  ! reduce/reduce conflict for LCOR resolved using rule 17 (instruccion_l -> sentencia .)
  ! reduce/reduce conflict for VEC resolved using rule 17 (instruccion_l -> sentencia .)
  ! reduce/reduce conflict for VECTOR resolved using rule 17 (instruccion_l -> sentencia .)
  ! reduce/reduce conflict for MUT resolved using rule 17 (instruccion_l -> sentencia .)
  ! reduce/reduce conflict for ANDSINGLE resolved using rule 17 (instruccion_l -> sentencia .)
  ! reduce/reduce conflict for I64 resolved using rule 17 (instruccion_l -> sentencia .)
  ! reduce/reduce conflict for F64 resolved using rule 17 (instruccion_l -> sentencia .)
  ! reduce/reduce conflict for ENTERO resolved using rule 17 (instruccion_l -> sentencia .)
  ! reduce/reduce conflict for DECIMAL resolved using rule 17 (instruccion_l -> sentencia .)
  ! reduce/reduce conflict for CADENA resolved using rule 17 (instruccion_l -> sentencia .)
  ! reduce/reduce conflict for BOOLEANO resolved using rule 17 (instruccion_l -> sentencia .)
  ! reduce/reduce conflict for CARACTER resolved using rule 17 (instruccion_l -> sentencia .)
    RLLAV           reduce using rule 17 (instruccion_l -> sentencia .)
    ID              reduce using rule 17 (instruccion_l -> sentencia .)
    PRINT           reduce using rule 17 (instruccion_l -> sentencia .)
    LET             reduce using rule 17 (instruccion_l -> sentencia .)
    CONTINUE        reduce using rule 17 (instruccion_l -> sentencia .)
    BREAK           reduce using rule 17 (instruccion_l -> sentencia .)
    RETURN          reduce using rule 17 (instruccion_l -> sentencia .)
    IF              reduce using rule 17 (instruccion_l -> sentencia .)
    MATCH           reduce using rule 17 (instruccion_l -> sentencia .)
    LOOP            reduce using rule 17 (instruccion_l -> sentencia .)
    WHILE           reduce using rule 17 (instruccion_l -> sentencia .)
    FOR             reduce using rule 17 (instruccion_l -> sentencia .)
    LPAR            reduce using rule 17 (instruccion_l -> sentencia .)
    MENOS           reduce using rule 17 (instruccion_l -> sentencia .)
    AD              reduce using rule 17 (instruccion_l -> sentencia .)
    LCOR            reduce using rule 17 (instruccion_l -> sentencia .)
    VEC             reduce using rule 17 (instruccion_l -> sentencia .)
    VECTOR          reduce using rule 17 (instruccion_l -> sentencia .)
    MUT             reduce using rule 17 (instruccion_l -> sentencia .)
    ANDSINGLE       reduce using rule 17 (instruccion_l -> sentencia .)
    I64             reduce using rule 17 (instruccion_l -> sentencia .)
    F64             reduce using rule 17 (instruccion_l -> sentencia .)
    ENTERO          reduce using rule 17 (instruccion_l -> sentencia .)
    DECIMAL         reduce using rule 17 (instruccion_l -> sentencia .)
    CADENA          reduce using rule 17 (instruccion_l -> sentencia .)
    BOOLEANO        reduce using rule 17 (instruccion_l -> sentencia .)
    CARACTER        reduce using rule 17 (instruccion_l -> sentencia .)
    PUNTO           reduce using rule 122 (exp -> sentencia .)
    MAS             reduce using rule 122 (exp -> sentencia .)
    MULTIPLICACION  reduce using rule 122 (exp -> sentencia .)
    DIVISION        reduce using rule 122 (exp -> sentencia .)
    MODULO          reduce using rule 122 (exp -> sentencia .)
    AND             reduce using rule 122 (exp -> sentencia .)
    OR              reduce using rule 122 (exp -> sentencia .)
    IGUALI          reduce using rule 122 (exp -> sentencia .)
    DIF             reduce using rule 122 (exp -> sentencia .)
    MAYOR           reduce using rule 122 (exp -> sentencia .)
    MENOR           reduce using rule 122 (exp -> sentencia .)
    MAYORI          reduce using rule 122 (exp -> sentencia .)
    MENORI          reduce using rule 122 (exp -> sentencia .)
    AS              reduce using rule 122 (exp -> sentencia .)
    PCOMA           reduce using rule 122 (exp -> sentencia .)

  ! MENOS           [ reduce using rule 122 (exp -> sentencia .) ]
  ! RLLAV           [ reduce using rule 122 (exp -> sentencia .) ]
  ! ID              [ reduce using rule 122 (exp -> sentencia .) ]
  ! PRINT           [ reduce using rule 122 (exp -> sentencia .) ]
  ! LET             [ reduce using rule 122 (exp -> sentencia .) ]
  ! CONTINUE        [ reduce using rule 122 (exp -> sentencia .) ]
  ! BREAK           [ reduce using rule 122 (exp -> sentencia .) ]
  ! RETURN          [ reduce using rule 122 (exp -> sentencia .) ]
  ! IF              [ reduce using rule 122 (exp -> sentencia .) ]
  ! MATCH           [ reduce using rule 122 (exp -> sentencia .) ]
  ! LOOP            [ reduce using rule 122 (exp -> sentencia .) ]
  ! WHILE           [ reduce using rule 122 (exp -> sentencia .) ]
  ! FOR             [ reduce using rule 122 (exp -> sentencia .) ]
  ! LPAR            [ reduce using rule 122 (exp -> sentencia .) ]
  ! AD              [ reduce using rule 122 (exp -> sentencia .) ]
  ! LCOR            [ reduce using rule 122 (exp -> sentencia .) ]
  ! VEC             [ reduce using rule 122 (exp -> sentencia .) ]
  ! VECTOR          [ reduce using rule 122 (exp -> sentencia .) ]
  ! MUT             [ reduce using rule 122 (exp -> sentencia .) ]
  ! ANDSINGLE       [ reduce using rule 122 (exp -> sentencia .) ]
  ! I64             [ reduce using rule 122 (exp -> sentencia .) ]
  ! F64             [ reduce using rule 122 (exp -> sentencia .) ]
  ! ENTERO          [ reduce using rule 122 (exp -> sentencia .) ]
  ! DECIMAL         [ reduce using rule 122 (exp -> sentencia .) ]
  ! CADENA          [ reduce using rule 122 (exp -> sentencia .) ]
  ! BOOLEANO        [ reduce using rule 122 (exp -> sentencia .) ]
  ! CARACTER        [ reduce using rule 122 (exp -> sentencia .) ]


state 187

    (18) instruccion_l -> transferencia .
    (19) instruccion_l -> transferencia . PCOMA

    RLLAV           reduce using rule 18 (instruccion_l -> transferencia .)
    ID              reduce using rule 18 (instruccion_l -> transferencia .)
    PRINT           reduce using rule 18 (instruccion_l -> transferencia .)
    LET             reduce using rule 18 (instruccion_l -> transferencia .)
    CONTINUE        reduce using rule 18 (instruccion_l -> transferencia .)
    BREAK           reduce using rule 18 (instruccion_l -> transferencia .)
    RETURN          reduce using rule 18 (instruccion_l -> transferencia .)
    IF              reduce using rule 18 (instruccion_l -> transferencia .)
    MATCH           reduce using rule 18 (instruccion_l -> transferencia .)
    LOOP            reduce using rule 18 (instruccion_l -> transferencia .)
    WHILE           reduce using rule 18 (instruccion_l -> transferencia .)
    FOR             reduce using rule 18 (instruccion_l -> transferencia .)
    LPAR            reduce using rule 18 (instruccion_l -> transferencia .)
    MENOS           reduce using rule 18 (instruccion_l -> transferencia .)
    AD              reduce using rule 18 (instruccion_l -> transferencia .)
    LCOR            reduce using rule 18 (instruccion_l -> transferencia .)
    VEC             reduce using rule 18 (instruccion_l -> transferencia .)
    VECTOR          reduce using rule 18 (instruccion_l -> transferencia .)
    MUT             reduce using rule 18 (instruccion_l -> transferencia .)
    ANDSINGLE       reduce using rule 18 (instruccion_l -> transferencia .)
    I64             reduce using rule 18 (instruccion_l -> transferencia .)
    F64             reduce using rule 18 (instruccion_l -> transferencia .)
    ENTERO          reduce using rule 18 (instruccion_l -> transferencia .)
    DECIMAL         reduce using rule 18 (instruccion_l -> transferencia .)
    CADENA          reduce using rule 18 (instruccion_l -> transferencia .)
    BOOLEANO        reduce using rule 18 (instruccion_l -> transferencia .)
    CARACTER        reduce using rule 18 (instruccion_l -> transferencia .)
    PCOMA           shift and go to state 247


state 188

    (72) transferencia -> auxexp .

    PCOMA           reduce using rule 72 (transferencia -> auxexp .)
    RLLAV           reduce using rule 72 (transferencia -> auxexp .)
    ID              reduce using rule 72 (transferencia -> auxexp .)
    PRINT           reduce using rule 72 (transferencia -> auxexp .)
    LET             reduce using rule 72 (transferencia -> auxexp .)
    CONTINUE        reduce using rule 72 (transferencia -> auxexp .)
    BREAK           reduce using rule 72 (transferencia -> auxexp .)
    RETURN          reduce using rule 72 (transferencia -> auxexp .)
    IF              reduce using rule 72 (transferencia -> auxexp .)
    MATCH           reduce using rule 72 (transferencia -> auxexp .)
    LOOP            reduce using rule 72 (transferencia -> auxexp .)
    WHILE           reduce using rule 72 (transferencia -> auxexp .)
    FOR             reduce using rule 72 (transferencia -> auxexp .)
    LPAR            reduce using rule 72 (transferencia -> auxexp .)
    MENOS           reduce using rule 72 (transferencia -> auxexp .)
    AD              reduce using rule 72 (transferencia -> auxexp .)
    LCOR            reduce using rule 72 (transferencia -> auxexp .)
    VEC             reduce using rule 72 (transferencia -> auxexp .)
    VECTOR          reduce using rule 72 (transferencia -> auxexp .)
    MUT             reduce using rule 72 (transferencia -> auxexp .)
    ANDSINGLE       reduce using rule 72 (transferencia -> auxexp .)
    I64             reduce using rule 72 (transferencia -> auxexp .)
    F64             reduce using rule 72 (transferencia -> auxexp .)
    ENTERO          reduce using rule 72 (transferencia -> auxexp .)
    DECIMAL         reduce using rule 72 (transferencia -> auxexp .)
    CADENA          reduce using rule 72 (transferencia -> auxexp .)
    BOOLEANO        reduce using rule 72 (transferencia -> auxexp .)
    CARACTER        reduce using rule 72 (transferencia -> auxexp .)
    COMA            reduce using rule 72 (transferencia -> auxexp .)


state 189

    (67) transferencia -> CONTINUE .

    PCOMA           reduce using rule 67 (transferencia -> CONTINUE .)
    RLLAV           reduce using rule 67 (transferencia -> CONTINUE .)
    ID              reduce using rule 67 (transferencia -> CONTINUE .)
    PRINT           reduce using rule 67 (transferencia -> CONTINUE .)
    LET             reduce using rule 67 (transferencia -> CONTINUE .)
    CONTINUE        reduce using rule 67 (transferencia -> CONTINUE .)
    BREAK           reduce using rule 67 (transferencia -> CONTINUE .)
    RETURN          reduce using rule 67 (transferencia -> CONTINUE .)
    IF              reduce using rule 67 (transferencia -> CONTINUE .)
    MATCH           reduce using rule 67 (transferencia -> CONTINUE .)
    LOOP            reduce using rule 67 (transferencia -> CONTINUE .)
    WHILE           reduce using rule 67 (transferencia -> CONTINUE .)
    FOR             reduce using rule 67 (transferencia -> CONTINUE .)
    LPAR            reduce using rule 67 (transferencia -> CONTINUE .)
    MENOS           reduce using rule 67 (transferencia -> CONTINUE .)
    AD              reduce using rule 67 (transferencia -> CONTINUE .)
    LCOR            reduce using rule 67 (transferencia -> CONTINUE .)
    VEC             reduce using rule 67 (transferencia -> CONTINUE .)
    VECTOR          reduce using rule 67 (transferencia -> CONTINUE .)
    MUT             reduce using rule 67 (transferencia -> CONTINUE .)
    ANDSINGLE       reduce using rule 67 (transferencia -> CONTINUE .)
    I64             reduce using rule 67 (transferencia -> CONTINUE .)
    F64             reduce using rule 67 (transferencia -> CONTINUE .)
    ENTERO          reduce using rule 67 (transferencia -> CONTINUE .)
    DECIMAL         reduce using rule 67 (transferencia -> CONTINUE .)
    CADENA          reduce using rule 67 (transferencia -> CONTINUE .)
    BOOLEANO        reduce using rule 67 (transferencia -> CONTINUE .)
    CARACTER        reduce using rule 67 (transferencia -> CONTINUE .)
    COMA            reduce using rule 67 (transferencia -> CONTINUE .)


state 190

    (68) transferencia -> BREAK .
    (69) transferencia -> BREAK . auxexp
    (108) auxexp -> . expstruct
    (109) auxexp -> . exp
    (143) expstruct -> . lista_classtype LLLAV lista_att RLLAV
    (144) expstruct -> . lista_classtype LLLAV RLLAV
    (145) expstruct -> . lista_classtype DPUNTOS DPUNTOS llamada
    (110) exp -> . LPAR exp RPAR
    (111) exp -> . expmath
    (112) exp -> . expop
    (113) exp -> . exprel
    (114) exp -> . exparr
    (115) exp -> . newarray
    (116) exp -> . expvec
    (117) exp -> . exparam
    (118) exp -> . exppow
    (119) exp -> . expcast
    (120) exp -> . lista_acc
    (121) exp -> . llamada
    (122) exp -> . sentencia
    (123) exp -> . valores
    (124) exp -> . exp PUNTO exp_native
    (174) lista_classtype -> . lista_classtype DPUNTOS DPUNTOS ID
    (175) lista_classtype -> . ID
    (125) expmath -> . exp MAS exp
    (126) expmath -> . exp MENOS exp
    (127) expmath -> . exp MULTIPLICACION exp
    (128) expmath -> . exp DIVISION exp
    (129) expmath -> . exp MODULO exp
    (130) expmath -> . MENOS exp
    (133) expop -> . exp AND exp
    (134) expop -> . exp OR exp
    (135) expop -> . AD exp
    (137) exprel -> . exp IGUALI exp
    (138) exprel -> . exp DIF exp
    (139) exprel -> . exp MAYOR exp
    (140) exprel -> . exp MENOR exp
    (141) exprel -> . exp MAYORI exp
    (142) exprel -> . exp MENORI exp
    (152) exparr -> . ID lista_arr
    (155) newarray -> . LCOR lista_exp RCOR
    (156) newarray -> . LCOR auxexp PCOMA exp RCOR
    (153) expvec -> . VEC AD newarray
    (154) expvec -> . VECTOR DPUNTOS DPUNTOS exp_natarr
    (148) exparam -> . MUT ID
    (149) exparam -> . MUT valores
    (150) exparam -> . ANDSINGLE MUT ID
    (151) exparam -> . ANDSINGLE MUT valores
    (131) exppow -> . I64 DPUNTOS DPUNTOS POW LPAR exp COMA exp RPAR
    (132) exppow -> . F64 DPUNTOS DPUNTOS POWF LPAR exp COMA exp RPAR
    (136) expcast -> . exp AS tipo_var
    (92) lista_acc -> . lista_acc PUNTO ID
    (93) lista_acc -> . lista_acc PUNTO exp_native
    (94) lista_acc -> . auxacc
    (176) llamada -> . ID LPAR RPAR
    (177) llamada -> . ID LPAR lista_exp RPAR
    (37) sentencia -> . if
    (38) sentencia -> . match
    (39) sentencia -> . loop
    (40) sentencia -> . while
    (41) sentencia -> . for
    (157) valores -> . ENTERO
    (158) valores -> . DECIMAL
    (159) valores -> . CADENA
    (160) valores -> . BOOLEANO
    (161) valores -> . CARACTER
    (95) auxacc -> . exparr
    (96) auxacc -> . ID
    (42) if -> . IF exp statement else
    (47) match -> . MATCH exp match_statement
    (62) loop -> . LOOP statement
    (63) while -> . WHILE exp statement
    (64) for -> . FOR ID IN foriterative statement

  ! shift/reduce conflict for LPAR resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for MENOS resolved as shift
  ! shift/reduce conflict for AD resolved as shift
  ! shift/reduce conflict for LCOR resolved as shift
  ! shift/reduce conflict for VEC resolved as shift
  ! shift/reduce conflict for VECTOR resolved as shift
  ! shift/reduce conflict for MUT resolved as shift
  ! shift/reduce conflict for ANDSINGLE resolved as shift
  ! shift/reduce conflict for I64 resolved as shift
  ! shift/reduce conflict for F64 resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for DECIMAL resolved as shift
  ! shift/reduce conflict for CADENA resolved as shift
  ! shift/reduce conflict for BOOLEANO resolved as shift
  ! shift/reduce conflict for CARACTER resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for MATCH resolved as shift
  ! shift/reduce conflict for LOOP resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
    PCOMA           reduce using rule 68 (transferencia -> BREAK .)
    RLLAV           reduce using rule 68 (transferencia -> BREAK .)
    PRINT           reduce using rule 68 (transferencia -> BREAK .)
    LET             reduce using rule 68 (transferencia -> BREAK .)
    CONTINUE        reduce using rule 68 (transferencia -> BREAK .)
    BREAK           reduce using rule 68 (transferencia -> BREAK .)
    RETURN          reduce using rule 68 (transferencia -> BREAK .)
    COMA            reduce using rule 68 (transferencia -> BREAK .)
    LPAR            shift and go to state 29
    ID              shift and go to state 72
    MENOS           shift and go to state 43
    AD              shift and go to state 44
    LCOR            shift and go to state 46
    VEC             shift and go to state 47
    VECTOR          shift and go to state 48
    MUT             shift and go to state 49
    ANDSINGLE       shift and go to state 50
    I64             shift and go to state 51
    F64             shift and go to state 52
    ENTERO          shift and go to state 59
    DECIMAL         shift and go to state 60
    CADENA          shift and go to state 61
    BOOLEANO        shift and go to state 62
    CARACTER        shift and go to state 63
    IF              shift and go to state 12
    MATCH           shift and go to state 64
    LOOP            shift and go to state 65
    WHILE           shift and go to state 13
    FOR             shift and go to state 66

  ! ID              [ reduce using rule 68 (transferencia -> BREAK .) ]
  ! IF              [ reduce using rule 68 (transferencia -> BREAK .) ]
  ! MATCH           [ reduce using rule 68 (transferencia -> BREAK .) ]
  ! LOOP            [ reduce using rule 68 (transferencia -> BREAK .) ]
  ! WHILE           [ reduce using rule 68 (transferencia -> BREAK .) ]
  ! FOR             [ reduce using rule 68 (transferencia -> BREAK .) ]
  ! LPAR            [ reduce using rule 68 (transferencia -> BREAK .) ]
  ! MENOS           [ reduce using rule 68 (transferencia -> BREAK .) ]
  ! AD              [ reduce using rule 68 (transferencia -> BREAK .) ]
  ! LCOR            [ reduce using rule 68 (transferencia -> BREAK .) ]
  ! VEC             [ reduce using rule 68 (transferencia -> BREAK .) ]
  ! VECTOR          [ reduce using rule 68 (transferencia -> BREAK .) ]
  ! MUT             [ reduce using rule 68 (transferencia -> BREAK .) ]
  ! ANDSINGLE       [ reduce using rule 68 (transferencia -> BREAK .) ]
  ! I64             [ reduce using rule 68 (transferencia -> BREAK .) ]
  ! F64             [ reduce using rule 68 (transferencia -> BREAK .) ]
  ! ENTERO          [ reduce using rule 68 (transferencia -> BREAK .) ]
  ! DECIMAL         [ reduce using rule 68 (transferencia -> BREAK .) ]
  ! CADENA          [ reduce using rule 68 (transferencia -> BREAK .) ]
  ! BOOLEANO        [ reduce using rule 68 (transferencia -> BREAK .) ]
  ! CARACTER        [ reduce using rule 68 (transferencia -> BREAK .) ]

    auxexp                         shift and go to state 248
    expstruct                      shift and go to state 74
    exp                            shift and go to state 75
    lista_classtype                shift and go to state 76
    llamada                        shift and go to state 40
    expmath                        shift and go to state 30
    expop                          shift and go to state 31
    exprel                         shift and go to state 32
    exparr                         shift and go to state 33
    newarray                       shift and go to state 34
    expvec                         shift and go to state 35
    exparam                        shift and go to state 36
    exppow                         shift and go to state 37
    expcast                        shift and go to state 38
    lista_acc                      shift and go to state 39
    sentencia                      shift and go to state 41
    valores                        shift and go to state 42
    auxacc                         shift and go to state 53
    if                             shift and go to state 54
    match                          shift and go to state 55
    loop                           shift and go to state 56
    while                          shift and go to state 57
    for                            shift and go to state 58

state 191

    (70) transferencia -> RETURN .
    (71) transferencia -> RETURN . auxexp
    (108) auxexp -> . expstruct
    (109) auxexp -> . exp
    (143) expstruct -> . lista_classtype LLLAV lista_att RLLAV
    (144) expstruct -> . lista_classtype LLLAV RLLAV
    (145) expstruct -> . lista_classtype DPUNTOS DPUNTOS llamada
    (110) exp -> . LPAR exp RPAR
    (111) exp -> . expmath
    (112) exp -> . expop
    (113) exp -> . exprel
    (114) exp -> . exparr
    (115) exp -> . newarray
    (116) exp -> . expvec
    (117) exp -> . exparam
    (118) exp -> . exppow
    (119) exp -> . expcast
    (120) exp -> . lista_acc
    (121) exp -> . llamada
    (122) exp -> . sentencia
    (123) exp -> . valores
    (124) exp -> . exp PUNTO exp_native
    (174) lista_classtype -> . lista_classtype DPUNTOS DPUNTOS ID
    (175) lista_classtype -> . ID
    (125) expmath -> . exp MAS exp
    (126) expmath -> . exp MENOS exp
    (127) expmath -> . exp MULTIPLICACION exp
    (128) expmath -> . exp DIVISION exp
    (129) expmath -> . exp MODULO exp
    (130) expmath -> . MENOS exp
    (133) expop -> . exp AND exp
    (134) expop -> . exp OR exp
    (135) expop -> . AD exp
    (137) exprel -> . exp IGUALI exp
    (138) exprel -> . exp DIF exp
    (139) exprel -> . exp MAYOR exp
    (140) exprel -> . exp MENOR exp
    (141) exprel -> . exp MAYORI exp
    (142) exprel -> . exp MENORI exp
    (152) exparr -> . ID lista_arr
    (155) newarray -> . LCOR lista_exp RCOR
    (156) newarray -> . LCOR auxexp PCOMA exp RCOR
    (153) expvec -> . VEC AD newarray
    (154) expvec -> . VECTOR DPUNTOS DPUNTOS exp_natarr
    (148) exparam -> . MUT ID
    (149) exparam -> . MUT valores
    (150) exparam -> . ANDSINGLE MUT ID
    (151) exparam -> . ANDSINGLE MUT valores
    (131) exppow -> . I64 DPUNTOS DPUNTOS POW LPAR exp COMA exp RPAR
    (132) exppow -> . F64 DPUNTOS DPUNTOS POWF LPAR exp COMA exp RPAR
    (136) expcast -> . exp AS tipo_var
    (92) lista_acc -> . lista_acc PUNTO ID
    (93) lista_acc -> . lista_acc PUNTO exp_native
    (94) lista_acc -> . auxacc
    (176) llamada -> . ID LPAR RPAR
    (177) llamada -> . ID LPAR lista_exp RPAR
    (37) sentencia -> . if
    (38) sentencia -> . match
    (39) sentencia -> . loop
    (40) sentencia -> . while
    (41) sentencia -> . for
    (157) valores -> . ENTERO
    (158) valores -> . DECIMAL
    (159) valores -> . CADENA
    (160) valores -> . BOOLEANO
    (161) valores -> . CARACTER
    (95) auxacc -> . exparr
    (96) auxacc -> . ID
    (42) if -> . IF exp statement else
    (47) match -> . MATCH exp match_statement
    (62) loop -> . LOOP statement
    (63) while -> . WHILE exp statement
    (64) for -> . FOR ID IN foriterative statement

  ! shift/reduce conflict for LPAR resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for MENOS resolved as shift
  ! shift/reduce conflict for AD resolved as shift
  ! shift/reduce conflict for LCOR resolved as shift
  ! shift/reduce conflict for VEC resolved as shift
  ! shift/reduce conflict for VECTOR resolved as shift
  ! shift/reduce conflict for MUT resolved as shift
  ! shift/reduce conflict for ANDSINGLE resolved as shift
  ! shift/reduce conflict for I64 resolved as shift
  ! shift/reduce conflict for F64 resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for DECIMAL resolved as shift
  ! shift/reduce conflict for CADENA resolved as shift
  ! shift/reduce conflict for BOOLEANO resolved as shift
  ! shift/reduce conflict for CARACTER resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for MATCH resolved as shift
  ! shift/reduce conflict for LOOP resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
    PCOMA           reduce using rule 70 (transferencia -> RETURN .)
    RLLAV           reduce using rule 70 (transferencia -> RETURN .)
    PRINT           reduce using rule 70 (transferencia -> RETURN .)
    LET             reduce using rule 70 (transferencia -> RETURN .)
    CONTINUE        reduce using rule 70 (transferencia -> RETURN .)
    BREAK           reduce using rule 70 (transferencia -> RETURN .)
    RETURN          reduce using rule 70 (transferencia -> RETURN .)
    COMA            reduce using rule 70 (transferencia -> RETURN .)
    LPAR            shift and go to state 29
    ID              shift and go to state 72
    MENOS           shift and go to state 43
    AD              shift and go to state 44
    LCOR            shift and go to state 46
    VEC             shift and go to state 47
    VECTOR          shift and go to state 48
    MUT             shift and go to state 49
    ANDSINGLE       shift and go to state 50
    I64             shift and go to state 51
    F64             shift and go to state 52
    ENTERO          shift and go to state 59
    DECIMAL         shift and go to state 60
    CADENA          shift and go to state 61
    BOOLEANO        shift and go to state 62
    CARACTER        shift and go to state 63
    IF              shift and go to state 12
    MATCH           shift and go to state 64
    LOOP            shift and go to state 65
    WHILE           shift and go to state 13
    FOR             shift and go to state 66

  ! ID              [ reduce using rule 70 (transferencia -> RETURN .) ]
  ! IF              [ reduce using rule 70 (transferencia -> RETURN .) ]
  ! MATCH           [ reduce using rule 70 (transferencia -> RETURN .) ]
  ! LOOP            [ reduce using rule 70 (transferencia -> RETURN .) ]
  ! WHILE           [ reduce using rule 70 (transferencia -> RETURN .) ]
  ! FOR             [ reduce using rule 70 (transferencia -> RETURN .) ]
  ! LPAR            [ reduce using rule 70 (transferencia -> RETURN .) ]
  ! MENOS           [ reduce using rule 70 (transferencia -> RETURN .) ]
  ! AD              [ reduce using rule 70 (transferencia -> RETURN .) ]
  ! LCOR            [ reduce using rule 70 (transferencia -> RETURN .) ]
  ! VEC             [ reduce using rule 70 (transferencia -> RETURN .) ]
  ! VECTOR          [ reduce using rule 70 (transferencia -> RETURN .) ]
  ! MUT             [ reduce using rule 70 (transferencia -> RETURN .) ]
  ! ANDSINGLE       [ reduce using rule 70 (transferencia -> RETURN .) ]
  ! I64             [ reduce using rule 70 (transferencia -> RETURN .) ]
  ! F64             [ reduce using rule 70 (transferencia -> RETURN .) ]
  ! ENTERO          [ reduce using rule 70 (transferencia -> RETURN .) ]
  ! DECIMAL         [ reduce using rule 70 (transferencia -> RETURN .) ]
  ! CADENA          [ reduce using rule 70 (transferencia -> RETURN .) ]
  ! BOOLEANO        [ reduce using rule 70 (transferencia -> RETURN .) ]
  ! CARACTER        [ reduce using rule 70 (transferencia -> RETURN .) ]

    auxexp                         shift and go to state 249
    expstruct                      shift and go to state 74
    exp                            shift and go to state 75
    lista_classtype                shift and go to state 76
    llamada                        shift and go to state 40
    expmath                        shift and go to state 30
    expop                          shift and go to state 31
    exprel                         shift and go to state 32
    exparr                         shift and go to state 33
    newarray                       shift and go to state 34
    expvec                         shift and go to state 35
    exparam                        shift and go to state 36
    exppow                         shift and go to state 37
    expcast                        shift and go to state 38
    lista_acc                      shift and go to state 39
    sentencia                      shift and go to state 41
    valores                        shift and go to state 42
    auxacc                         shift and go to state 53
    if                             shift and go to state 54
    match                          shift and go to state 55
    loop                           shift and go to state 56
    while                          shift and go to state 57
    for                            shift and go to state 58

state 192

    (110) exp -> LPAR exp RPAR .

    PUNTO           reduce using rule 110 (exp -> LPAR exp RPAR .)
    MAS             reduce using rule 110 (exp -> LPAR exp RPAR .)
    MENOS           reduce using rule 110 (exp -> LPAR exp RPAR .)
    MULTIPLICACION  reduce using rule 110 (exp -> LPAR exp RPAR .)
    DIVISION        reduce using rule 110 (exp -> LPAR exp RPAR .)
    MODULO          reduce using rule 110 (exp -> LPAR exp RPAR .)
    AND             reduce using rule 110 (exp -> LPAR exp RPAR .)
    OR              reduce using rule 110 (exp -> LPAR exp RPAR .)
    IGUALI          reduce using rule 110 (exp -> LPAR exp RPAR .)
    DIF             reduce using rule 110 (exp -> LPAR exp RPAR .)
    MAYOR           reduce using rule 110 (exp -> LPAR exp RPAR .)
    MENOR           reduce using rule 110 (exp -> LPAR exp RPAR .)
    MAYORI          reduce using rule 110 (exp -> LPAR exp RPAR .)
    MENORI          reduce using rule 110 (exp -> LPAR exp RPAR .)
    AS              reduce using rule 110 (exp -> LPAR exp RPAR .)
    LLLAV           reduce using rule 110 (exp -> LPAR exp RPAR .)
    PCOMA           reduce using rule 110 (exp -> LPAR exp RPAR .)
    COMA            reduce using rule 110 (exp -> LPAR exp RPAR .)
    RCOR            reduce using rule 110 (exp -> LPAR exp RPAR .)
    RPAR            reduce using rule 110 (exp -> LPAR exp RPAR .)
    RLLAV           reduce using rule 110 (exp -> LPAR exp RPAR .)
    ID              reduce using rule 110 (exp -> LPAR exp RPAR .)
    PRINT           reduce using rule 110 (exp -> LPAR exp RPAR .)
    LET             reduce using rule 110 (exp -> LPAR exp RPAR .)
    CONTINUE        reduce using rule 110 (exp -> LPAR exp RPAR .)
    BREAK           reduce using rule 110 (exp -> LPAR exp RPAR .)
    RETURN          reduce using rule 110 (exp -> LPAR exp RPAR .)
    IF              reduce using rule 110 (exp -> LPAR exp RPAR .)
    MATCH           reduce using rule 110 (exp -> LPAR exp RPAR .)
    LOOP            reduce using rule 110 (exp -> LPAR exp RPAR .)
    WHILE           reduce using rule 110 (exp -> LPAR exp RPAR .)
    FOR             reduce using rule 110 (exp -> LPAR exp RPAR .)
    LPAR            reduce using rule 110 (exp -> LPAR exp RPAR .)
    AD              reduce using rule 110 (exp -> LPAR exp RPAR .)
    LCOR            reduce using rule 110 (exp -> LPAR exp RPAR .)
    VEC             reduce using rule 110 (exp -> LPAR exp RPAR .)
    VECTOR          reduce using rule 110 (exp -> LPAR exp RPAR .)
    MUT             reduce using rule 110 (exp -> LPAR exp RPAR .)
    ANDSINGLE       reduce using rule 110 (exp -> LPAR exp RPAR .)
    I64             reduce using rule 110 (exp -> LPAR exp RPAR .)
    F64             reduce using rule 110 (exp -> LPAR exp RPAR .)
    ENTERO          reduce using rule 110 (exp -> LPAR exp RPAR .)
    DECIMAL         reduce using rule 110 (exp -> LPAR exp RPAR .)
    CADENA          reduce using rule 110 (exp -> LPAR exp RPAR .)
    BOOLEANO        reduce using rule 110 (exp -> LPAR exp RPAR .)
    CARACTER        reduce using rule 110 (exp -> LPAR exp RPAR .)
    ARROW2          reduce using rule 110 (exp -> LPAR exp RPAR .)
    ORSINGLE        reduce using rule 110 (exp -> LPAR exp RPAR .)


state 193

    (92) lista_acc -> lista_acc PUNTO ID .

    PUNTO           reduce using rule 92 (lista_acc -> lista_acc PUNTO ID .)
    MAS             reduce using rule 92 (lista_acc -> lista_acc PUNTO ID .)
    MENOS           reduce using rule 92 (lista_acc -> lista_acc PUNTO ID .)
    MULTIPLICACION  reduce using rule 92 (lista_acc -> lista_acc PUNTO ID .)
    DIVISION        reduce using rule 92 (lista_acc -> lista_acc PUNTO ID .)
    MODULO          reduce using rule 92 (lista_acc -> lista_acc PUNTO ID .)
    AND             reduce using rule 92 (lista_acc -> lista_acc PUNTO ID .)
    OR              reduce using rule 92 (lista_acc -> lista_acc PUNTO ID .)
    IGUALI          reduce using rule 92 (lista_acc -> lista_acc PUNTO ID .)
    DIF             reduce using rule 92 (lista_acc -> lista_acc PUNTO ID .)
    MAYOR           reduce using rule 92 (lista_acc -> lista_acc PUNTO ID .)
    MENOR           reduce using rule 92 (lista_acc -> lista_acc PUNTO ID .)
    MAYORI          reduce using rule 92 (lista_acc -> lista_acc PUNTO ID .)
    MENORI          reduce using rule 92 (lista_acc -> lista_acc PUNTO ID .)
    AS              reduce using rule 92 (lista_acc -> lista_acc PUNTO ID .)
    LLLAV           reduce using rule 92 (lista_acc -> lista_acc PUNTO ID .)
    PCOMA           reduce using rule 92 (lista_acc -> lista_acc PUNTO ID .)
    COMA            reduce using rule 92 (lista_acc -> lista_acc PUNTO ID .)
    RCOR            reduce using rule 92 (lista_acc -> lista_acc PUNTO ID .)
    RPAR            reduce using rule 92 (lista_acc -> lista_acc PUNTO ID .)
    RLLAV           reduce using rule 92 (lista_acc -> lista_acc PUNTO ID .)
    ID              reduce using rule 92 (lista_acc -> lista_acc PUNTO ID .)
    PRINT           reduce using rule 92 (lista_acc -> lista_acc PUNTO ID .)
    LET             reduce using rule 92 (lista_acc -> lista_acc PUNTO ID .)
    CONTINUE        reduce using rule 92 (lista_acc -> lista_acc PUNTO ID .)
    BREAK           reduce using rule 92 (lista_acc -> lista_acc PUNTO ID .)
    RETURN          reduce using rule 92 (lista_acc -> lista_acc PUNTO ID .)
    IF              reduce using rule 92 (lista_acc -> lista_acc PUNTO ID .)
    MATCH           reduce using rule 92 (lista_acc -> lista_acc PUNTO ID .)
    LOOP            reduce using rule 92 (lista_acc -> lista_acc PUNTO ID .)
    WHILE           reduce using rule 92 (lista_acc -> lista_acc PUNTO ID .)
    FOR             reduce using rule 92 (lista_acc -> lista_acc PUNTO ID .)
    LPAR            reduce using rule 92 (lista_acc -> lista_acc PUNTO ID .)
    AD              reduce using rule 92 (lista_acc -> lista_acc PUNTO ID .)
    LCOR            reduce using rule 92 (lista_acc -> lista_acc PUNTO ID .)
    VEC             reduce using rule 92 (lista_acc -> lista_acc PUNTO ID .)
    VECTOR          reduce using rule 92 (lista_acc -> lista_acc PUNTO ID .)
    MUT             reduce using rule 92 (lista_acc -> lista_acc PUNTO ID .)
    ANDSINGLE       reduce using rule 92 (lista_acc -> lista_acc PUNTO ID .)
    I64             reduce using rule 92 (lista_acc -> lista_acc PUNTO ID .)
    F64             reduce using rule 92 (lista_acc -> lista_acc PUNTO ID .)
    ENTERO          reduce using rule 92 (lista_acc -> lista_acc PUNTO ID .)
    DECIMAL         reduce using rule 92 (lista_acc -> lista_acc PUNTO ID .)
    CADENA          reduce using rule 92 (lista_acc -> lista_acc PUNTO ID .)
    BOOLEANO        reduce using rule 92 (lista_acc -> lista_acc PUNTO ID .)
    CARACTER        reduce using rule 92 (lista_acc -> lista_acc PUNTO ID .)
    ARROW2          reduce using rule 92 (lista_acc -> lista_acc PUNTO ID .)
    ORSINGLE        reduce using rule 92 (lista_acc -> lista_acc PUNTO ID .)


state 194

    (93) lista_acc -> lista_acc PUNTO exp_native .

    PUNTO           reduce using rule 93 (lista_acc -> lista_acc PUNTO exp_native .)
    MAS             reduce using rule 93 (lista_acc -> lista_acc PUNTO exp_native .)
    MENOS           reduce using rule 93 (lista_acc -> lista_acc PUNTO exp_native .)
    MULTIPLICACION  reduce using rule 93 (lista_acc -> lista_acc PUNTO exp_native .)
    DIVISION        reduce using rule 93 (lista_acc -> lista_acc PUNTO exp_native .)
    MODULO          reduce using rule 93 (lista_acc -> lista_acc PUNTO exp_native .)
    AND             reduce using rule 93 (lista_acc -> lista_acc PUNTO exp_native .)
    OR              reduce using rule 93 (lista_acc -> lista_acc PUNTO exp_native .)
    IGUALI          reduce using rule 93 (lista_acc -> lista_acc PUNTO exp_native .)
    DIF             reduce using rule 93 (lista_acc -> lista_acc PUNTO exp_native .)
    MAYOR           reduce using rule 93 (lista_acc -> lista_acc PUNTO exp_native .)
    MENOR           reduce using rule 93 (lista_acc -> lista_acc PUNTO exp_native .)
    MAYORI          reduce using rule 93 (lista_acc -> lista_acc PUNTO exp_native .)
    MENORI          reduce using rule 93 (lista_acc -> lista_acc PUNTO exp_native .)
    AS              reduce using rule 93 (lista_acc -> lista_acc PUNTO exp_native .)
    LLLAV           reduce using rule 93 (lista_acc -> lista_acc PUNTO exp_native .)
    PCOMA           reduce using rule 93 (lista_acc -> lista_acc PUNTO exp_native .)
    COMA            reduce using rule 93 (lista_acc -> lista_acc PUNTO exp_native .)
    RCOR            reduce using rule 93 (lista_acc -> lista_acc PUNTO exp_native .)
    RPAR            reduce using rule 93 (lista_acc -> lista_acc PUNTO exp_native .)
    RLLAV           reduce using rule 93 (lista_acc -> lista_acc PUNTO exp_native .)
    ID              reduce using rule 93 (lista_acc -> lista_acc PUNTO exp_native .)
    PRINT           reduce using rule 93 (lista_acc -> lista_acc PUNTO exp_native .)
    LET             reduce using rule 93 (lista_acc -> lista_acc PUNTO exp_native .)
    CONTINUE        reduce using rule 93 (lista_acc -> lista_acc PUNTO exp_native .)
    BREAK           reduce using rule 93 (lista_acc -> lista_acc PUNTO exp_native .)
    RETURN          reduce using rule 93 (lista_acc -> lista_acc PUNTO exp_native .)
    IF              reduce using rule 93 (lista_acc -> lista_acc PUNTO exp_native .)
    MATCH           reduce using rule 93 (lista_acc -> lista_acc PUNTO exp_native .)
    LOOP            reduce using rule 93 (lista_acc -> lista_acc PUNTO exp_native .)
    WHILE           reduce using rule 93 (lista_acc -> lista_acc PUNTO exp_native .)
    FOR             reduce using rule 93 (lista_acc -> lista_acc PUNTO exp_native .)
    LPAR            reduce using rule 93 (lista_acc -> lista_acc PUNTO exp_native .)
    AD              reduce using rule 93 (lista_acc -> lista_acc PUNTO exp_native .)
    LCOR            reduce using rule 93 (lista_acc -> lista_acc PUNTO exp_native .)
    VEC             reduce using rule 93 (lista_acc -> lista_acc PUNTO exp_native .)
    VECTOR          reduce using rule 93 (lista_acc -> lista_acc PUNTO exp_native .)
    MUT             reduce using rule 93 (lista_acc -> lista_acc PUNTO exp_native .)
    ANDSINGLE       reduce using rule 93 (lista_acc -> lista_acc PUNTO exp_native .)
    I64             reduce using rule 93 (lista_acc -> lista_acc PUNTO exp_native .)
    F64             reduce using rule 93 (lista_acc -> lista_acc PUNTO exp_native .)
    ENTERO          reduce using rule 93 (lista_acc -> lista_acc PUNTO exp_native .)
    DECIMAL         reduce using rule 93 (lista_acc -> lista_acc PUNTO exp_native .)
    CADENA          reduce using rule 93 (lista_acc -> lista_acc PUNTO exp_native .)
    BOOLEANO        reduce using rule 93 (lista_acc -> lista_acc PUNTO exp_native .)
    CARACTER        reduce using rule 93 (lista_acc -> lista_acc PUNTO exp_native .)
    ARROW2          reduce using rule 93 (lista_acc -> lista_acc PUNTO exp_native .)
    ORSINGLE        reduce using rule 93 (lista_acc -> lista_acc PUNTO exp_native .)


state 195

    (176) llamada -> ID LPAR RPAR .

    PUNTO           reduce using rule 176 (llamada -> ID LPAR RPAR .)
    MAS             reduce using rule 176 (llamada -> ID LPAR RPAR .)
    MENOS           reduce using rule 176 (llamada -> ID LPAR RPAR .)
    MULTIPLICACION  reduce using rule 176 (llamada -> ID LPAR RPAR .)
    DIVISION        reduce using rule 176 (llamada -> ID LPAR RPAR .)
    MODULO          reduce using rule 176 (llamada -> ID LPAR RPAR .)
    AND             reduce using rule 176 (llamada -> ID LPAR RPAR .)
    OR              reduce using rule 176 (llamada -> ID LPAR RPAR .)
    IGUALI          reduce using rule 176 (llamada -> ID LPAR RPAR .)
    DIF             reduce using rule 176 (llamada -> ID LPAR RPAR .)
    MAYOR           reduce using rule 176 (llamada -> ID LPAR RPAR .)
    MENOR           reduce using rule 176 (llamada -> ID LPAR RPAR .)
    MAYORI          reduce using rule 176 (llamada -> ID LPAR RPAR .)
    MENORI          reduce using rule 176 (llamada -> ID LPAR RPAR .)
    AS              reduce using rule 176 (llamada -> ID LPAR RPAR .)
    LLLAV           reduce using rule 176 (llamada -> ID LPAR RPAR .)
    PCOMA           reduce using rule 176 (llamada -> ID LPAR RPAR .)
    COMA            reduce using rule 176 (llamada -> ID LPAR RPAR .)
    RCOR            reduce using rule 176 (llamada -> ID LPAR RPAR .)
    RPAR            reduce using rule 176 (llamada -> ID LPAR RPAR .)
    RLLAV           reduce using rule 176 (llamada -> ID LPAR RPAR .)
    ID              reduce using rule 176 (llamada -> ID LPAR RPAR .)
    PRINT           reduce using rule 176 (llamada -> ID LPAR RPAR .)
    LET             reduce using rule 176 (llamada -> ID LPAR RPAR .)
    CONTINUE        reduce using rule 176 (llamada -> ID LPAR RPAR .)
    BREAK           reduce using rule 176 (llamada -> ID LPAR RPAR .)
    RETURN          reduce using rule 176 (llamada -> ID LPAR RPAR .)
    IF              reduce using rule 176 (llamada -> ID LPAR RPAR .)
    MATCH           reduce using rule 176 (llamada -> ID LPAR RPAR .)
    LOOP            reduce using rule 176 (llamada -> ID LPAR RPAR .)
    WHILE           reduce using rule 176 (llamada -> ID LPAR RPAR .)
    FOR             reduce using rule 176 (llamada -> ID LPAR RPAR .)
    LPAR            reduce using rule 176 (llamada -> ID LPAR RPAR .)
    AD              reduce using rule 176 (llamada -> ID LPAR RPAR .)
    LCOR            reduce using rule 176 (llamada -> ID LPAR RPAR .)
    VEC             reduce using rule 176 (llamada -> ID LPAR RPAR .)
    VECTOR          reduce using rule 176 (llamada -> ID LPAR RPAR .)
    MUT             reduce using rule 176 (llamada -> ID LPAR RPAR .)
    ANDSINGLE       reduce using rule 176 (llamada -> ID LPAR RPAR .)
    I64             reduce using rule 176 (llamada -> ID LPAR RPAR .)
    F64             reduce using rule 176 (llamada -> ID LPAR RPAR .)
    ENTERO          reduce using rule 176 (llamada -> ID LPAR RPAR .)
    DECIMAL         reduce using rule 176 (llamada -> ID LPAR RPAR .)
    CADENA          reduce using rule 176 (llamada -> ID LPAR RPAR .)
    BOOLEANO        reduce using rule 176 (llamada -> ID LPAR RPAR .)
    CARACTER        reduce using rule 176 (llamada -> ID LPAR RPAR .)
    ARROW2          reduce using rule 176 (llamada -> ID LPAR RPAR .)
    ORSINGLE        reduce using rule 176 (llamada -> ID LPAR RPAR .)


state 196

    (177) llamada -> ID LPAR lista_exp . RPAR
    (99) lista_exp -> lista_exp . COMA auxexp

    RPAR            shift and go to state 250
    COMA            shift and go to state 198


state 197

    (155) newarray -> LCOR lista_exp RCOR .

    PUNTO           reduce using rule 155 (newarray -> LCOR lista_exp RCOR .)
    MAS             reduce using rule 155 (newarray -> LCOR lista_exp RCOR .)
    MENOS           reduce using rule 155 (newarray -> LCOR lista_exp RCOR .)
    MULTIPLICACION  reduce using rule 155 (newarray -> LCOR lista_exp RCOR .)
    DIVISION        reduce using rule 155 (newarray -> LCOR lista_exp RCOR .)
    MODULO          reduce using rule 155 (newarray -> LCOR lista_exp RCOR .)
    AND             reduce using rule 155 (newarray -> LCOR lista_exp RCOR .)
    OR              reduce using rule 155 (newarray -> LCOR lista_exp RCOR .)
    IGUALI          reduce using rule 155 (newarray -> LCOR lista_exp RCOR .)
    DIF             reduce using rule 155 (newarray -> LCOR lista_exp RCOR .)
    MAYOR           reduce using rule 155 (newarray -> LCOR lista_exp RCOR .)
    MENOR           reduce using rule 155 (newarray -> LCOR lista_exp RCOR .)
    MAYORI          reduce using rule 155 (newarray -> LCOR lista_exp RCOR .)
    MENORI          reduce using rule 155 (newarray -> LCOR lista_exp RCOR .)
    AS              reduce using rule 155 (newarray -> LCOR lista_exp RCOR .)
    LLLAV           reduce using rule 155 (newarray -> LCOR lista_exp RCOR .)
    PCOMA           reduce using rule 155 (newarray -> LCOR lista_exp RCOR .)
    COMA            reduce using rule 155 (newarray -> LCOR lista_exp RCOR .)
    RCOR            reduce using rule 155 (newarray -> LCOR lista_exp RCOR .)
    RPAR            reduce using rule 155 (newarray -> LCOR lista_exp RCOR .)
    RLLAV           reduce using rule 155 (newarray -> LCOR lista_exp RCOR .)
    ID              reduce using rule 155 (newarray -> LCOR lista_exp RCOR .)
    PRINT           reduce using rule 155 (newarray -> LCOR lista_exp RCOR .)
    LET             reduce using rule 155 (newarray -> LCOR lista_exp RCOR .)
    CONTINUE        reduce using rule 155 (newarray -> LCOR lista_exp RCOR .)
    BREAK           reduce using rule 155 (newarray -> LCOR lista_exp RCOR .)
    RETURN          reduce using rule 155 (newarray -> LCOR lista_exp RCOR .)
    IF              reduce using rule 155 (newarray -> LCOR lista_exp RCOR .)
    MATCH           reduce using rule 155 (newarray -> LCOR lista_exp RCOR .)
    LOOP            reduce using rule 155 (newarray -> LCOR lista_exp RCOR .)
    WHILE           reduce using rule 155 (newarray -> LCOR lista_exp RCOR .)
    FOR             reduce using rule 155 (newarray -> LCOR lista_exp RCOR .)
    LPAR            reduce using rule 155 (newarray -> LCOR lista_exp RCOR .)
    AD              reduce using rule 155 (newarray -> LCOR lista_exp RCOR .)
    LCOR            reduce using rule 155 (newarray -> LCOR lista_exp RCOR .)
    VEC             reduce using rule 155 (newarray -> LCOR lista_exp RCOR .)
    VECTOR          reduce using rule 155 (newarray -> LCOR lista_exp RCOR .)
    MUT             reduce using rule 155 (newarray -> LCOR lista_exp RCOR .)
    ANDSINGLE       reduce using rule 155 (newarray -> LCOR lista_exp RCOR .)
    I64             reduce using rule 155 (newarray -> LCOR lista_exp RCOR .)
    F64             reduce using rule 155 (newarray -> LCOR lista_exp RCOR .)
    ENTERO          reduce using rule 155 (newarray -> LCOR lista_exp RCOR .)
    DECIMAL         reduce using rule 155 (newarray -> LCOR lista_exp RCOR .)
    CADENA          reduce using rule 155 (newarray -> LCOR lista_exp RCOR .)
    BOOLEANO        reduce using rule 155 (newarray -> LCOR lista_exp RCOR .)
    CARACTER        reduce using rule 155 (newarray -> LCOR lista_exp RCOR .)
    ARROW2          reduce using rule 155 (newarray -> LCOR lista_exp RCOR .)
    ORSINGLE        reduce using rule 155 (newarray -> LCOR lista_exp RCOR .)


state 198

    (99) lista_exp -> lista_exp COMA . auxexp
    (108) auxexp -> . expstruct
    (109) auxexp -> . exp
    (143) expstruct -> . lista_classtype LLLAV lista_att RLLAV
    (144) expstruct -> . lista_classtype LLLAV RLLAV
    (145) expstruct -> . lista_classtype DPUNTOS DPUNTOS llamada
    (110) exp -> . LPAR exp RPAR
    (111) exp -> . expmath
    (112) exp -> . expop
    (113) exp -> . exprel
    (114) exp -> . exparr
    (115) exp -> . newarray
    (116) exp -> . expvec
    (117) exp -> . exparam
    (118) exp -> . exppow
    (119) exp -> . expcast
    (120) exp -> . lista_acc
    (121) exp -> . llamada
    (122) exp -> . sentencia
    (123) exp -> . valores
    (124) exp -> . exp PUNTO exp_native
    (174) lista_classtype -> . lista_classtype DPUNTOS DPUNTOS ID
    (175) lista_classtype -> . ID
    (125) expmath -> . exp MAS exp
    (126) expmath -> . exp MENOS exp
    (127) expmath -> . exp MULTIPLICACION exp
    (128) expmath -> . exp DIVISION exp
    (129) expmath -> . exp MODULO exp
    (130) expmath -> . MENOS exp
    (133) expop -> . exp AND exp
    (134) expop -> . exp OR exp
    (135) expop -> . AD exp
    (137) exprel -> . exp IGUALI exp
    (138) exprel -> . exp DIF exp
    (139) exprel -> . exp MAYOR exp
    (140) exprel -> . exp MENOR exp
    (141) exprel -> . exp MAYORI exp
    (142) exprel -> . exp MENORI exp
    (152) exparr -> . ID lista_arr
    (155) newarray -> . LCOR lista_exp RCOR
    (156) newarray -> . LCOR auxexp PCOMA exp RCOR
    (153) expvec -> . VEC AD newarray
    (154) expvec -> . VECTOR DPUNTOS DPUNTOS exp_natarr
    (148) exparam -> . MUT ID
    (149) exparam -> . MUT valores
    (150) exparam -> . ANDSINGLE MUT ID
    (151) exparam -> . ANDSINGLE MUT valores
    (131) exppow -> . I64 DPUNTOS DPUNTOS POW LPAR exp COMA exp RPAR
    (132) exppow -> . F64 DPUNTOS DPUNTOS POWF LPAR exp COMA exp RPAR
    (136) expcast -> . exp AS tipo_var
    (92) lista_acc -> . lista_acc PUNTO ID
    (93) lista_acc -> . lista_acc PUNTO exp_native
    (94) lista_acc -> . auxacc
    (176) llamada -> . ID LPAR RPAR
    (177) llamada -> . ID LPAR lista_exp RPAR
    (37) sentencia -> . if
    (38) sentencia -> . match
    (39) sentencia -> . loop
    (40) sentencia -> . while
    (41) sentencia -> . for
    (157) valores -> . ENTERO
    (158) valores -> . DECIMAL
    (159) valores -> . CADENA
    (160) valores -> . BOOLEANO
    (161) valores -> . CARACTER
    (95) auxacc -> . exparr
    (96) auxacc -> . ID
    (42) if -> . IF exp statement else
    (47) match -> . MATCH exp match_statement
    (62) loop -> . LOOP statement
    (63) while -> . WHILE exp statement
    (64) for -> . FOR ID IN foriterative statement

    LPAR            shift and go to state 29
    ID              shift and go to state 72
    MENOS           shift and go to state 43
    AD              shift and go to state 44
    LCOR            shift and go to state 46
    VEC             shift and go to state 47
    VECTOR          shift and go to state 48
    MUT             shift and go to state 49
    ANDSINGLE       shift and go to state 50
    I64             shift and go to state 51
    F64             shift and go to state 52
    ENTERO          shift and go to state 59
    DECIMAL         shift and go to state 60
    CADENA          shift and go to state 61
    BOOLEANO        shift and go to state 62
    CARACTER        shift and go to state 63
    IF              shift and go to state 12
    MATCH           shift and go to state 64
    LOOP            shift and go to state 65
    WHILE           shift and go to state 13
    FOR             shift and go to state 66

    auxexp                         shift and go to state 251
    expstruct                      shift and go to state 74
    exp                            shift and go to state 75
    lista_classtype                shift and go to state 76
    llamada                        shift and go to state 40
    expmath                        shift and go to state 30
    expop                          shift and go to state 31
    exprel                         shift and go to state 32
    exparr                         shift and go to state 33
    newarray                       shift and go to state 34
    expvec                         shift and go to state 35
    exparam                        shift and go to state 36
    exppow                         shift and go to state 37
    expcast                        shift and go to state 38
    lista_acc                      shift and go to state 39
    sentencia                      shift and go to state 41
    valores                        shift and go to state 42
    auxacc                         shift and go to state 53
    if                             shift and go to state 54
    match                          shift and go to state 55
    loop                           shift and go to state 56
    while                          shift and go to state 57
    for                            shift and go to state 58

state 199

    (156) newarray -> LCOR auxexp PCOMA . exp RCOR
    (110) exp -> . LPAR exp RPAR
    (111) exp -> . expmath
    (112) exp -> . expop
    (113) exp -> . exprel
    (114) exp -> . exparr
    (115) exp -> . newarray
    (116) exp -> . expvec
    (117) exp -> . exparam
    (118) exp -> . exppow
    (119) exp -> . expcast
    (120) exp -> . lista_acc
    (121) exp -> . llamada
    (122) exp -> . sentencia
    (123) exp -> . valores
    (124) exp -> . exp PUNTO exp_native
    (125) expmath -> . exp MAS exp
    (126) expmath -> . exp MENOS exp
    (127) expmath -> . exp MULTIPLICACION exp
    (128) expmath -> . exp DIVISION exp
    (129) expmath -> . exp MODULO exp
    (130) expmath -> . MENOS exp
    (133) expop -> . exp AND exp
    (134) expop -> . exp OR exp
    (135) expop -> . AD exp
    (137) exprel -> . exp IGUALI exp
    (138) exprel -> . exp DIF exp
    (139) exprel -> . exp MAYOR exp
    (140) exprel -> . exp MENOR exp
    (141) exprel -> . exp MAYORI exp
    (142) exprel -> . exp MENORI exp
    (152) exparr -> . ID lista_arr
    (155) newarray -> . LCOR lista_exp RCOR
    (156) newarray -> . LCOR auxexp PCOMA exp RCOR
    (153) expvec -> . VEC AD newarray
    (154) expvec -> . VECTOR DPUNTOS DPUNTOS exp_natarr
    (148) exparam -> . MUT ID
    (149) exparam -> . MUT valores
    (150) exparam -> . ANDSINGLE MUT ID
    (151) exparam -> . ANDSINGLE MUT valores
    (131) exppow -> . I64 DPUNTOS DPUNTOS POW LPAR exp COMA exp RPAR
    (132) exppow -> . F64 DPUNTOS DPUNTOS POWF LPAR exp COMA exp RPAR
    (136) expcast -> . exp AS tipo_var
    (92) lista_acc -> . lista_acc PUNTO ID
    (93) lista_acc -> . lista_acc PUNTO exp_native
    (94) lista_acc -> . auxacc
    (176) llamada -> . ID LPAR RPAR
    (177) llamada -> . ID LPAR lista_exp RPAR
    (37) sentencia -> . if
    (38) sentencia -> . match
    (39) sentencia -> . loop
    (40) sentencia -> . while
    (41) sentencia -> . for
    (157) valores -> . ENTERO
    (158) valores -> . DECIMAL
    (159) valores -> . CADENA
    (160) valores -> . BOOLEANO
    (161) valores -> . CARACTER
    (95) auxacc -> . exparr
    (96) auxacc -> . ID
    (42) if -> . IF exp statement else
    (47) match -> . MATCH exp match_statement
    (62) loop -> . LOOP statement
    (63) while -> . WHILE exp statement
    (64) for -> . FOR ID IN foriterative statement

    LPAR            shift and go to state 29
    MENOS           shift and go to state 43
    AD              shift and go to state 44
    ID              shift and go to state 45
    LCOR            shift and go to state 46
    VEC             shift and go to state 47
    VECTOR          shift and go to state 48
    MUT             shift and go to state 49
    ANDSINGLE       shift and go to state 50
    I64             shift and go to state 51
    F64             shift and go to state 52
    ENTERO          shift and go to state 59
    DECIMAL         shift and go to state 60
    CADENA          shift and go to state 61
    BOOLEANO        shift and go to state 62
    CARACTER        shift and go to state 63
    IF              shift and go to state 12
    MATCH           shift and go to state 64
    LOOP            shift and go to state 65
    WHILE           shift and go to state 13
    FOR             shift and go to state 66

    exp                            shift and go to state 252
    expmath                        shift and go to state 30
    expop                          shift and go to state 31
    exprel                         shift and go to state 32
    exparr                         shift and go to state 33
    newarray                       shift and go to state 34
    expvec                         shift and go to state 35
    exparam                        shift and go to state 36
    exppow                         shift and go to state 37
    expcast                        shift and go to state 38
    lista_acc                      shift and go to state 39
    llamada                        shift and go to state 40
    sentencia                      shift and go to state 41
    valores                        shift and go to state 42
    auxacc                         shift and go to state 53
    if                             shift and go to state 54
    match                          shift and go to state 55
    loop                           shift and go to state 56
    while                          shift and go to state 57
    for                            shift and go to state 58

state 200

    (153) expvec -> VEC AD newarray .

    PUNTO           reduce using rule 153 (expvec -> VEC AD newarray .)
    MAS             reduce using rule 153 (expvec -> VEC AD newarray .)
    MENOS           reduce using rule 153 (expvec -> VEC AD newarray .)
    MULTIPLICACION  reduce using rule 153 (expvec -> VEC AD newarray .)
    DIVISION        reduce using rule 153 (expvec -> VEC AD newarray .)
    MODULO          reduce using rule 153 (expvec -> VEC AD newarray .)
    AND             reduce using rule 153 (expvec -> VEC AD newarray .)
    OR              reduce using rule 153 (expvec -> VEC AD newarray .)
    IGUALI          reduce using rule 153 (expvec -> VEC AD newarray .)
    DIF             reduce using rule 153 (expvec -> VEC AD newarray .)
    MAYOR           reduce using rule 153 (expvec -> VEC AD newarray .)
    MENOR           reduce using rule 153 (expvec -> VEC AD newarray .)
    MAYORI          reduce using rule 153 (expvec -> VEC AD newarray .)
    MENORI          reduce using rule 153 (expvec -> VEC AD newarray .)
    AS              reduce using rule 153 (expvec -> VEC AD newarray .)
    LLLAV           reduce using rule 153 (expvec -> VEC AD newarray .)
    PCOMA           reduce using rule 153 (expvec -> VEC AD newarray .)
    COMA            reduce using rule 153 (expvec -> VEC AD newarray .)
    RCOR            reduce using rule 153 (expvec -> VEC AD newarray .)
    RPAR            reduce using rule 153 (expvec -> VEC AD newarray .)
    RLLAV           reduce using rule 153 (expvec -> VEC AD newarray .)
    ID              reduce using rule 153 (expvec -> VEC AD newarray .)
    PRINT           reduce using rule 153 (expvec -> VEC AD newarray .)
    LET             reduce using rule 153 (expvec -> VEC AD newarray .)
    CONTINUE        reduce using rule 153 (expvec -> VEC AD newarray .)
    BREAK           reduce using rule 153 (expvec -> VEC AD newarray .)
    RETURN          reduce using rule 153 (expvec -> VEC AD newarray .)
    IF              reduce using rule 153 (expvec -> VEC AD newarray .)
    MATCH           reduce using rule 153 (expvec -> VEC AD newarray .)
    LOOP            reduce using rule 153 (expvec -> VEC AD newarray .)
    WHILE           reduce using rule 153 (expvec -> VEC AD newarray .)
    FOR             reduce using rule 153 (expvec -> VEC AD newarray .)
    LPAR            reduce using rule 153 (expvec -> VEC AD newarray .)
    AD              reduce using rule 153 (expvec -> VEC AD newarray .)
    LCOR            reduce using rule 153 (expvec -> VEC AD newarray .)
    VEC             reduce using rule 153 (expvec -> VEC AD newarray .)
    VECTOR          reduce using rule 153 (expvec -> VEC AD newarray .)
    MUT             reduce using rule 153 (expvec -> VEC AD newarray .)
    ANDSINGLE       reduce using rule 153 (expvec -> VEC AD newarray .)
    I64             reduce using rule 153 (expvec -> VEC AD newarray .)
    F64             reduce using rule 153 (expvec -> VEC AD newarray .)
    ENTERO          reduce using rule 153 (expvec -> VEC AD newarray .)
    DECIMAL         reduce using rule 153 (expvec -> VEC AD newarray .)
    CADENA          reduce using rule 153 (expvec -> VEC AD newarray .)
    BOOLEANO        reduce using rule 153 (expvec -> VEC AD newarray .)
    CARACTER        reduce using rule 153 (expvec -> VEC AD newarray .)
    ARROW2          reduce using rule 153 (expvec -> VEC AD newarray .)
    ORSINGLE        reduce using rule 153 (expvec -> VEC AD newarray .)


state 201

    (154) expvec -> VECTOR DPUNTOS DPUNTOS . exp_natarr
    (190) exp_natarr -> . NEW LPAR RPAR
    (191) exp_natarr -> . WITHCAPACITY LPAR exp RPAR

    NEW             shift and go to state 254
    WITHCAPACITY    shift and go to state 255

    exp_natarr                     shift and go to state 253

state 202

    (150) exparam -> ANDSINGLE MUT ID .

    PUNTO           reduce using rule 150 (exparam -> ANDSINGLE MUT ID .)
    MAS             reduce using rule 150 (exparam -> ANDSINGLE MUT ID .)
    MENOS           reduce using rule 150 (exparam -> ANDSINGLE MUT ID .)
    MULTIPLICACION  reduce using rule 150 (exparam -> ANDSINGLE MUT ID .)
    DIVISION        reduce using rule 150 (exparam -> ANDSINGLE MUT ID .)
    MODULO          reduce using rule 150 (exparam -> ANDSINGLE MUT ID .)
    AND             reduce using rule 150 (exparam -> ANDSINGLE MUT ID .)
    OR              reduce using rule 150 (exparam -> ANDSINGLE MUT ID .)
    IGUALI          reduce using rule 150 (exparam -> ANDSINGLE MUT ID .)
    DIF             reduce using rule 150 (exparam -> ANDSINGLE MUT ID .)
    MAYOR           reduce using rule 150 (exparam -> ANDSINGLE MUT ID .)
    MENOR           reduce using rule 150 (exparam -> ANDSINGLE MUT ID .)
    MAYORI          reduce using rule 150 (exparam -> ANDSINGLE MUT ID .)
    MENORI          reduce using rule 150 (exparam -> ANDSINGLE MUT ID .)
    AS              reduce using rule 150 (exparam -> ANDSINGLE MUT ID .)
    LLLAV           reduce using rule 150 (exparam -> ANDSINGLE MUT ID .)
    PCOMA           reduce using rule 150 (exparam -> ANDSINGLE MUT ID .)
    COMA            reduce using rule 150 (exparam -> ANDSINGLE MUT ID .)
    RCOR            reduce using rule 150 (exparam -> ANDSINGLE MUT ID .)
    RPAR            reduce using rule 150 (exparam -> ANDSINGLE MUT ID .)
    RLLAV           reduce using rule 150 (exparam -> ANDSINGLE MUT ID .)
    ID              reduce using rule 150 (exparam -> ANDSINGLE MUT ID .)
    PRINT           reduce using rule 150 (exparam -> ANDSINGLE MUT ID .)
    LET             reduce using rule 150 (exparam -> ANDSINGLE MUT ID .)
    CONTINUE        reduce using rule 150 (exparam -> ANDSINGLE MUT ID .)
    BREAK           reduce using rule 150 (exparam -> ANDSINGLE MUT ID .)
    RETURN          reduce using rule 150 (exparam -> ANDSINGLE MUT ID .)
    IF              reduce using rule 150 (exparam -> ANDSINGLE MUT ID .)
    MATCH           reduce using rule 150 (exparam -> ANDSINGLE MUT ID .)
    LOOP            reduce using rule 150 (exparam -> ANDSINGLE MUT ID .)
    WHILE           reduce using rule 150 (exparam -> ANDSINGLE MUT ID .)
    FOR             reduce using rule 150 (exparam -> ANDSINGLE MUT ID .)
    LPAR            reduce using rule 150 (exparam -> ANDSINGLE MUT ID .)
    AD              reduce using rule 150 (exparam -> ANDSINGLE MUT ID .)
    LCOR            reduce using rule 150 (exparam -> ANDSINGLE MUT ID .)
    VEC             reduce using rule 150 (exparam -> ANDSINGLE MUT ID .)
    VECTOR          reduce using rule 150 (exparam -> ANDSINGLE MUT ID .)
    MUT             reduce using rule 150 (exparam -> ANDSINGLE MUT ID .)
    ANDSINGLE       reduce using rule 150 (exparam -> ANDSINGLE MUT ID .)
    I64             reduce using rule 150 (exparam -> ANDSINGLE MUT ID .)
    F64             reduce using rule 150 (exparam -> ANDSINGLE MUT ID .)
    ENTERO          reduce using rule 150 (exparam -> ANDSINGLE MUT ID .)
    DECIMAL         reduce using rule 150 (exparam -> ANDSINGLE MUT ID .)
    CADENA          reduce using rule 150 (exparam -> ANDSINGLE MUT ID .)
    BOOLEANO        reduce using rule 150 (exparam -> ANDSINGLE MUT ID .)
    CARACTER        reduce using rule 150 (exparam -> ANDSINGLE MUT ID .)
    ARROW2          reduce using rule 150 (exparam -> ANDSINGLE MUT ID .)
    ORSINGLE        reduce using rule 150 (exparam -> ANDSINGLE MUT ID .)


state 203

    (151) exparam -> ANDSINGLE MUT valores .

    PUNTO           reduce using rule 151 (exparam -> ANDSINGLE MUT valores .)
    MAS             reduce using rule 151 (exparam -> ANDSINGLE MUT valores .)
    MENOS           reduce using rule 151 (exparam -> ANDSINGLE MUT valores .)
    MULTIPLICACION  reduce using rule 151 (exparam -> ANDSINGLE MUT valores .)
    DIVISION        reduce using rule 151 (exparam -> ANDSINGLE MUT valores .)
    MODULO          reduce using rule 151 (exparam -> ANDSINGLE MUT valores .)
    AND             reduce using rule 151 (exparam -> ANDSINGLE MUT valores .)
    OR              reduce using rule 151 (exparam -> ANDSINGLE MUT valores .)
    IGUALI          reduce using rule 151 (exparam -> ANDSINGLE MUT valores .)
    DIF             reduce using rule 151 (exparam -> ANDSINGLE MUT valores .)
    MAYOR           reduce using rule 151 (exparam -> ANDSINGLE MUT valores .)
    MENOR           reduce using rule 151 (exparam -> ANDSINGLE MUT valores .)
    MAYORI          reduce using rule 151 (exparam -> ANDSINGLE MUT valores .)
    MENORI          reduce using rule 151 (exparam -> ANDSINGLE MUT valores .)
    AS              reduce using rule 151 (exparam -> ANDSINGLE MUT valores .)
    LLLAV           reduce using rule 151 (exparam -> ANDSINGLE MUT valores .)
    PCOMA           reduce using rule 151 (exparam -> ANDSINGLE MUT valores .)
    COMA            reduce using rule 151 (exparam -> ANDSINGLE MUT valores .)
    RCOR            reduce using rule 151 (exparam -> ANDSINGLE MUT valores .)
    RPAR            reduce using rule 151 (exparam -> ANDSINGLE MUT valores .)
    RLLAV           reduce using rule 151 (exparam -> ANDSINGLE MUT valores .)
    ID              reduce using rule 151 (exparam -> ANDSINGLE MUT valores .)
    PRINT           reduce using rule 151 (exparam -> ANDSINGLE MUT valores .)
    LET             reduce using rule 151 (exparam -> ANDSINGLE MUT valores .)
    CONTINUE        reduce using rule 151 (exparam -> ANDSINGLE MUT valores .)
    BREAK           reduce using rule 151 (exparam -> ANDSINGLE MUT valores .)
    RETURN          reduce using rule 151 (exparam -> ANDSINGLE MUT valores .)
    IF              reduce using rule 151 (exparam -> ANDSINGLE MUT valores .)
    MATCH           reduce using rule 151 (exparam -> ANDSINGLE MUT valores .)
    LOOP            reduce using rule 151 (exparam -> ANDSINGLE MUT valores .)
    WHILE           reduce using rule 151 (exparam -> ANDSINGLE MUT valores .)
    FOR             reduce using rule 151 (exparam -> ANDSINGLE MUT valores .)
    LPAR            reduce using rule 151 (exparam -> ANDSINGLE MUT valores .)
    AD              reduce using rule 151 (exparam -> ANDSINGLE MUT valores .)
    LCOR            reduce using rule 151 (exparam -> ANDSINGLE MUT valores .)
    VEC             reduce using rule 151 (exparam -> ANDSINGLE MUT valores .)
    VECTOR          reduce using rule 151 (exparam -> ANDSINGLE MUT valores .)
    MUT             reduce using rule 151 (exparam -> ANDSINGLE MUT valores .)
    ANDSINGLE       reduce using rule 151 (exparam -> ANDSINGLE MUT valores .)
    I64             reduce using rule 151 (exparam -> ANDSINGLE MUT valores .)
    F64             reduce using rule 151 (exparam -> ANDSINGLE MUT valores .)
    ENTERO          reduce using rule 151 (exparam -> ANDSINGLE MUT valores .)
    DECIMAL         reduce using rule 151 (exparam -> ANDSINGLE MUT valores .)
    CADENA          reduce using rule 151 (exparam -> ANDSINGLE MUT valores .)
    BOOLEANO        reduce using rule 151 (exparam -> ANDSINGLE MUT valores .)
    CARACTER        reduce using rule 151 (exparam -> ANDSINGLE MUT valores .)
    ARROW2          reduce using rule 151 (exparam -> ANDSINGLE MUT valores .)
    ORSINGLE        reduce using rule 151 (exparam -> ANDSINGLE MUT valores .)


state 204

    (131) exppow -> I64 DPUNTOS DPUNTOS . POW LPAR exp COMA exp RPAR

    POW             shift and go to state 256


state 205

    (132) exppow -> F64 DPUNTOS DPUNTOS . POWF LPAR exp COMA exp RPAR

    POWF            shift and go to state 257


state 206

    (47) match -> MATCH exp match_statement .

    PUNTO           reduce using rule 47 (match -> MATCH exp match_statement .)
    MAS             reduce using rule 47 (match -> MATCH exp match_statement .)
    MENOS           reduce using rule 47 (match -> MATCH exp match_statement .)
    MULTIPLICACION  reduce using rule 47 (match -> MATCH exp match_statement .)
    DIVISION        reduce using rule 47 (match -> MATCH exp match_statement .)
    MODULO          reduce using rule 47 (match -> MATCH exp match_statement .)
    AND             reduce using rule 47 (match -> MATCH exp match_statement .)
    OR              reduce using rule 47 (match -> MATCH exp match_statement .)
    IGUALI          reduce using rule 47 (match -> MATCH exp match_statement .)
    DIF             reduce using rule 47 (match -> MATCH exp match_statement .)
    MAYOR           reduce using rule 47 (match -> MATCH exp match_statement .)
    MENOR           reduce using rule 47 (match -> MATCH exp match_statement .)
    MAYORI          reduce using rule 47 (match -> MATCH exp match_statement .)
    MENORI          reduce using rule 47 (match -> MATCH exp match_statement .)
    AS              reduce using rule 47 (match -> MATCH exp match_statement .)
    LLLAV           reduce using rule 47 (match -> MATCH exp match_statement .)
    PCOMA           reduce using rule 47 (match -> MATCH exp match_statement .)
    COMA            reduce using rule 47 (match -> MATCH exp match_statement .)
    RCOR            reduce using rule 47 (match -> MATCH exp match_statement .)
    RPAR            reduce using rule 47 (match -> MATCH exp match_statement .)
    RLLAV           reduce using rule 47 (match -> MATCH exp match_statement .)
    ID              reduce using rule 47 (match -> MATCH exp match_statement .)
    PRINT           reduce using rule 47 (match -> MATCH exp match_statement .)
    LET             reduce using rule 47 (match -> MATCH exp match_statement .)
    CONTINUE        reduce using rule 47 (match -> MATCH exp match_statement .)
    BREAK           reduce using rule 47 (match -> MATCH exp match_statement .)
    RETURN          reduce using rule 47 (match -> MATCH exp match_statement .)
    IF              reduce using rule 47 (match -> MATCH exp match_statement .)
    MATCH           reduce using rule 47 (match -> MATCH exp match_statement .)
    LOOP            reduce using rule 47 (match -> MATCH exp match_statement .)
    WHILE           reduce using rule 47 (match -> MATCH exp match_statement .)
    FOR             reduce using rule 47 (match -> MATCH exp match_statement .)
    LPAR            reduce using rule 47 (match -> MATCH exp match_statement .)
    AD              reduce using rule 47 (match -> MATCH exp match_statement .)
    LCOR            reduce using rule 47 (match -> MATCH exp match_statement .)
    VEC             reduce using rule 47 (match -> MATCH exp match_statement .)
    VECTOR          reduce using rule 47 (match -> MATCH exp match_statement .)
    MUT             reduce using rule 47 (match -> MATCH exp match_statement .)
    ANDSINGLE       reduce using rule 47 (match -> MATCH exp match_statement .)
    I64             reduce using rule 47 (match -> MATCH exp match_statement .)
    F64             reduce using rule 47 (match -> MATCH exp match_statement .)
    ENTERO          reduce using rule 47 (match -> MATCH exp match_statement .)
    DECIMAL         reduce using rule 47 (match -> MATCH exp match_statement .)
    CADENA          reduce using rule 47 (match -> MATCH exp match_statement .)
    BOOLEANO        reduce using rule 47 (match -> MATCH exp match_statement .)
    CARACTER        reduce using rule 47 (match -> MATCH exp match_statement .)
    ARROW2          reduce using rule 47 (match -> MATCH exp match_statement .)
    ORSINGLE        reduce using rule 47 (match -> MATCH exp match_statement .)


state 207

    (48) match_statement -> LLLAV . lista_brazos RLLAV
    (49) match_statement -> LLLAV . RLLAV
    (50) lista_brazos -> . lista_brazos brazo
    (51) lista_brazos -> . brazo
    (52) brazo -> . lista_exp_brazos ARROW2 instruccion_match COMA
    (53) brazo -> . lista_exp_brazos ARROW2 statement COMA
    (54) brazo -> . lista_exp_brazos ARROW2 statement
    (55) lista_exp_brazos -> . lista_exp_brazos ORSINGLE exp
    (56) lista_exp_brazos -> . exp
    (110) exp -> . LPAR exp RPAR
    (111) exp -> . expmath
    (112) exp -> . expop
    (113) exp -> . exprel
    (114) exp -> . exparr
    (115) exp -> . newarray
    (116) exp -> . expvec
    (117) exp -> . exparam
    (118) exp -> . exppow
    (119) exp -> . expcast
    (120) exp -> . lista_acc
    (121) exp -> . llamada
    (122) exp -> . sentencia
    (123) exp -> . valores
    (124) exp -> . exp PUNTO exp_native
    (125) expmath -> . exp MAS exp
    (126) expmath -> . exp MENOS exp
    (127) expmath -> . exp MULTIPLICACION exp
    (128) expmath -> . exp DIVISION exp
    (129) expmath -> . exp MODULO exp
    (130) expmath -> . MENOS exp
    (133) expop -> . exp AND exp
    (134) expop -> . exp OR exp
    (135) expop -> . AD exp
    (137) exprel -> . exp IGUALI exp
    (138) exprel -> . exp DIF exp
    (139) exprel -> . exp MAYOR exp
    (140) exprel -> . exp MENOR exp
    (141) exprel -> . exp MAYORI exp
    (142) exprel -> . exp MENORI exp
    (152) exparr -> . ID lista_arr
    (155) newarray -> . LCOR lista_exp RCOR
    (156) newarray -> . LCOR auxexp PCOMA exp RCOR
    (153) expvec -> . VEC AD newarray
    (154) expvec -> . VECTOR DPUNTOS DPUNTOS exp_natarr
    (148) exparam -> . MUT ID
    (149) exparam -> . MUT valores
    (150) exparam -> . ANDSINGLE MUT ID
    (151) exparam -> . ANDSINGLE MUT valores
    (131) exppow -> . I64 DPUNTOS DPUNTOS POW LPAR exp COMA exp RPAR
    (132) exppow -> . F64 DPUNTOS DPUNTOS POWF LPAR exp COMA exp RPAR
    (136) expcast -> . exp AS tipo_var
    (92) lista_acc -> . lista_acc PUNTO ID
    (93) lista_acc -> . lista_acc PUNTO exp_native
    (94) lista_acc -> . auxacc
    (176) llamada -> . ID LPAR RPAR
    (177) llamada -> . ID LPAR lista_exp RPAR
    (37) sentencia -> . if
    (38) sentencia -> . match
    (39) sentencia -> . loop
    (40) sentencia -> . while
    (41) sentencia -> . for
    (157) valores -> . ENTERO
    (158) valores -> . DECIMAL
    (159) valores -> . CADENA
    (160) valores -> . BOOLEANO
    (161) valores -> . CARACTER
    (95) auxacc -> . exparr
    (96) auxacc -> . ID
    (42) if -> . IF exp statement else
    (47) match -> . MATCH exp match_statement
    (62) loop -> . LOOP statement
    (63) while -> . WHILE exp statement
    (64) for -> . FOR ID IN foriterative statement

    RLLAV           shift and go to state 259
    LPAR            shift and go to state 29
    MENOS           shift and go to state 43
    AD              shift and go to state 44
    ID              shift and go to state 45
    LCOR            shift and go to state 46
    VEC             shift and go to state 47
    VECTOR          shift and go to state 48
    MUT             shift and go to state 49
    ANDSINGLE       shift and go to state 50
    I64             shift and go to state 51
    F64             shift and go to state 52
    ENTERO          shift and go to state 59
    DECIMAL         shift and go to state 60
    CADENA          shift and go to state 61
    BOOLEANO        shift and go to state 62
    CARACTER        shift and go to state 63
    IF              shift and go to state 12
    MATCH           shift and go to state 64
    LOOP            shift and go to state 65
    WHILE           shift and go to state 13
    FOR             shift and go to state 66

    lista_brazos                   shift and go to state 258
    brazo                          shift and go to state 260
    lista_exp_brazos               shift and go to state 261
    exp                            shift and go to state 262
    expmath                        shift and go to state 30
    expop                          shift and go to state 31
    exprel                         shift and go to state 32
    exparr                         shift and go to state 33
    newarray                       shift and go to state 34
    expvec                         shift and go to state 35
    exparam                        shift and go to state 36
    exppow                         shift and go to state 37
    expcast                        shift and go to state 38
    lista_acc                      shift and go to state 39
    llamada                        shift and go to state 40
    sentencia                      shift and go to state 41
    valores                        shift and go to state 42
    auxacc                         shift and go to state 53
    if                             shift and go to state 54
    match                          shift and go to state 55
    loop                           shift and go to state 56
    while                          shift and go to state 57
    for                            shift and go to state 58

state 208

    (64) for -> FOR ID IN . foriterative statement
    (65) foriterative -> . exp PUNTO PUNTO exp
    (66) foriterative -> . exp
    (110) exp -> . LPAR exp RPAR
    (111) exp -> . expmath
    (112) exp -> . expop
    (113) exp -> . exprel
    (114) exp -> . exparr
    (115) exp -> . newarray
    (116) exp -> . expvec
    (117) exp -> . exparam
    (118) exp -> . exppow
    (119) exp -> . expcast
    (120) exp -> . lista_acc
    (121) exp -> . llamada
    (122) exp -> . sentencia
    (123) exp -> . valores
    (124) exp -> . exp PUNTO exp_native
    (125) expmath -> . exp MAS exp
    (126) expmath -> . exp MENOS exp
    (127) expmath -> . exp MULTIPLICACION exp
    (128) expmath -> . exp DIVISION exp
    (129) expmath -> . exp MODULO exp
    (130) expmath -> . MENOS exp
    (133) expop -> . exp AND exp
    (134) expop -> . exp OR exp
    (135) expop -> . AD exp
    (137) exprel -> . exp IGUALI exp
    (138) exprel -> . exp DIF exp
    (139) exprel -> . exp MAYOR exp
    (140) exprel -> . exp MENOR exp
    (141) exprel -> . exp MAYORI exp
    (142) exprel -> . exp MENORI exp
    (152) exparr -> . ID lista_arr
    (155) newarray -> . LCOR lista_exp RCOR
    (156) newarray -> . LCOR auxexp PCOMA exp RCOR
    (153) expvec -> . VEC AD newarray
    (154) expvec -> . VECTOR DPUNTOS DPUNTOS exp_natarr
    (148) exparam -> . MUT ID
    (149) exparam -> . MUT valores
    (150) exparam -> . ANDSINGLE MUT ID
    (151) exparam -> . ANDSINGLE MUT valores
    (131) exppow -> . I64 DPUNTOS DPUNTOS POW LPAR exp COMA exp RPAR
    (132) exppow -> . F64 DPUNTOS DPUNTOS POWF LPAR exp COMA exp RPAR
    (136) expcast -> . exp AS tipo_var
    (92) lista_acc -> . lista_acc PUNTO ID
    (93) lista_acc -> . lista_acc PUNTO exp_native
    (94) lista_acc -> . auxacc
    (176) llamada -> . ID LPAR RPAR
    (177) llamada -> . ID LPAR lista_exp RPAR
    (37) sentencia -> . if
    (38) sentencia -> . match
    (39) sentencia -> . loop
    (40) sentencia -> . while
    (41) sentencia -> . for
    (157) valores -> . ENTERO
    (158) valores -> . DECIMAL
    (159) valores -> . CADENA
    (160) valores -> . BOOLEANO
    (161) valores -> . CARACTER
    (95) auxacc -> . exparr
    (96) auxacc -> . ID
    (42) if -> . IF exp statement else
    (47) match -> . MATCH exp match_statement
    (62) loop -> . LOOP statement
    (63) while -> . WHILE exp statement
    (64) for -> . FOR ID IN foriterative statement

    LPAR            shift and go to state 29
    MENOS           shift and go to state 43
    AD              shift and go to state 44
    ID              shift and go to state 45
    LCOR            shift and go to state 46
    VEC             shift and go to state 47
    VECTOR          shift and go to state 48
    MUT             shift and go to state 49
    ANDSINGLE       shift and go to state 50
    I64             shift and go to state 51
    F64             shift and go to state 52
    ENTERO          shift and go to state 59
    DECIMAL         shift and go to state 60
    CADENA          shift and go to state 61
    BOOLEANO        shift and go to state 62
    CARACTER        shift and go to state 63
    IF              shift and go to state 12
    MATCH           shift and go to state 64
    LOOP            shift and go to state 65
    WHILE           shift and go to state 13
    FOR             shift and go to state 66

    foriterative                   shift and go to state 263
    exp                            shift and go to state 264
    expmath                        shift and go to state 30
    expop                          shift and go to state 31
    exprel                         shift and go to state 32
    exparr                         shift and go to state 33
    newarray                       shift and go to state 34
    expvec                         shift and go to state 35
    exparam                        shift and go to state 36
    exppow                         shift and go to state 37
    expcast                        shift and go to state 38
    lista_acc                      shift and go to state 39
    llamada                        shift and go to state 40
    sentencia                      shift and go to state 41
    valores                        shift and go to state 42
    auxacc                         shift and go to state 53
    if                             shift and go to state 54
    match                          shift and go to state 55
    loop                           shift and go to state 56
    while                          shift and go to state 57
    for                            shift and go to state 58

state 209

    (102) asignacion_simple -> MUT ID DPUNTOS tipo_var .

    IGUAL           reduce using rule 102 (asignacion_simple -> MUT ID DPUNTOS tipo_var .)


state 210

    (104) asignacion_simple -> MUT ID DPUNTOS ANDSINGLE . tipo_var
    (106) asignacion_simple -> MUT ID DPUNTOS ANDSINGLE . MUT tipo_var
    (165) tipo_var -> ANDSINGLE . aSTR
    (162) tipo_var -> . I64
    (163) tipo_var -> . F64
    (164) tipo_var -> . STRING
    (165) tipo_var -> . ANDSINGLE aSTR
    (166) tipo_var -> . BOOL
    (167) tipo_var -> . CHAR
    (168) tipo_var -> . USIZE
    (169) tipo_var -> . lista_arr2
    (170) tipo_var -> . LCOR tipo_var RCOR
    (171) tipo_var -> . lista_classtype
    (172) tipo_var -> . VECTOR MENOR tipo_var MAYOR
    (173) tipo_var -> . VECTOR MENOR lista_classtype MAYOR
    (107) lista_arr2 -> . LCOR tipo_var PCOMA exp RCOR
    (174) lista_classtype -> . lista_classtype DPUNTOS DPUNTOS ID
    (175) lista_classtype -> . ID

    MUT             shift and go to state 265
    aSTR            shift and go to state 213
    I64             shift and go to state 126
    F64             shift and go to state 127
    STRING          shift and go to state 128
    ANDSINGLE       shift and go to state 176
    BOOL            shift and go to state 129
    CHAR            shift and go to state 130
    USIZE           shift and go to state 131
    LCOR            shift and go to state 133
    VECTOR          shift and go to state 135
    ID              shift and go to state 123

    tipo_var                       shift and go to state 266
    lista_arr2                     shift and go to state 132
    lista_classtype                shift and go to state 134

state 211

    (103) asignacion_simple -> ID DPUNTOS ANDSINGLE tipo_var .

    IGUAL           reduce using rule 103 (asignacion_simple -> ID DPUNTOS ANDSINGLE tipo_var .)


state 212

    (105) asignacion_simple -> ID DPUNTOS ANDSINGLE MUT . tipo_var
    (162) tipo_var -> . I64
    (163) tipo_var -> . F64
    (164) tipo_var -> . STRING
    (165) tipo_var -> . ANDSINGLE aSTR
    (166) tipo_var -> . BOOL
    (167) tipo_var -> . CHAR
    (168) tipo_var -> . USIZE
    (169) tipo_var -> . lista_arr2
    (170) tipo_var -> . LCOR tipo_var RCOR
    (171) tipo_var -> . lista_classtype
    (172) tipo_var -> . VECTOR MENOR tipo_var MAYOR
    (173) tipo_var -> . VECTOR MENOR lista_classtype MAYOR
    (107) lista_arr2 -> . LCOR tipo_var PCOMA exp RCOR
    (174) lista_classtype -> . lista_classtype DPUNTOS DPUNTOS ID
    (175) lista_classtype -> . ID

    I64             shift and go to state 126
    F64             shift and go to state 127
    STRING          shift and go to state 128
    ANDSINGLE       shift and go to state 176
    BOOL            shift and go to state 129
    CHAR            shift and go to state 130
    USIZE           shift and go to state 131
    LCOR            shift and go to state 133
    VECTOR          shift and go to state 135
    ID              shift and go to state 123

    tipo_var                       shift and go to state 267
    lista_arr2                     shift and go to state 132
    lista_classtype                shift and go to state 134

state 213

    (165) tipo_var -> ANDSINGLE aSTR .

    IGUAL           reduce using rule 165 (tipo_var -> ANDSINGLE aSTR .)
    PUNTO           reduce using rule 165 (tipo_var -> ANDSINGLE aSTR .)
    MAS             reduce using rule 165 (tipo_var -> ANDSINGLE aSTR .)
    MENOS           reduce using rule 165 (tipo_var -> ANDSINGLE aSTR .)
    MULTIPLICACION  reduce using rule 165 (tipo_var -> ANDSINGLE aSTR .)
    DIVISION        reduce using rule 165 (tipo_var -> ANDSINGLE aSTR .)
    MODULO          reduce using rule 165 (tipo_var -> ANDSINGLE aSTR .)
    AND             reduce using rule 165 (tipo_var -> ANDSINGLE aSTR .)
    OR              reduce using rule 165 (tipo_var -> ANDSINGLE aSTR .)
    IGUALI          reduce using rule 165 (tipo_var -> ANDSINGLE aSTR .)
    DIF             reduce using rule 165 (tipo_var -> ANDSINGLE aSTR .)
    MAYOR           reduce using rule 165 (tipo_var -> ANDSINGLE aSTR .)
    MENOR           reduce using rule 165 (tipo_var -> ANDSINGLE aSTR .)
    MAYORI          reduce using rule 165 (tipo_var -> ANDSINGLE aSTR .)
    MENORI          reduce using rule 165 (tipo_var -> ANDSINGLE aSTR .)
    AS              reduce using rule 165 (tipo_var -> ANDSINGLE aSTR .)
    LLLAV           reduce using rule 165 (tipo_var -> ANDSINGLE aSTR .)
    PCOMA           reduce using rule 165 (tipo_var -> ANDSINGLE aSTR .)
    COMA            reduce using rule 165 (tipo_var -> ANDSINGLE aSTR .)
    RCOR            reduce using rule 165 (tipo_var -> ANDSINGLE aSTR .)
    RPAR            reduce using rule 165 (tipo_var -> ANDSINGLE aSTR .)
    RLLAV           reduce using rule 165 (tipo_var -> ANDSINGLE aSTR .)
    ID              reduce using rule 165 (tipo_var -> ANDSINGLE aSTR .)
    PRINT           reduce using rule 165 (tipo_var -> ANDSINGLE aSTR .)
    LET             reduce using rule 165 (tipo_var -> ANDSINGLE aSTR .)
    CONTINUE        reduce using rule 165 (tipo_var -> ANDSINGLE aSTR .)
    BREAK           reduce using rule 165 (tipo_var -> ANDSINGLE aSTR .)
    RETURN          reduce using rule 165 (tipo_var -> ANDSINGLE aSTR .)
    IF              reduce using rule 165 (tipo_var -> ANDSINGLE aSTR .)
    MATCH           reduce using rule 165 (tipo_var -> ANDSINGLE aSTR .)
    LOOP            reduce using rule 165 (tipo_var -> ANDSINGLE aSTR .)
    WHILE           reduce using rule 165 (tipo_var -> ANDSINGLE aSTR .)
    FOR             reduce using rule 165 (tipo_var -> ANDSINGLE aSTR .)
    LPAR            reduce using rule 165 (tipo_var -> ANDSINGLE aSTR .)
    AD              reduce using rule 165 (tipo_var -> ANDSINGLE aSTR .)
    LCOR            reduce using rule 165 (tipo_var -> ANDSINGLE aSTR .)
    VEC             reduce using rule 165 (tipo_var -> ANDSINGLE aSTR .)
    VECTOR          reduce using rule 165 (tipo_var -> ANDSINGLE aSTR .)
    MUT             reduce using rule 165 (tipo_var -> ANDSINGLE aSTR .)
    ANDSINGLE       reduce using rule 165 (tipo_var -> ANDSINGLE aSTR .)
    I64             reduce using rule 165 (tipo_var -> ANDSINGLE aSTR .)
    F64             reduce using rule 165 (tipo_var -> ANDSINGLE aSTR .)
    ENTERO          reduce using rule 165 (tipo_var -> ANDSINGLE aSTR .)
    DECIMAL         reduce using rule 165 (tipo_var -> ANDSINGLE aSTR .)
    CADENA          reduce using rule 165 (tipo_var -> ANDSINGLE aSTR .)
    BOOLEANO        reduce using rule 165 (tipo_var -> ANDSINGLE aSTR .)
    CARACTER        reduce using rule 165 (tipo_var -> ANDSINGLE aSTR .)
    ARROW2          reduce using rule 165 (tipo_var -> ANDSINGLE aSTR .)
    ORSINGLE        reduce using rule 165 (tipo_var -> ANDSINGLE aSTR .)


state 214

    (170) tipo_var -> LCOR tipo_var . RCOR
    (107) lista_arr2 -> LCOR tipo_var . PCOMA exp RCOR

    RCOR            shift and go to state 268
    PCOMA           shift and go to state 269


state 215

    (174) lista_classtype -> lista_classtype DPUNTOS . DPUNTOS ID

    DPUNTOS         shift and go to state 270


state 216

    (172) tipo_var -> VECTOR MENOR . tipo_var MAYOR
    (173) tipo_var -> VECTOR MENOR . lista_classtype MAYOR
    (162) tipo_var -> . I64
    (163) tipo_var -> . F64
    (164) tipo_var -> . STRING
    (165) tipo_var -> . ANDSINGLE aSTR
    (166) tipo_var -> . BOOL
    (167) tipo_var -> . CHAR
    (168) tipo_var -> . USIZE
    (169) tipo_var -> . lista_arr2
    (170) tipo_var -> . LCOR tipo_var RCOR
    (171) tipo_var -> . lista_classtype
    (172) tipo_var -> . VECTOR MENOR tipo_var MAYOR
    (173) tipo_var -> . VECTOR MENOR lista_classtype MAYOR
    (174) lista_classtype -> . lista_classtype DPUNTOS DPUNTOS ID
    (175) lista_classtype -> . ID
    (107) lista_arr2 -> . LCOR tipo_var PCOMA exp RCOR

    I64             shift and go to state 126
    F64             shift and go to state 127
    STRING          shift and go to state 128
    ANDSINGLE       shift and go to state 176
    BOOL            shift and go to state 129
    CHAR            shift and go to state 130
    USIZE           shift and go to state 131
    LCOR            shift and go to state 133
    VECTOR          shift and go to state 135
    ID              shift and go to state 123

    tipo_var                       shift and go to state 271
    lista_classtype                shift and go to state 272
    lista_arr2                     shift and go to state 132

state 217

    (143) expstruct -> lista_classtype LLLAV lista_att . RLLAV
    (146) lista_att -> lista_att . COMA ID DPUNTOS auxexp

    RLLAV           shift and go to state 273
    COMA            shift and go to state 274


state 218

    (144) expstruct -> lista_classtype LLLAV RLLAV .

    PCOMA           reduce using rule 144 (expstruct -> lista_classtype LLLAV RLLAV .)
    COMA            reduce using rule 144 (expstruct -> lista_classtype LLLAV RLLAV .)
    RCOR            reduce using rule 144 (expstruct -> lista_classtype LLLAV RLLAV .)
    RPAR            reduce using rule 144 (expstruct -> lista_classtype LLLAV RLLAV .)
    RLLAV           reduce using rule 144 (expstruct -> lista_classtype LLLAV RLLAV .)
    ID              reduce using rule 144 (expstruct -> lista_classtype LLLAV RLLAV .)
    PRINT           reduce using rule 144 (expstruct -> lista_classtype LLLAV RLLAV .)
    LET             reduce using rule 144 (expstruct -> lista_classtype LLLAV RLLAV .)
    CONTINUE        reduce using rule 144 (expstruct -> lista_classtype LLLAV RLLAV .)
    BREAK           reduce using rule 144 (expstruct -> lista_classtype LLLAV RLLAV .)
    RETURN          reduce using rule 144 (expstruct -> lista_classtype LLLAV RLLAV .)
    IF              reduce using rule 144 (expstruct -> lista_classtype LLLAV RLLAV .)
    MATCH           reduce using rule 144 (expstruct -> lista_classtype LLLAV RLLAV .)
    LOOP            reduce using rule 144 (expstruct -> lista_classtype LLLAV RLLAV .)
    WHILE           reduce using rule 144 (expstruct -> lista_classtype LLLAV RLLAV .)
    FOR             reduce using rule 144 (expstruct -> lista_classtype LLLAV RLLAV .)
    LPAR            reduce using rule 144 (expstruct -> lista_classtype LLLAV RLLAV .)
    MENOS           reduce using rule 144 (expstruct -> lista_classtype LLLAV RLLAV .)
    AD              reduce using rule 144 (expstruct -> lista_classtype LLLAV RLLAV .)
    LCOR            reduce using rule 144 (expstruct -> lista_classtype LLLAV RLLAV .)
    VEC             reduce using rule 144 (expstruct -> lista_classtype LLLAV RLLAV .)
    VECTOR          reduce using rule 144 (expstruct -> lista_classtype LLLAV RLLAV .)
    MUT             reduce using rule 144 (expstruct -> lista_classtype LLLAV RLLAV .)
    ANDSINGLE       reduce using rule 144 (expstruct -> lista_classtype LLLAV RLLAV .)
    I64             reduce using rule 144 (expstruct -> lista_classtype LLLAV RLLAV .)
    F64             reduce using rule 144 (expstruct -> lista_classtype LLLAV RLLAV .)
    ENTERO          reduce using rule 144 (expstruct -> lista_classtype LLLAV RLLAV .)
    DECIMAL         reduce using rule 144 (expstruct -> lista_classtype LLLAV RLLAV .)
    CADENA          reduce using rule 144 (expstruct -> lista_classtype LLLAV RLLAV .)
    BOOLEANO        reduce using rule 144 (expstruct -> lista_classtype LLLAV RLLAV .)
    CARACTER        reduce using rule 144 (expstruct -> lista_classtype LLLAV RLLAV .)


state 219

    (147) lista_att -> ID . DPUNTOS auxexp

    DPUNTOS         shift and go to state 275


state 220

    (145) expstruct -> lista_classtype DPUNTOS DPUNTOS . llamada
    (174) lista_classtype -> lista_classtype DPUNTOS DPUNTOS . ID
    (176) llamada -> . ID LPAR RPAR
    (177) llamada -> . ID LPAR lista_exp RPAR

    ID              shift and go to state 277

    llamada                        shift and go to state 276

state 221

    (87) asignacion -> ID lista_arr lista_assign2 IGUAL auxexp .

    PCOMA           reduce using rule 87 (asignacion -> ID lista_arr lista_assign2 IGUAL auxexp .)
    COMA            reduce using rule 87 (asignacion -> ID lista_arr lista_assign2 IGUAL auxexp .)


state 222

    (97) lista_arr -> lista_arr LCOR auxexp RCOR .

    IGUAL           reduce using rule 97 (lista_arr -> lista_arr LCOR auxexp RCOR .)
    LCOR            reduce using rule 97 (lista_arr -> lista_arr LCOR auxexp RCOR .)
    PUNTO           reduce using rule 97 (lista_arr -> lista_arr LCOR auxexp RCOR .)
    MAS             reduce using rule 97 (lista_arr -> lista_arr LCOR auxexp RCOR .)
    MENOS           reduce using rule 97 (lista_arr -> lista_arr LCOR auxexp RCOR .)
    MULTIPLICACION  reduce using rule 97 (lista_arr -> lista_arr LCOR auxexp RCOR .)
    DIVISION        reduce using rule 97 (lista_arr -> lista_arr LCOR auxexp RCOR .)
    MODULO          reduce using rule 97 (lista_arr -> lista_arr LCOR auxexp RCOR .)
    AND             reduce using rule 97 (lista_arr -> lista_arr LCOR auxexp RCOR .)
    OR              reduce using rule 97 (lista_arr -> lista_arr LCOR auxexp RCOR .)
    IGUALI          reduce using rule 97 (lista_arr -> lista_arr LCOR auxexp RCOR .)
    DIF             reduce using rule 97 (lista_arr -> lista_arr LCOR auxexp RCOR .)
    MAYOR           reduce using rule 97 (lista_arr -> lista_arr LCOR auxexp RCOR .)
    MENOR           reduce using rule 97 (lista_arr -> lista_arr LCOR auxexp RCOR .)
    MAYORI          reduce using rule 97 (lista_arr -> lista_arr LCOR auxexp RCOR .)
    MENORI          reduce using rule 97 (lista_arr -> lista_arr LCOR auxexp RCOR .)
    AS              reduce using rule 97 (lista_arr -> lista_arr LCOR auxexp RCOR .)
    LLLAV           reduce using rule 97 (lista_arr -> lista_arr LCOR auxexp RCOR .)
    RPAR            reduce using rule 97 (lista_arr -> lista_arr LCOR auxexp RCOR .)
    PCOMA           reduce using rule 97 (lista_arr -> lista_arr LCOR auxexp RCOR .)
    COMA            reduce using rule 97 (lista_arr -> lista_arr LCOR auxexp RCOR .)
    RCOR            reduce using rule 97 (lista_arr -> lista_arr LCOR auxexp RCOR .)
    RLLAV           reduce using rule 97 (lista_arr -> lista_arr LCOR auxexp RCOR .)
    ID              reduce using rule 97 (lista_arr -> lista_arr LCOR auxexp RCOR .)
    PRINT           reduce using rule 97 (lista_arr -> lista_arr LCOR auxexp RCOR .)
    LET             reduce using rule 97 (lista_arr -> lista_arr LCOR auxexp RCOR .)
    CONTINUE        reduce using rule 97 (lista_arr -> lista_arr LCOR auxexp RCOR .)
    BREAK           reduce using rule 97 (lista_arr -> lista_arr LCOR auxexp RCOR .)
    RETURN          reduce using rule 97 (lista_arr -> lista_arr LCOR auxexp RCOR .)
    IF              reduce using rule 97 (lista_arr -> lista_arr LCOR auxexp RCOR .)
    MATCH           reduce using rule 97 (lista_arr -> lista_arr LCOR auxexp RCOR .)
    LOOP            reduce using rule 97 (lista_arr -> lista_arr LCOR auxexp RCOR .)
    WHILE           reduce using rule 97 (lista_arr -> lista_arr LCOR auxexp RCOR .)
    FOR             reduce using rule 97 (lista_arr -> lista_arr LCOR auxexp RCOR .)
    LPAR            reduce using rule 97 (lista_arr -> lista_arr LCOR auxexp RCOR .)
    AD              reduce using rule 97 (lista_arr -> lista_arr LCOR auxexp RCOR .)
    VEC             reduce using rule 97 (lista_arr -> lista_arr LCOR auxexp RCOR .)
    VECTOR          reduce using rule 97 (lista_arr -> lista_arr LCOR auxexp RCOR .)
    MUT             reduce using rule 97 (lista_arr -> lista_arr LCOR auxexp RCOR .)
    ANDSINGLE       reduce using rule 97 (lista_arr -> lista_arr LCOR auxexp RCOR .)
    I64             reduce using rule 97 (lista_arr -> lista_arr LCOR auxexp RCOR .)
    F64             reduce using rule 97 (lista_arr -> lista_arr LCOR auxexp RCOR .)
    ENTERO          reduce using rule 97 (lista_arr -> lista_arr LCOR auxexp RCOR .)
    DECIMAL         reduce using rule 97 (lista_arr -> lista_arr LCOR auxexp RCOR .)
    CADENA          reduce using rule 97 (lista_arr -> lista_arr LCOR auxexp RCOR .)
    BOOLEANO        reduce using rule 97 (lista_arr -> lista_arr LCOR auxexp RCOR .)
    CARACTER        reduce using rule 97 (lista_arr -> lista_arr LCOR auxexp RCOR .)
    ARROW2          reduce using rule 97 (lista_arr -> lista_arr LCOR auxexp RCOR .)
    ORSINGLE        reduce using rule 97 (lista_arr -> lista_arr LCOR auxexp RCOR .)


state 223

    (192) print -> PRINT AD LPAR lista_exp RPAR .

    PCOMA           reduce using rule 192 (print -> PRINT AD LPAR lista_exp RPAR .)
    COMA            reduce using rule 192 (print -> PRINT AD LPAR lista_exp RPAR .)


state 224

    (43) else -> ELSE statement .

    LET             reduce using rule 43 (else -> ELSE statement .)
    ID              reduce using rule 43 (else -> ELSE statement .)
    PRINT           reduce using rule 43 (else -> ELSE statement .)
    IF              reduce using rule 43 (else -> ELSE statement .)
    WHILE           reduce using rule 43 (else -> ELSE statement .)
    $end            reduce using rule 43 (else -> ELSE statement .)
    PUNTO           reduce using rule 43 (else -> ELSE statement .)
    MAS             reduce using rule 43 (else -> ELSE statement .)
    MENOS           reduce using rule 43 (else -> ELSE statement .)
    MULTIPLICACION  reduce using rule 43 (else -> ELSE statement .)
    DIVISION        reduce using rule 43 (else -> ELSE statement .)
    MODULO          reduce using rule 43 (else -> ELSE statement .)
    AND             reduce using rule 43 (else -> ELSE statement .)
    OR              reduce using rule 43 (else -> ELSE statement .)
    IGUALI          reduce using rule 43 (else -> ELSE statement .)
    DIF             reduce using rule 43 (else -> ELSE statement .)
    MAYOR           reduce using rule 43 (else -> ELSE statement .)
    MENOR           reduce using rule 43 (else -> ELSE statement .)
    MAYORI          reduce using rule 43 (else -> ELSE statement .)
    MENORI          reduce using rule 43 (else -> ELSE statement .)
    AS              reduce using rule 43 (else -> ELSE statement .)
    LLLAV           reduce using rule 43 (else -> ELSE statement .)
    PCOMA           reduce using rule 43 (else -> ELSE statement .)
    COMA            reduce using rule 43 (else -> ELSE statement .)
    RCOR            reduce using rule 43 (else -> ELSE statement .)
    RPAR            reduce using rule 43 (else -> ELSE statement .)
    RLLAV           reduce using rule 43 (else -> ELSE statement .)
    CONTINUE        reduce using rule 43 (else -> ELSE statement .)
    BREAK           reduce using rule 43 (else -> ELSE statement .)
    RETURN          reduce using rule 43 (else -> ELSE statement .)
    MATCH           reduce using rule 43 (else -> ELSE statement .)
    LOOP            reduce using rule 43 (else -> ELSE statement .)
    FOR             reduce using rule 43 (else -> ELSE statement .)
    LPAR            reduce using rule 43 (else -> ELSE statement .)
    AD              reduce using rule 43 (else -> ELSE statement .)
    LCOR            reduce using rule 43 (else -> ELSE statement .)
    VEC             reduce using rule 43 (else -> ELSE statement .)
    VECTOR          reduce using rule 43 (else -> ELSE statement .)
    MUT             reduce using rule 43 (else -> ELSE statement .)
    ANDSINGLE       reduce using rule 43 (else -> ELSE statement .)
    I64             reduce using rule 43 (else -> ELSE statement .)
    F64             reduce using rule 43 (else -> ELSE statement .)
    ENTERO          reduce using rule 43 (else -> ELSE statement .)
    DECIMAL         reduce using rule 43 (else -> ELSE statement .)
    CADENA          reduce using rule 43 (else -> ELSE statement .)
    BOOLEANO        reduce using rule 43 (else -> ELSE statement .)
    CARACTER        reduce using rule 43 (else -> ELSE statement .)
    ARROW2          reduce using rule 43 (else -> ELSE statement .)
    ORSINGLE        reduce using rule 43 (else -> ELSE statement .)


state 225

    (44) else -> ELSE if .

    LET             reduce using rule 44 (else -> ELSE if .)
    ID              reduce using rule 44 (else -> ELSE if .)
    PRINT           reduce using rule 44 (else -> ELSE if .)
    IF              reduce using rule 44 (else -> ELSE if .)
    WHILE           reduce using rule 44 (else -> ELSE if .)
    $end            reduce using rule 44 (else -> ELSE if .)
    PUNTO           reduce using rule 44 (else -> ELSE if .)
    MAS             reduce using rule 44 (else -> ELSE if .)
    MENOS           reduce using rule 44 (else -> ELSE if .)
    MULTIPLICACION  reduce using rule 44 (else -> ELSE if .)
    DIVISION        reduce using rule 44 (else -> ELSE if .)
    MODULO          reduce using rule 44 (else -> ELSE if .)
    AND             reduce using rule 44 (else -> ELSE if .)
    OR              reduce using rule 44 (else -> ELSE if .)
    IGUALI          reduce using rule 44 (else -> ELSE if .)
    DIF             reduce using rule 44 (else -> ELSE if .)
    MAYOR           reduce using rule 44 (else -> ELSE if .)
    MENOR           reduce using rule 44 (else -> ELSE if .)
    MAYORI          reduce using rule 44 (else -> ELSE if .)
    MENORI          reduce using rule 44 (else -> ELSE if .)
    AS              reduce using rule 44 (else -> ELSE if .)
    LLLAV           reduce using rule 44 (else -> ELSE if .)
    PCOMA           reduce using rule 44 (else -> ELSE if .)
    COMA            reduce using rule 44 (else -> ELSE if .)
    RCOR            reduce using rule 44 (else -> ELSE if .)
    RPAR            reduce using rule 44 (else -> ELSE if .)
    RLLAV           reduce using rule 44 (else -> ELSE if .)
    CONTINUE        reduce using rule 44 (else -> ELSE if .)
    BREAK           reduce using rule 44 (else -> ELSE if .)
    RETURN          reduce using rule 44 (else -> ELSE if .)
    MATCH           reduce using rule 44 (else -> ELSE if .)
    LOOP            reduce using rule 44 (else -> ELSE if .)
    FOR             reduce using rule 44 (else -> ELSE if .)
    LPAR            reduce using rule 44 (else -> ELSE if .)
    AD              reduce using rule 44 (else -> ELSE if .)
    LCOR            reduce using rule 44 (else -> ELSE if .)
    VEC             reduce using rule 44 (else -> ELSE if .)
    VECTOR          reduce using rule 44 (else -> ELSE if .)
    MUT             reduce using rule 44 (else -> ELSE if .)
    ANDSINGLE       reduce using rule 44 (else -> ELSE if .)
    I64             reduce using rule 44 (else -> ELSE if .)
    F64             reduce using rule 44 (else -> ELSE if .)
    ENTERO          reduce using rule 44 (else -> ELSE if .)
    DECIMAL         reduce using rule 44 (else -> ELSE if .)
    CADENA          reduce using rule 44 (else -> ELSE if .)
    BOOLEANO        reduce using rule 44 (else -> ELSE if .)
    CARACTER        reduce using rule 44 (else -> ELSE if .)
    ARROW2          reduce using rule 44 (else -> ELSE if .)
    ORSINGLE        reduce using rule 44 (else -> ELSE if .)


state 226

    (178) exp_native -> TOSTRING LPAR . RPAR

    RPAR            shift and go to state 278


state 227

    (179) exp_native -> TOOWNED LPAR . RPAR

    RPAR            shift and go to state 279


state 228

    (180) exp_native -> CLONE LPAR . RPAR

    RPAR            shift and go to state 280


state 229

    (181) exp_native -> LEN LPAR . RPAR

    RPAR            shift and go to state 281


state 230

    (182) exp_native -> CAPACITY LPAR . RPAR

    RPAR            shift and go to state 282


state 231

    (183) exp_native -> REMOVE LPAR . auxexp RPAR
    (108) auxexp -> . expstruct
    (109) auxexp -> . exp
    (143) expstruct -> . lista_classtype LLLAV lista_att RLLAV
    (144) expstruct -> . lista_classtype LLLAV RLLAV
    (145) expstruct -> . lista_classtype DPUNTOS DPUNTOS llamada
    (110) exp -> . LPAR exp RPAR
    (111) exp -> . expmath
    (112) exp -> . expop
    (113) exp -> . exprel
    (114) exp -> . exparr
    (115) exp -> . newarray
    (116) exp -> . expvec
    (117) exp -> . exparam
    (118) exp -> . exppow
    (119) exp -> . expcast
    (120) exp -> . lista_acc
    (121) exp -> . llamada
    (122) exp -> . sentencia
    (123) exp -> . valores
    (124) exp -> . exp PUNTO exp_native
    (174) lista_classtype -> . lista_classtype DPUNTOS DPUNTOS ID
    (175) lista_classtype -> . ID
    (125) expmath -> . exp MAS exp
    (126) expmath -> . exp MENOS exp
    (127) expmath -> . exp MULTIPLICACION exp
    (128) expmath -> . exp DIVISION exp
    (129) expmath -> . exp MODULO exp
    (130) expmath -> . MENOS exp
    (133) expop -> . exp AND exp
    (134) expop -> . exp OR exp
    (135) expop -> . AD exp
    (137) exprel -> . exp IGUALI exp
    (138) exprel -> . exp DIF exp
    (139) exprel -> . exp MAYOR exp
    (140) exprel -> . exp MENOR exp
    (141) exprel -> . exp MAYORI exp
    (142) exprel -> . exp MENORI exp
    (152) exparr -> . ID lista_arr
    (155) newarray -> . LCOR lista_exp RCOR
    (156) newarray -> . LCOR auxexp PCOMA exp RCOR
    (153) expvec -> . VEC AD newarray
    (154) expvec -> . VECTOR DPUNTOS DPUNTOS exp_natarr
    (148) exparam -> . MUT ID
    (149) exparam -> . MUT valores
    (150) exparam -> . ANDSINGLE MUT ID
    (151) exparam -> . ANDSINGLE MUT valores
    (131) exppow -> . I64 DPUNTOS DPUNTOS POW LPAR exp COMA exp RPAR
    (132) exppow -> . F64 DPUNTOS DPUNTOS POWF LPAR exp COMA exp RPAR
    (136) expcast -> . exp AS tipo_var
    (92) lista_acc -> . lista_acc PUNTO ID
    (93) lista_acc -> . lista_acc PUNTO exp_native
    (94) lista_acc -> . auxacc
    (176) llamada -> . ID LPAR RPAR
    (177) llamada -> . ID LPAR lista_exp RPAR
    (37) sentencia -> . if
    (38) sentencia -> . match
    (39) sentencia -> . loop
    (40) sentencia -> . while
    (41) sentencia -> . for
    (157) valores -> . ENTERO
    (158) valores -> . DECIMAL
    (159) valores -> . CADENA
    (160) valores -> . BOOLEANO
    (161) valores -> . CARACTER
    (95) auxacc -> . exparr
    (96) auxacc -> . ID
    (42) if -> . IF exp statement else
    (47) match -> . MATCH exp match_statement
    (62) loop -> . LOOP statement
    (63) while -> . WHILE exp statement
    (64) for -> . FOR ID IN foriterative statement

    LPAR            shift and go to state 29
    ID              shift and go to state 72
    MENOS           shift and go to state 43
    AD              shift and go to state 44
    LCOR            shift and go to state 46
    VEC             shift and go to state 47
    VECTOR          shift and go to state 48
    MUT             shift and go to state 49
    ANDSINGLE       shift and go to state 50
    I64             shift and go to state 51
    F64             shift and go to state 52
    ENTERO          shift and go to state 59
    DECIMAL         shift and go to state 60
    CADENA          shift and go to state 61
    BOOLEANO        shift and go to state 62
    CARACTER        shift and go to state 63
    IF              shift and go to state 12
    MATCH           shift and go to state 64
    LOOP            shift and go to state 65
    WHILE           shift and go to state 13
    FOR             shift and go to state 66

    auxexp                         shift and go to state 283
    expstruct                      shift and go to state 74
    exp                            shift and go to state 75
    lista_classtype                shift and go to state 76
    llamada                        shift and go to state 40
    expmath                        shift and go to state 30
    expop                          shift and go to state 31
    exprel                         shift and go to state 32
    exparr                         shift and go to state 33
    newarray                       shift and go to state 34
    expvec                         shift and go to state 35
    exparam                        shift and go to state 36
    exppow                         shift and go to state 37
    expcast                        shift and go to state 38
    lista_acc                      shift and go to state 39
    sentencia                      shift and go to state 41
    valores                        shift and go to state 42
    auxacc                         shift and go to state 53
    if                             shift and go to state 54
    match                          shift and go to state 55
    loop                           shift and go to state 56
    while                          shift and go to state 57
    for                            shift and go to state 58

state 232

    (184) exp_native -> CONTAINS LPAR . ANDSINGLE auxexp RPAR

    ANDSINGLE       shift and go to state 284


state 233

    (185) exp_native -> PUSH LPAR . auxexp RPAR
    (108) auxexp -> . expstruct
    (109) auxexp -> . exp
    (143) expstruct -> . lista_classtype LLLAV lista_att RLLAV
    (144) expstruct -> . lista_classtype LLLAV RLLAV
    (145) expstruct -> . lista_classtype DPUNTOS DPUNTOS llamada
    (110) exp -> . LPAR exp RPAR
    (111) exp -> . expmath
    (112) exp -> . expop
    (113) exp -> . exprel
    (114) exp -> . exparr
    (115) exp -> . newarray
    (116) exp -> . expvec
    (117) exp -> . exparam
    (118) exp -> . exppow
    (119) exp -> . expcast
    (120) exp -> . lista_acc
    (121) exp -> . llamada
    (122) exp -> . sentencia
    (123) exp -> . valores
    (124) exp -> . exp PUNTO exp_native
    (174) lista_classtype -> . lista_classtype DPUNTOS DPUNTOS ID
    (175) lista_classtype -> . ID
    (125) expmath -> . exp MAS exp
    (126) expmath -> . exp MENOS exp
    (127) expmath -> . exp MULTIPLICACION exp
    (128) expmath -> . exp DIVISION exp
    (129) expmath -> . exp MODULO exp
    (130) expmath -> . MENOS exp
    (133) expop -> . exp AND exp
    (134) expop -> . exp OR exp
    (135) expop -> . AD exp
    (137) exprel -> . exp IGUALI exp
    (138) exprel -> . exp DIF exp
    (139) exprel -> . exp MAYOR exp
    (140) exprel -> . exp MENOR exp
    (141) exprel -> . exp MAYORI exp
    (142) exprel -> . exp MENORI exp
    (152) exparr -> . ID lista_arr
    (155) newarray -> . LCOR lista_exp RCOR
    (156) newarray -> . LCOR auxexp PCOMA exp RCOR
    (153) expvec -> . VEC AD newarray
    (154) expvec -> . VECTOR DPUNTOS DPUNTOS exp_natarr
    (148) exparam -> . MUT ID
    (149) exparam -> . MUT valores
    (150) exparam -> . ANDSINGLE MUT ID
    (151) exparam -> . ANDSINGLE MUT valores
    (131) exppow -> . I64 DPUNTOS DPUNTOS POW LPAR exp COMA exp RPAR
    (132) exppow -> . F64 DPUNTOS DPUNTOS POWF LPAR exp COMA exp RPAR
    (136) expcast -> . exp AS tipo_var
    (92) lista_acc -> . lista_acc PUNTO ID
    (93) lista_acc -> . lista_acc PUNTO exp_native
    (94) lista_acc -> . auxacc
    (176) llamada -> . ID LPAR RPAR
    (177) llamada -> . ID LPAR lista_exp RPAR
    (37) sentencia -> . if
    (38) sentencia -> . match
    (39) sentencia -> . loop
    (40) sentencia -> . while
    (41) sentencia -> . for
    (157) valores -> . ENTERO
    (158) valores -> . DECIMAL
    (159) valores -> . CADENA
    (160) valores -> . BOOLEANO
    (161) valores -> . CARACTER
    (95) auxacc -> . exparr
    (96) auxacc -> . ID
    (42) if -> . IF exp statement else
    (47) match -> . MATCH exp match_statement
    (62) loop -> . LOOP statement
    (63) while -> . WHILE exp statement
    (64) for -> . FOR ID IN foriterative statement

    LPAR            shift and go to state 29
    ID              shift and go to state 72
    MENOS           shift and go to state 43
    AD              shift and go to state 44
    LCOR            shift and go to state 46
    VEC             shift and go to state 47
    VECTOR          shift and go to state 48
    MUT             shift and go to state 49
    ANDSINGLE       shift and go to state 50
    I64             shift and go to state 51
    F64             shift and go to state 52
    ENTERO          shift and go to state 59
    DECIMAL         shift and go to state 60
    CADENA          shift and go to state 61
    BOOLEANO        shift and go to state 62
    CARACTER        shift and go to state 63
    IF              shift and go to state 12
    MATCH           shift and go to state 64
    LOOP            shift and go to state 65
    WHILE           shift and go to state 13
    FOR             shift and go to state 66

    auxexp                         shift and go to state 285
    expstruct                      shift and go to state 74
    exp                            shift and go to state 75
    lista_classtype                shift and go to state 76
    llamada                        shift and go to state 40
    expmath                        shift and go to state 30
    expop                          shift and go to state 31
    exprel                         shift and go to state 32
    exparr                         shift and go to state 33
    newarray                       shift and go to state 34
    expvec                         shift and go to state 35
    exparam                        shift and go to state 36
    exppow                         shift and go to state 37
    expcast                        shift and go to state 38
    lista_acc                      shift and go to state 39
    sentencia                      shift and go to state 41
    valores                        shift and go to state 42
    auxacc                         shift and go to state 53
    if                             shift and go to state 54
    match                          shift and go to state 55
    loop                           shift and go to state 56
    while                          shift and go to state 57
    for                            shift and go to state 58

state 234

    (186) exp_native -> INSERT LPAR . lista_exp RPAR
    (99) lista_exp -> . lista_exp COMA auxexp
    (100) lista_exp -> . auxexp
    (108) auxexp -> . expstruct
    (109) auxexp -> . exp
    (143) expstruct -> . lista_classtype LLLAV lista_att RLLAV
    (144) expstruct -> . lista_classtype LLLAV RLLAV
    (145) expstruct -> . lista_classtype DPUNTOS DPUNTOS llamada
    (110) exp -> . LPAR exp RPAR
    (111) exp -> . expmath
    (112) exp -> . expop
    (113) exp -> . exprel
    (114) exp -> . exparr
    (115) exp -> . newarray
    (116) exp -> . expvec
    (117) exp -> . exparam
    (118) exp -> . exppow
    (119) exp -> . expcast
    (120) exp -> . lista_acc
    (121) exp -> . llamada
    (122) exp -> . sentencia
    (123) exp -> . valores
    (124) exp -> . exp PUNTO exp_native
    (174) lista_classtype -> . lista_classtype DPUNTOS DPUNTOS ID
    (175) lista_classtype -> . ID
    (125) expmath -> . exp MAS exp
    (126) expmath -> . exp MENOS exp
    (127) expmath -> . exp MULTIPLICACION exp
    (128) expmath -> . exp DIVISION exp
    (129) expmath -> . exp MODULO exp
    (130) expmath -> . MENOS exp
    (133) expop -> . exp AND exp
    (134) expop -> . exp OR exp
    (135) expop -> . AD exp
    (137) exprel -> . exp IGUALI exp
    (138) exprel -> . exp DIF exp
    (139) exprel -> . exp MAYOR exp
    (140) exprel -> . exp MENOR exp
    (141) exprel -> . exp MAYORI exp
    (142) exprel -> . exp MENORI exp
    (152) exparr -> . ID lista_arr
    (155) newarray -> . LCOR lista_exp RCOR
    (156) newarray -> . LCOR auxexp PCOMA exp RCOR
    (153) expvec -> . VEC AD newarray
    (154) expvec -> . VECTOR DPUNTOS DPUNTOS exp_natarr
    (148) exparam -> . MUT ID
    (149) exparam -> . MUT valores
    (150) exparam -> . ANDSINGLE MUT ID
    (151) exparam -> . ANDSINGLE MUT valores
    (131) exppow -> . I64 DPUNTOS DPUNTOS POW LPAR exp COMA exp RPAR
    (132) exppow -> . F64 DPUNTOS DPUNTOS POWF LPAR exp COMA exp RPAR
    (136) expcast -> . exp AS tipo_var
    (92) lista_acc -> . lista_acc PUNTO ID
    (93) lista_acc -> . lista_acc PUNTO exp_native
    (94) lista_acc -> . auxacc
    (176) llamada -> . ID LPAR RPAR
    (177) llamada -> . ID LPAR lista_exp RPAR
    (37) sentencia -> . if
    (38) sentencia -> . match
    (39) sentencia -> . loop
    (40) sentencia -> . while
    (41) sentencia -> . for
    (157) valores -> . ENTERO
    (158) valores -> . DECIMAL
    (159) valores -> . CADENA
    (160) valores -> . BOOLEANO
    (161) valores -> . CARACTER
    (95) auxacc -> . exparr
    (96) auxacc -> . ID
    (42) if -> . IF exp statement else
    (47) match -> . MATCH exp match_statement
    (62) loop -> . LOOP statement
    (63) while -> . WHILE exp statement
    (64) for -> . FOR ID IN foriterative statement

    LPAR            shift and go to state 29
    ID              shift and go to state 72
    MENOS           shift and go to state 43
    AD              shift and go to state 44
    LCOR            shift and go to state 46
    VEC             shift and go to state 47
    VECTOR          shift and go to state 48
    MUT             shift and go to state 49
    ANDSINGLE       shift and go to state 50
    I64             shift and go to state 51
    F64             shift and go to state 52
    ENTERO          shift and go to state 59
    DECIMAL         shift and go to state 60
    CADENA          shift and go to state 61
    BOOLEANO        shift and go to state 62
    CARACTER        shift and go to state 63
    IF              shift and go to state 12
    MATCH           shift and go to state 64
    LOOP            shift and go to state 65
    WHILE           shift and go to state 13
    FOR             shift and go to state 66

    lista_exp                      shift and go to state 286
    auxexp                         shift and go to state 145
    expstruct                      shift and go to state 74
    exp                            shift and go to state 75
    lista_classtype                shift and go to state 76
    llamada                        shift and go to state 40
    expmath                        shift and go to state 30
    expop                          shift and go to state 31
    exprel                         shift and go to state 32
    exparr                         shift and go to state 33
    newarray                       shift and go to state 34
    expvec                         shift and go to state 35
    exparam                        shift and go to state 36
    exppow                         shift and go to state 37
    expcast                        shift and go to state 38
    lista_acc                      shift and go to state 39
    sentencia                      shift and go to state 41
    valores                        shift and go to state 42
    auxacc                         shift and go to state 53
    if                             shift and go to state 54
    match                          shift and go to state 55
    loop                           shift and go to state 56
    while                          shift and go to state 57
    for                            shift and go to state 58

state 235

    (187) exp_native -> CHARS LPAR . RPAR

    RPAR            shift and go to state 287


state 236

    (188) exp_native -> SQRT LPAR . RPAR

    RPAR            shift and go to state 288


state 237

    (189) exp_native -> ABS LPAR . RPAR

    RPAR            shift and go to state 289


state 238

    (73) statement -> LLLAV instrucciones_l RLLAV .

    ELSE            reduce using rule 73 (statement -> LLLAV instrucciones_l RLLAV .)
    LET             reduce using rule 73 (statement -> LLLAV instrucciones_l RLLAV .)
    ID              reduce using rule 73 (statement -> LLLAV instrucciones_l RLLAV .)
    PRINT           reduce using rule 73 (statement -> LLLAV instrucciones_l RLLAV .)
    IF              reduce using rule 73 (statement -> LLLAV instrucciones_l RLLAV .)
    WHILE           reduce using rule 73 (statement -> LLLAV instrucciones_l RLLAV .)
    $end            reduce using rule 73 (statement -> LLLAV instrucciones_l RLLAV .)
    PUNTO           reduce using rule 73 (statement -> LLLAV instrucciones_l RLLAV .)
    MAS             reduce using rule 73 (statement -> LLLAV instrucciones_l RLLAV .)
    MENOS           reduce using rule 73 (statement -> LLLAV instrucciones_l RLLAV .)
    MULTIPLICACION  reduce using rule 73 (statement -> LLLAV instrucciones_l RLLAV .)
    DIVISION        reduce using rule 73 (statement -> LLLAV instrucciones_l RLLAV .)
    MODULO          reduce using rule 73 (statement -> LLLAV instrucciones_l RLLAV .)
    AND             reduce using rule 73 (statement -> LLLAV instrucciones_l RLLAV .)
    OR              reduce using rule 73 (statement -> LLLAV instrucciones_l RLLAV .)
    IGUALI          reduce using rule 73 (statement -> LLLAV instrucciones_l RLLAV .)
    DIF             reduce using rule 73 (statement -> LLLAV instrucciones_l RLLAV .)
    MAYOR           reduce using rule 73 (statement -> LLLAV instrucciones_l RLLAV .)
    MENOR           reduce using rule 73 (statement -> LLLAV instrucciones_l RLLAV .)
    MAYORI          reduce using rule 73 (statement -> LLLAV instrucciones_l RLLAV .)
    MENORI          reduce using rule 73 (statement -> LLLAV instrucciones_l RLLAV .)
    AS              reduce using rule 73 (statement -> LLLAV instrucciones_l RLLAV .)
    LLLAV           reduce using rule 73 (statement -> LLLAV instrucciones_l RLLAV .)
    PCOMA           reduce using rule 73 (statement -> LLLAV instrucciones_l RLLAV .)
    COMA            reduce using rule 73 (statement -> LLLAV instrucciones_l RLLAV .)
    RCOR            reduce using rule 73 (statement -> LLLAV instrucciones_l RLLAV .)
    RPAR            reduce using rule 73 (statement -> LLLAV instrucciones_l RLLAV .)
    RLLAV           reduce using rule 73 (statement -> LLLAV instrucciones_l RLLAV .)
    CONTINUE        reduce using rule 73 (statement -> LLLAV instrucciones_l RLLAV .)
    BREAK           reduce using rule 73 (statement -> LLLAV instrucciones_l RLLAV .)
    RETURN          reduce using rule 73 (statement -> LLLAV instrucciones_l RLLAV .)
    MATCH           reduce using rule 73 (statement -> LLLAV instrucciones_l RLLAV .)
    LOOP            reduce using rule 73 (statement -> LLLAV instrucciones_l RLLAV .)
    FOR             reduce using rule 73 (statement -> LLLAV instrucciones_l RLLAV .)
    LPAR            reduce using rule 73 (statement -> LLLAV instrucciones_l RLLAV .)
    AD              reduce using rule 73 (statement -> LLLAV instrucciones_l RLLAV .)
    LCOR            reduce using rule 73 (statement -> LLLAV instrucciones_l RLLAV .)
    VEC             reduce using rule 73 (statement -> LLLAV instrucciones_l RLLAV .)
    VECTOR          reduce using rule 73 (statement -> LLLAV instrucciones_l RLLAV .)
    MUT             reduce using rule 73 (statement -> LLLAV instrucciones_l RLLAV .)
    ANDSINGLE       reduce using rule 73 (statement -> LLLAV instrucciones_l RLLAV .)
    I64             reduce using rule 73 (statement -> LLLAV instrucciones_l RLLAV .)
    F64             reduce using rule 73 (statement -> LLLAV instrucciones_l RLLAV .)
    ENTERO          reduce using rule 73 (statement -> LLLAV instrucciones_l RLLAV .)
    DECIMAL         reduce using rule 73 (statement -> LLLAV instrucciones_l RLLAV .)
    CADENA          reduce using rule 73 (statement -> LLLAV instrucciones_l RLLAV .)
    BOOLEANO        reduce using rule 73 (statement -> LLLAV instrucciones_l RLLAV .)
    CARACTER        reduce using rule 73 (statement -> LLLAV instrucciones_l RLLAV .)
    ARROW2          reduce using rule 73 (statement -> LLLAV instrucciones_l RLLAV .)
    ORSINGLE        reduce using rule 73 (statement -> LLLAV instrucciones_l RLLAV .)


state 239

    (9) instrucciones_l -> instrucciones_l instruccion_l .

    RLLAV           reduce using rule 9 (instrucciones_l -> instrucciones_l instruccion_l .)
    ID              reduce using rule 9 (instrucciones_l -> instrucciones_l instruccion_l .)
    PRINT           reduce using rule 9 (instrucciones_l -> instrucciones_l instruccion_l .)
    LET             reduce using rule 9 (instrucciones_l -> instrucciones_l instruccion_l .)
    CONTINUE        reduce using rule 9 (instrucciones_l -> instrucciones_l instruccion_l .)
    BREAK           reduce using rule 9 (instrucciones_l -> instrucciones_l instruccion_l .)
    RETURN          reduce using rule 9 (instrucciones_l -> instrucciones_l instruccion_l .)
    IF              reduce using rule 9 (instrucciones_l -> instrucciones_l instruccion_l .)
    MATCH           reduce using rule 9 (instrucciones_l -> instrucciones_l instruccion_l .)
    LOOP            reduce using rule 9 (instrucciones_l -> instrucciones_l instruccion_l .)
    WHILE           reduce using rule 9 (instrucciones_l -> instrucciones_l instruccion_l .)
    FOR             reduce using rule 9 (instrucciones_l -> instrucciones_l instruccion_l .)
    LPAR            reduce using rule 9 (instrucciones_l -> instrucciones_l instruccion_l .)
    MENOS           reduce using rule 9 (instrucciones_l -> instrucciones_l instruccion_l .)
    AD              reduce using rule 9 (instrucciones_l -> instrucciones_l instruccion_l .)
    LCOR            reduce using rule 9 (instrucciones_l -> instrucciones_l instruccion_l .)
    VEC             reduce using rule 9 (instrucciones_l -> instrucciones_l instruccion_l .)
    VECTOR          reduce using rule 9 (instrucciones_l -> instrucciones_l instruccion_l .)
    MUT             reduce using rule 9 (instrucciones_l -> instrucciones_l instruccion_l .)
    ANDSINGLE       reduce using rule 9 (instrucciones_l -> instrucciones_l instruccion_l .)
    I64             reduce using rule 9 (instrucciones_l -> instrucciones_l instruccion_l .)
    F64             reduce using rule 9 (instrucciones_l -> instrucciones_l instruccion_l .)
    ENTERO          reduce using rule 9 (instrucciones_l -> instrucciones_l instruccion_l .)
    DECIMAL         reduce using rule 9 (instrucciones_l -> instrucciones_l instruccion_l .)
    CADENA          reduce using rule 9 (instrucciones_l -> instrucciones_l instruccion_l .)
    BOOLEANO        reduce using rule 9 (instrucciones_l -> instrucciones_l instruccion_l .)
    CARACTER        reduce using rule 9 (instrucciones_l -> instrucciones_l instruccion_l .)


state 240

    (11) instruccion_l -> print PCOMA .

    RLLAV           reduce using rule 11 (instruccion_l -> print PCOMA .)
    ID              reduce using rule 11 (instruccion_l -> print PCOMA .)
    PRINT           reduce using rule 11 (instruccion_l -> print PCOMA .)
    LET             reduce using rule 11 (instruccion_l -> print PCOMA .)
    CONTINUE        reduce using rule 11 (instruccion_l -> print PCOMA .)
    BREAK           reduce using rule 11 (instruccion_l -> print PCOMA .)
    RETURN          reduce using rule 11 (instruccion_l -> print PCOMA .)
    IF              reduce using rule 11 (instruccion_l -> print PCOMA .)
    MATCH           reduce using rule 11 (instruccion_l -> print PCOMA .)
    LOOP            reduce using rule 11 (instruccion_l -> print PCOMA .)
    WHILE           reduce using rule 11 (instruccion_l -> print PCOMA .)
    FOR             reduce using rule 11 (instruccion_l -> print PCOMA .)
    LPAR            reduce using rule 11 (instruccion_l -> print PCOMA .)
    MENOS           reduce using rule 11 (instruccion_l -> print PCOMA .)
    AD              reduce using rule 11 (instruccion_l -> print PCOMA .)
    LCOR            reduce using rule 11 (instruccion_l -> print PCOMA .)
    VEC             reduce using rule 11 (instruccion_l -> print PCOMA .)
    VECTOR          reduce using rule 11 (instruccion_l -> print PCOMA .)
    MUT             reduce using rule 11 (instruccion_l -> print PCOMA .)
    ANDSINGLE       reduce using rule 11 (instruccion_l -> print PCOMA .)
    I64             reduce using rule 11 (instruccion_l -> print PCOMA .)
    F64             reduce using rule 11 (instruccion_l -> print PCOMA .)
    ENTERO          reduce using rule 11 (instruccion_l -> print PCOMA .)
    DECIMAL         reduce using rule 11 (instruccion_l -> print PCOMA .)
    CADENA          reduce using rule 11 (instruccion_l -> print PCOMA .)
    BOOLEANO        reduce using rule 11 (instruccion_l -> print PCOMA .)
    CARACTER        reduce using rule 11 (instruccion_l -> print PCOMA .)


state 241

    (12) instruccion_l -> declaracion PCOMA .

    RLLAV           reduce using rule 12 (instruccion_l -> declaracion PCOMA .)
    ID              reduce using rule 12 (instruccion_l -> declaracion PCOMA .)
    PRINT           reduce using rule 12 (instruccion_l -> declaracion PCOMA .)
    LET             reduce using rule 12 (instruccion_l -> declaracion PCOMA .)
    CONTINUE        reduce using rule 12 (instruccion_l -> declaracion PCOMA .)
    BREAK           reduce using rule 12 (instruccion_l -> declaracion PCOMA .)
    RETURN          reduce using rule 12 (instruccion_l -> declaracion PCOMA .)
    IF              reduce using rule 12 (instruccion_l -> declaracion PCOMA .)
    MATCH           reduce using rule 12 (instruccion_l -> declaracion PCOMA .)
    LOOP            reduce using rule 12 (instruccion_l -> declaracion PCOMA .)
    WHILE           reduce using rule 12 (instruccion_l -> declaracion PCOMA .)
    FOR             reduce using rule 12 (instruccion_l -> declaracion PCOMA .)
    LPAR            reduce using rule 12 (instruccion_l -> declaracion PCOMA .)
    MENOS           reduce using rule 12 (instruccion_l -> declaracion PCOMA .)
    AD              reduce using rule 12 (instruccion_l -> declaracion PCOMA .)
    LCOR            reduce using rule 12 (instruccion_l -> declaracion PCOMA .)
    VEC             reduce using rule 12 (instruccion_l -> declaracion PCOMA .)
    VECTOR          reduce using rule 12 (instruccion_l -> declaracion PCOMA .)
    MUT             reduce using rule 12 (instruccion_l -> declaracion PCOMA .)
    ANDSINGLE       reduce using rule 12 (instruccion_l -> declaracion PCOMA .)
    I64             reduce using rule 12 (instruccion_l -> declaracion PCOMA .)
    F64             reduce using rule 12 (instruccion_l -> declaracion PCOMA .)
    ENTERO          reduce using rule 12 (instruccion_l -> declaracion PCOMA .)
    DECIMAL         reduce using rule 12 (instruccion_l -> declaracion PCOMA .)
    CADENA          reduce using rule 12 (instruccion_l -> declaracion PCOMA .)
    BOOLEANO        reduce using rule 12 (instruccion_l -> declaracion PCOMA .)
    CARACTER        reduce using rule 12 (instruccion_l -> declaracion PCOMA .)


state 242

    (13) instruccion_l -> asignacion PCOMA .

    RLLAV           reduce using rule 13 (instruccion_l -> asignacion PCOMA .)
    ID              reduce using rule 13 (instruccion_l -> asignacion PCOMA .)
    PRINT           reduce using rule 13 (instruccion_l -> asignacion PCOMA .)
    LET             reduce using rule 13 (instruccion_l -> asignacion PCOMA .)
    CONTINUE        reduce using rule 13 (instruccion_l -> asignacion PCOMA .)
    BREAK           reduce using rule 13 (instruccion_l -> asignacion PCOMA .)
    RETURN          reduce using rule 13 (instruccion_l -> asignacion PCOMA .)
    IF              reduce using rule 13 (instruccion_l -> asignacion PCOMA .)
    MATCH           reduce using rule 13 (instruccion_l -> asignacion PCOMA .)
    LOOP            reduce using rule 13 (instruccion_l -> asignacion PCOMA .)
    WHILE           reduce using rule 13 (instruccion_l -> asignacion PCOMA .)
    FOR             reduce using rule 13 (instruccion_l -> asignacion PCOMA .)
    LPAR            reduce using rule 13 (instruccion_l -> asignacion PCOMA .)
    MENOS           reduce using rule 13 (instruccion_l -> asignacion PCOMA .)
    AD              reduce using rule 13 (instruccion_l -> asignacion PCOMA .)
    LCOR            reduce using rule 13 (instruccion_l -> asignacion PCOMA .)
    VEC             reduce using rule 13 (instruccion_l -> asignacion PCOMA .)
    VECTOR          reduce using rule 13 (instruccion_l -> asignacion PCOMA .)
    MUT             reduce using rule 13 (instruccion_l -> asignacion PCOMA .)
    ANDSINGLE       reduce using rule 13 (instruccion_l -> asignacion PCOMA .)
    I64             reduce using rule 13 (instruccion_l -> asignacion PCOMA .)
    F64             reduce using rule 13 (instruccion_l -> asignacion PCOMA .)
    ENTERO          reduce using rule 13 (instruccion_l -> asignacion PCOMA .)
    DECIMAL         reduce using rule 13 (instruccion_l -> asignacion PCOMA .)
    CADENA          reduce using rule 13 (instruccion_l -> asignacion PCOMA .)
    BOOLEANO        reduce using rule 13 (instruccion_l -> asignacion PCOMA .)
    CARACTER        reduce using rule 13 (instruccion_l -> asignacion PCOMA .)


state 243

    (14) instruccion_l -> llamada PCOMA .

    RLLAV           reduce using rule 14 (instruccion_l -> llamada PCOMA .)
    ID              reduce using rule 14 (instruccion_l -> llamada PCOMA .)
    PRINT           reduce using rule 14 (instruccion_l -> llamada PCOMA .)
    LET             reduce using rule 14 (instruccion_l -> llamada PCOMA .)
    CONTINUE        reduce using rule 14 (instruccion_l -> llamada PCOMA .)
    BREAK           reduce using rule 14 (instruccion_l -> llamada PCOMA .)
    RETURN          reduce using rule 14 (instruccion_l -> llamada PCOMA .)
    IF              reduce using rule 14 (instruccion_l -> llamada PCOMA .)
    MATCH           reduce using rule 14 (instruccion_l -> llamada PCOMA .)
    LOOP            reduce using rule 14 (instruccion_l -> llamada PCOMA .)
    WHILE           reduce using rule 14 (instruccion_l -> llamada PCOMA .)
    FOR             reduce using rule 14 (instruccion_l -> llamada PCOMA .)
    LPAR            reduce using rule 14 (instruccion_l -> llamada PCOMA .)
    MENOS           reduce using rule 14 (instruccion_l -> llamada PCOMA .)
    AD              reduce using rule 14 (instruccion_l -> llamada PCOMA .)
    LCOR            reduce using rule 14 (instruccion_l -> llamada PCOMA .)
    VEC             reduce using rule 14 (instruccion_l -> llamada PCOMA .)
    VECTOR          reduce using rule 14 (instruccion_l -> llamada PCOMA .)
    MUT             reduce using rule 14 (instruccion_l -> llamada PCOMA .)
    ANDSINGLE       reduce using rule 14 (instruccion_l -> llamada PCOMA .)
    I64             reduce using rule 14 (instruccion_l -> llamada PCOMA .)
    F64             reduce using rule 14 (instruccion_l -> llamada PCOMA .)
    ENTERO          reduce using rule 14 (instruccion_l -> llamada PCOMA .)
    DECIMAL         reduce using rule 14 (instruccion_l -> llamada PCOMA .)
    CADENA          reduce using rule 14 (instruccion_l -> llamada PCOMA .)
    BOOLEANO        reduce using rule 14 (instruccion_l -> llamada PCOMA .)
    CARACTER        reduce using rule 14 (instruccion_l -> llamada PCOMA .)


state 244

    (15) instruccion_l -> expstruct PCOMA .

    RLLAV           reduce using rule 15 (instruccion_l -> expstruct PCOMA .)
    ID              reduce using rule 15 (instruccion_l -> expstruct PCOMA .)
    PRINT           reduce using rule 15 (instruccion_l -> expstruct PCOMA .)
    LET             reduce using rule 15 (instruccion_l -> expstruct PCOMA .)
    CONTINUE        reduce using rule 15 (instruccion_l -> expstruct PCOMA .)
    BREAK           reduce using rule 15 (instruccion_l -> expstruct PCOMA .)
    RETURN          reduce using rule 15 (instruccion_l -> expstruct PCOMA .)
    IF              reduce using rule 15 (instruccion_l -> expstruct PCOMA .)
    MATCH           reduce using rule 15 (instruccion_l -> expstruct PCOMA .)
    LOOP            reduce using rule 15 (instruccion_l -> expstruct PCOMA .)
    WHILE           reduce using rule 15 (instruccion_l -> expstruct PCOMA .)
    FOR             reduce using rule 15 (instruccion_l -> expstruct PCOMA .)
    LPAR            reduce using rule 15 (instruccion_l -> expstruct PCOMA .)
    MENOS           reduce using rule 15 (instruccion_l -> expstruct PCOMA .)
    AD              reduce using rule 15 (instruccion_l -> expstruct PCOMA .)
    LCOR            reduce using rule 15 (instruccion_l -> expstruct PCOMA .)
    VEC             reduce using rule 15 (instruccion_l -> expstruct PCOMA .)
    VECTOR          reduce using rule 15 (instruccion_l -> expstruct PCOMA .)
    MUT             reduce using rule 15 (instruccion_l -> expstruct PCOMA .)
    ANDSINGLE       reduce using rule 15 (instruccion_l -> expstruct PCOMA .)
    I64             reduce using rule 15 (instruccion_l -> expstruct PCOMA .)
    F64             reduce using rule 15 (instruccion_l -> expstruct PCOMA .)
    ENTERO          reduce using rule 15 (instruccion_l -> expstruct PCOMA .)
    DECIMAL         reduce using rule 15 (instruccion_l -> expstruct PCOMA .)
    CADENA          reduce using rule 15 (instruccion_l -> expstruct PCOMA .)
    BOOLEANO        reduce using rule 15 (instruccion_l -> expstruct PCOMA .)
    CARACTER        reduce using rule 15 (instruccion_l -> expstruct PCOMA .)


state 245

    (16) instruccion_l -> ID PUNTO . exp_native PCOMA
    (89) lista_assign2 -> PUNTO . ID
    (178) exp_native -> . TOSTRING LPAR RPAR
    (179) exp_native -> . TOOWNED LPAR RPAR
    (180) exp_native -> . CLONE LPAR RPAR
    (181) exp_native -> . LEN LPAR RPAR
    (182) exp_native -> . CAPACITY LPAR RPAR
    (183) exp_native -> . REMOVE LPAR auxexp RPAR
    (184) exp_native -> . CONTAINS LPAR ANDSINGLE auxexp RPAR
    (185) exp_native -> . PUSH LPAR auxexp RPAR
    (186) exp_native -> . INSERT LPAR lista_exp RPAR
    (187) exp_native -> . CHARS LPAR RPAR
    (188) exp_native -> . SQRT LPAR RPAR
    (189) exp_native -> . ABS LPAR RPAR

    ID              shift and go to state 82
    TOSTRING        shift and go to state 150
    TOOWNED         shift and go to state 151
    CLONE           shift and go to state 152
    LEN             shift and go to state 153
    CAPACITY        shift and go to state 154
    REMOVE          shift and go to state 155
    CONTAINS        shift and go to state 156
    PUSH            shift and go to state 157
    INSERT          shift and go to state 158
    CHARS           shift and go to state 159
    SQRT            shift and go to state 160
    ABS             shift and go to state 161

    exp_native                     shift and go to state 290

state 246

    (86) asignacion -> ID lista_arr . IGUAL auxexp
    (87) asignacion -> ID lista_arr . lista_assign2 IGUAL auxexp
    (152) exparr -> ID lista_arr .
    (97) lista_arr -> lista_arr . LCOR auxexp RCOR
    (88) lista_assign2 -> . lista_assign2 PUNTO ID
    (89) lista_assign2 -> . PUNTO ID

  ! shift/reduce conflict for LCOR resolved as shift
  ! shift/reduce conflict for PUNTO resolved as shift
    IGUAL           shift and go to state 79
    MAS             reduce using rule 152 (exparr -> ID lista_arr .)
    MENOS           reduce using rule 152 (exparr -> ID lista_arr .)
    MULTIPLICACION  reduce using rule 152 (exparr -> ID lista_arr .)
    DIVISION        reduce using rule 152 (exparr -> ID lista_arr .)
    MODULO          reduce using rule 152 (exparr -> ID lista_arr .)
    AND             reduce using rule 152 (exparr -> ID lista_arr .)
    OR              reduce using rule 152 (exparr -> ID lista_arr .)
    IGUALI          reduce using rule 152 (exparr -> ID lista_arr .)
    DIF             reduce using rule 152 (exparr -> ID lista_arr .)
    MAYOR           reduce using rule 152 (exparr -> ID lista_arr .)
    MENOR           reduce using rule 152 (exparr -> ID lista_arr .)
    MAYORI          reduce using rule 152 (exparr -> ID lista_arr .)
    MENORI          reduce using rule 152 (exparr -> ID lista_arr .)
    AS              reduce using rule 152 (exparr -> ID lista_arr .)
    PCOMA           reduce using rule 152 (exparr -> ID lista_arr .)
    RLLAV           reduce using rule 152 (exparr -> ID lista_arr .)
    ID              reduce using rule 152 (exparr -> ID lista_arr .)
    PRINT           reduce using rule 152 (exparr -> ID lista_arr .)
    LET             reduce using rule 152 (exparr -> ID lista_arr .)
    CONTINUE        reduce using rule 152 (exparr -> ID lista_arr .)
    BREAK           reduce using rule 152 (exparr -> ID lista_arr .)
    RETURN          reduce using rule 152 (exparr -> ID lista_arr .)
    IF              reduce using rule 152 (exparr -> ID lista_arr .)
    MATCH           reduce using rule 152 (exparr -> ID lista_arr .)
    LOOP            reduce using rule 152 (exparr -> ID lista_arr .)
    WHILE           reduce using rule 152 (exparr -> ID lista_arr .)
    FOR             reduce using rule 152 (exparr -> ID lista_arr .)
    LPAR            reduce using rule 152 (exparr -> ID lista_arr .)
    AD              reduce using rule 152 (exparr -> ID lista_arr .)
    VEC             reduce using rule 152 (exparr -> ID lista_arr .)
    VECTOR          reduce using rule 152 (exparr -> ID lista_arr .)
    MUT             reduce using rule 152 (exparr -> ID lista_arr .)
    ANDSINGLE       reduce using rule 152 (exparr -> ID lista_arr .)
    I64             reduce using rule 152 (exparr -> ID lista_arr .)
    F64             reduce using rule 152 (exparr -> ID lista_arr .)
    ENTERO          reduce using rule 152 (exparr -> ID lista_arr .)
    DECIMAL         reduce using rule 152 (exparr -> ID lista_arr .)
    CADENA          reduce using rule 152 (exparr -> ID lista_arr .)
    BOOLEANO        reduce using rule 152 (exparr -> ID lista_arr .)
    CARACTER        reduce using rule 152 (exparr -> ID lista_arr .)
    COMA            reduce using rule 152 (exparr -> ID lista_arr .)
    LCOR            shift and go to state 81
    PUNTO           shift and go to state 25

  ! PUNTO           [ reduce using rule 152 (exparr -> ID lista_arr .) ]
  ! LCOR            [ reduce using rule 152 (exparr -> ID lista_arr .) ]

    lista_assign2                  shift and go to state 80

state 247

    (19) instruccion_l -> transferencia PCOMA .

    RLLAV           reduce using rule 19 (instruccion_l -> transferencia PCOMA .)
    ID              reduce using rule 19 (instruccion_l -> transferencia PCOMA .)
    PRINT           reduce using rule 19 (instruccion_l -> transferencia PCOMA .)
    LET             reduce using rule 19 (instruccion_l -> transferencia PCOMA .)
    CONTINUE        reduce using rule 19 (instruccion_l -> transferencia PCOMA .)
    BREAK           reduce using rule 19 (instruccion_l -> transferencia PCOMA .)
    RETURN          reduce using rule 19 (instruccion_l -> transferencia PCOMA .)
    IF              reduce using rule 19 (instruccion_l -> transferencia PCOMA .)
    MATCH           reduce using rule 19 (instruccion_l -> transferencia PCOMA .)
    LOOP            reduce using rule 19 (instruccion_l -> transferencia PCOMA .)
    WHILE           reduce using rule 19 (instruccion_l -> transferencia PCOMA .)
    FOR             reduce using rule 19 (instruccion_l -> transferencia PCOMA .)
    LPAR            reduce using rule 19 (instruccion_l -> transferencia PCOMA .)
    MENOS           reduce using rule 19 (instruccion_l -> transferencia PCOMA .)
    AD              reduce using rule 19 (instruccion_l -> transferencia PCOMA .)
    LCOR            reduce using rule 19 (instruccion_l -> transferencia PCOMA .)
    VEC             reduce using rule 19 (instruccion_l -> transferencia PCOMA .)
    VECTOR          reduce using rule 19 (instruccion_l -> transferencia PCOMA .)
    MUT             reduce using rule 19 (instruccion_l -> transferencia PCOMA .)
    ANDSINGLE       reduce using rule 19 (instruccion_l -> transferencia PCOMA .)
    I64             reduce using rule 19 (instruccion_l -> transferencia PCOMA .)
    F64             reduce using rule 19 (instruccion_l -> transferencia PCOMA .)
    ENTERO          reduce using rule 19 (instruccion_l -> transferencia PCOMA .)
    DECIMAL         reduce using rule 19 (instruccion_l -> transferencia PCOMA .)
    CADENA          reduce using rule 19 (instruccion_l -> transferencia PCOMA .)
    BOOLEANO        reduce using rule 19 (instruccion_l -> transferencia PCOMA .)
    CARACTER        reduce using rule 19 (instruccion_l -> transferencia PCOMA .)


state 248

    (69) transferencia -> BREAK auxexp .

    PCOMA           reduce using rule 69 (transferencia -> BREAK auxexp .)
    RLLAV           reduce using rule 69 (transferencia -> BREAK auxexp .)
    ID              reduce using rule 69 (transferencia -> BREAK auxexp .)
    PRINT           reduce using rule 69 (transferencia -> BREAK auxexp .)
    LET             reduce using rule 69 (transferencia -> BREAK auxexp .)
    CONTINUE        reduce using rule 69 (transferencia -> BREAK auxexp .)
    BREAK           reduce using rule 69 (transferencia -> BREAK auxexp .)
    RETURN          reduce using rule 69 (transferencia -> BREAK auxexp .)
    IF              reduce using rule 69 (transferencia -> BREAK auxexp .)
    MATCH           reduce using rule 69 (transferencia -> BREAK auxexp .)
    LOOP            reduce using rule 69 (transferencia -> BREAK auxexp .)
    WHILE           reduce using rule 69 (transferencia -> BREAK auxexp .)
    FOR             reduce using rule 69 (transferencia -> BREAK auxexp .)
    LPAR            reduce using rule 69 (transferencia -> BREAK auxexp .)
    MENOS           reduce using rule 69 (transferencia -> BREAK auxexp .)
    AD              reduce using rule 69 (transferencia -> BREAK auxexp .)
    LCOR            reduce using rule 69 (transferencia -> BREAK auxexp .)
    VEC             reduce using rule 69 (transferencia -> BREAK auxexp .)
    VECTOR          reduce using rule 69 (transferencia -> BREAK auxexp .)
    MUT             reduce using rule 69 (transferencia -> BREAK auxexp .)
    ANDSINGLE       reduce using rule 69 (transferencia -> BREAK auxexp .)
    I64             reduce using rule 69 (transferencia -> BREAK auxexp .)
    F64             reduce using rule 69 (transferencia -> BREAK auxexp .)
    ENTERO          reduce using rule 69 (transferencia -> BREAK auxexp .)
    DECIMAL         reduce using rule 69 (transferencia -> BREAK auxexp .)
    CADENA          reduce using rule 69 (transferencia -> BREAK auxexp .)
    BOOLEANO        reduce using rule 69 (transferencia -> BREAK auxexp .)
    CARACTER        reduce using rule 69 (transferencia -> BREAK auxexp .)
    COMA            reduce using rule 69 (transferencia -> BREAK auxexp .)


state 249

    (71) transferencia -> RETURN auxexp .

    PCOMA           reduce using rule 71 (transferencia -> RETURN auxexp .)
    RLLAV           reduce using rule 71 (transferencia -> RETURN auxexp .)
    ID              reduce using rule 71 (transferencia -> RETURN auxexp .)
    PRINT           reduce using rule 71 (transferencia -> RETURN auxexp .)
    LET             reduce using rule 71 (transferencia -> RETURN auxexp .)
    CONTINUE        reduce using rule 71 (transferencia -> RETURN auxexp .)
    BREAK           reduce using rule 71 (transferencia -> RETURN auxexp .)
    RETURN          reduce using rule 71 (transferencia -> RETURN auxexp .)
    IF              reduce using rule 71 (transferencia -> RETURN auxexp .)
    MATCH           reduce using rule 71 (transferencia -> RETURN auxexp .)
    LOOP            reduce using rule 71 (transferencia -> RETURN auxexp .)
    WHILE           reduce using rule 71 (transferencia -> RETURN auxexp .)
    FOR             reduce using rule 71 (transferencia -> RETURN auxexp .)
    LPAR            reduce using rule 71 (transferencia -> RETURN auxexp .)
    MENOS           reduce using rule 71 (transferencia -> RETURN auxexp .)
    AD              reduce using rule 71 (transferencia -> RETURN auxexp .)
    LCOR            reduce using rule 71 (transferencia -> RETURN auxexp .)
    VEC             reduce using rule 71 (transferencia -> RETURN auxexp .)
    VECTOR          reduce using rule 71 (transferencia -> RETURN auxexp .)
    MUT             reduce using rule 71 (transferencia -> RETURN auxexp .)
    ANDSINGLE       reduce using rule 71 (transferencia -> RETURN auxexp .)
    I64             reduce using rule 71 (transferencia -> RETURN auxexp .)
    F64             reduce using rule 71 (transferencia -> RETURN auxexp .)
    ENTERO          reduce using rule 71 (transferencia -> RETURN auxexp .)
    DECIMAL         reduce using rule 71 (transferencia -> RETURN auxexp .)
    CADENA          reduce using rule 71 (transferencia -> RETURN auxexp .)
    BOOLEANO        reduce using rule 71 (transferencia -> RETURN auxexp .)
    CARACTER        reduce using rule 71 (transferencia -> RETURN auxexp .)
    COMA            reduce using rule 71 (transferencia -> RETURN auxexp .)


state 250

    (177) llamada -> ID LPAR lista_exp RPAR .

    PUNTO           reduce using rule 177 (llamada -> ID LPAR lista_exp RPAR .)
    MAS             reduce using rule 177 (llamada -> ID LPAR lista_exp RPAR .)
    MENOS           reduce using rule 177 (llamada -> ID LPAR lista_exp RPAR .)
    MULTIPLICACION  reduce using rule 177 (llamada -> ID LPAR lista_exp RPAR .)
    DIVISION        reduce using rule 177 (llamada -> ID LPAR lista_exp RPAR .)
    MODULO          reduce using rule 177 (llamada -> ID LPAR lista_exp RPAR .)
    AND             reduce using rule 177 (llamada -> ID LPAR lista_exp RPAR .)
    OR              reduce using rule 177 (llamada -> ID LPAR lista_exp RPAR .)
    IGUALI          reduce using rule 177 (llamada -> ID LPAR lista_exp RPAR .)
    DIF             reduce using rule 177 (llamada -> ID LPAR lista_exp RPAR .)
    MAYOR           reduce using rule 177 (llamada -> ID LPAR lista_exp RPAR .)
    MENOR           reduce using rule 177 (llamada -> ID LPAR lista_exp RPAR .)
    MAYORI          reduce using rule 177 (llamada -> ID LPAR lista_exp RPAR .)
    MENORI          reduce using rule 177 (llamada -> ID LPAR lista_exp RPAR .)
    AS              reduce using rule 177 (llamada -> ID LPAR lista_exp RPAR .)
    LLLAV           reduce using rule 177 (llamada -> ID LPAR lista_exp RPAR .)
    PCOMA           reduce using rule 177 (llamada -> ID LPAR lista_exp RPAR .)
    COMA            reduce using rule 177 (llamada -> ID LPAR lista_exp RPAR .)
    RCOR            reduce using rule 177 (llamada -> ID LPAR lista_exp RPAR .)
    RPAR            reduce using rule 177 (llamada -> ID LPAR lista_exp RPAR .)
    RLLAV           reduce using rule 177 (llamada -> ID LPAR lista_exp RPAR .)
    ID              reduce using rule 177 (llamada -> ID LPAR lista_exp RPAR .)
    PRINT           reduce using rule 177 (llamada -> ID LPAR lista_exp RPAR .)
    LET             reduce using rule 177 (llamada -> ID LPAR lista_exp RPAR .)
    CONTINUE        reduce using rule 177 (llamada -> ID LPAR lista_exp RPAR .)
    BREAK           reduce using rule 177 (llamada -> ID LPAR lista_exp RPAR .)
    RETURN          reduce using rule 177 (llamada -> ID LPAR lista_exp RPAR .)
    IF              reduce using rule 177 (llamada -> ID LPAR lista_exp RPAR .)
    MATCH           reduce using rule 177 (llamada -> ID LPAR lista_exp RPAR .)
    LOOP            reduce using rule 177 (llamada -> ID LPAR lista_exp RPAR .)
    WHILE           reduce using rule 177 (llamada -> ID LPAR lista_exp RPAR .)
    FOR             reduce using rule 177 (llamada -> ID LPAR lista_exp RPAR .)
    LPAR            reduce using rule 177 (llamada -> ID LPAR lista_exp RPAR .)
    AD              reduce using rule 177 (llamada -> ID LPAR lista_exp RPAR .)
    LCOR            reduce using rule 177 (llamada -> ID LPAR lista_exp RPAR .)
    VEC             reduce using rule 177 (llamada -> ID LPAR lista_exp RPAR .)
    VECTOR          reduce using rule 177 (llamada -> ID LPAR lista_exp RPAR .)
    MUT             reduce using rule 177 (llamada -> ID LPAR lista_exp RPAR .)
    ANDSINGLE       reduce using rule 177 (llamada -> ID LPAR lista_exp RPAR .)
    I64             reduce using rule 177 (llamada -> ID LPAR lista_exp RPAR .)
    F64             reduce using rule 177 (llamada -> ID LPAR lista_exp RPAR .)
    ENTERO          reduce using rule 177 (llamada -> ID LPAR lista_exp RPAR .)
    DECIMAL         reduce using rule 177 (llamada -> ID LPAR lista_exp RPAR .)
    CADENA          reduce using rule 177 (llamada -> ID LPAR lista_exp RPAR .)
    BOOLEANO        reduce using rule 177 (llamada -> ID LPAR lista_exp RPAR .)
    CARACTER        reduce using rule 177 (llamada -> ID LPAR lista_exp RPAR .)
    ARROW2          reduce using rule 177 (llamada -> ID LPAR lista_exp RPAR .)
    ORSINGLE        reduce using rule 177 (llamada -> ID LPAR lista_exp RPAR .)


state 251

    (99) lista_exp -> lista_exp COMA auxexp .

    RCOR            reduce using rule 99 (lista_exp -> lista_exp COMA auxexp .)
    COMA            reduce using rule 99 (lista_exp -> lista_exp COMA auxexp .)
    RPAR            reduce using rule 99 (lista_exp -> lista_exp COMA auxexp .)


state 252

    (156) newarray -> LCOR auxexp PCOMA exp . RCOR
    (124) exp -> exp . PUNTO exp_native
    (125) expmath -> exp . MAS exp
    (126) expmath -> exp . MENOS exp
    (127) expmath -> exp . MULTIPLICACION exp
    (128) expmath -> exp . DIVISION exp
    (129) expmath -> exp . MODULO exp
    (133) expop -> exp . AND exp
    (134) expop -> exp . OR exp
    (137) exprel -> exp . IGUALI exp
    (138) exprel -> exp . DIF exp
    (139) exprel -> exp . MAYOR exp
    (140) exprel -> exp . MENOR exp
    (141) exprel -> exp . MAYORI exp
    (142) exprel -> exp . MENORI exp
    (136) expcast -> exp . AS tipo_var

    RCOR            shift and go to state 291
    PUNTO           shift and go to state 86
    MAS             shift and go to state 87
    MENOS           shift and go to state 88
    MULTIPLICACION  shift and go to state 89
    DIVISION        shift and go to state 90
    MODULO          shift and go to state 91
    AND             shift and go to state 92
    OR              shift and go to state 93
    IGUALI          shift and go to state 94
    DIF             shift and go to state 95
    MAYOR           shift and go to state 96
    MENOR           shift and go to state 97
    MAYORI          shift and go to state 98
    MENORI          shift and go to state 99
    AS              shift and go to state 100


state 253

    (154) expvec -> VECTOR DPUNTOS DPUNTOS exp_natarr .

    PUNTO           reduce using rule 154 (expvec -> VECTOR DPUNTOS DPUNTOS exp_natarr .)
    MAS             reduce using rule 154 (expvec -> VECTOR DPUNTOS DPUNTOS exp_natarr .)
    MENOS           reduce using rule 154 (expvec -> VECTOR DPUNTOS DPUNTOS exp_natarr .)
    MULTIPLICACION  reduce using rule 154 (expvec -> VECTOR DPUNTOS DPUNTOS exp_natarr .)
    DIVISION        reduce using rule 154 (expvec -> VECTOR DPUNTOS DPUNTOS exp_natarr .)
    MODULO          reduce using rule 154 (expvec -> VECTOR DPUNTOS DPUNTOS exp_natarr .)
    AND             reduce using rule 154 (expvec -> VECTOR DPUNTOS DPUNTOS exp_natarr .)
    OR              reduce using rule 154 (expvec -> VECTOR DPUNTOS DPUNTOS exp_natarr .)
    IGUALI          reduce using rule 154 (expvec -> VECTOR DPUNTOS DPUNTOS exp_natarr .)
    DIF             reduce using rule 154 (expvec -> VECTOR DPUNTOS DPUNTOS exp_natarr .)
    MAYOR           reduce using rule 154 (expvec -> VECTOR DPUNTOS DPUNTOS exp_natarr .)
    MENOR           reduce using rule 154 (expvec -> VECTOR DPUNTOS DPUNTOS exp_natarr .)
    MAYORI          reduce using rule 154 (expvec -> VECTOR DPUNTOS DPUNTOS exp_natarr .)
    MENORI          reduce using rule 154 (expvec -> VECTOR DPUNTOS DPUNTOS exp_natarr .)
    AS              reduce using rule 154 (expvec -> VECTOR DPUNTOS DPUNTOS exp_natarr .)
    LLLAV           reduce using rule 154 (expvec -> VECTOR DPUNTOS DPUNTOS exp_natarr .)
    PCOMA           reduce using rule 154 (expvec -> VECTOR DPUNTOS DPUNTOS exp_natarr .)
    COMA            reduce using rule 154 (expvec -> VECTOR DPUNTOS DPUNTOS exp_natarr .)
    RCOR            reduce using rule 154 (expvec -> VECTOR DPUNTOS DPUNTOS exp_natarr .)
    RPAR            reduce using rule 154 (expvec -> VECTOR DPUNTOS DPUNTOS exp_natarr .)
    RLLAV           reduce using rule 154 (expvec -> VECTOR DPUNTOS DPUNTOS exp_natarr .)
    ID              reduce using rule 154 (expvec -> VECTOR DPUNTOS DPUNTOS exp_natarr .)
    PRINT           reduce using rule 154 (expvec -> VECTOR DPUNTOS DPUNTOS exp_natarr .)
    LET             reduce using rule 154 (expvec -> VECTOR DPUNTOS DPUNTOS exp_natarr .)
    CONTINUE        reduce using rule 154 (expvec -> VECTOR DPUNTOS DPUNTOS exp_natarr .)
    BREAK           reduce using rule 154 (expvec -> VECTOR DPUNTOS DPUNTOS exp_natarr .)
    RETURN          reduce using rule 154 (expvec -> VECTOR DPUNTOS DPUNTOS exp_natarr .)
    IF              reduce using rule 154 (expvec -> VECTOR DPUNTOS DPUNTOS exp_natarr .)
    MATCH           reduce using rule 154 (expvec -> VECTOR DPUNTOS DPUNTOS exp_natarr .)
    LOOP            reduce using rule 154 (expvec -> VECTOR DPUNTOS DPUNTOS exp_natarr .)
    WHILE           reduce using rule 154 (expvec -> VECTOR DPUNTOS DPUNTOS exp_natarr .)
    FOR             reduce using rule 154 (expvec -> VECTOR DPUNTOS DPUNTOS exp_natarr .)
    LPAR            reduce using rule 154 (expvec -> VECTOR DPUNTOS DPUNTOS exp_natarr .)
    AD              reduce using rule 154 (expvec -> VECTOR DPUNTOS DPUNTOS exp_natarr .)
    LCOR            reduce using rule 154 (expvec -> VECTOR DPUNTOS DPUNTOS exp_natarr .)
    VEC             reduce using rule 154 (expvec -> VECTOR DPUNTOS DPUNTOS exp_natarr .)
    VECTOR          reduce using rule 154 (expvec -> VECTOR DPUNTOS DPUNTOS exp_natarr .)
    MUT             reduce using rule 154 (expvec -> VECTOR DPUNTOS DPUNTOS exp_natarr .)
    ANDSINGLE       reduce using rule 154 (expvec -> VECTOR DPUNTOS DPUNTOS exp_natarr .)
    I64             reduce using rule 154 (expvec -> VECTOR DPUNTOS DPUNTOS exp_natarr .)
    F64             reduce using rule 154 (expvec -> VECTOR DPUNTOS DPUNTOS exp_natarr .)
    ENTERO          reduce using rule 154 (expvec -> VECTOR DPUNTOS DPUNTOS exp_natarr .)
    DECIMAL         reduce using rule 154 (expvec -> VECTOR DPUNTOS DPUNTOS exp_natarr .)
    CADENA          reduce using rule 154 (expvec -> VECTOR DPUNTOS DPUNTOS exp_natarr .)
    BOOLEANO        reduce using rule 154 (expvec -> VECTOR DPUNTOS DPUNTOS exp_natarr .)
    CARACTER        reduce using rule 154 (expvec -> VECTOR DPUNTOS DPUNTOS exp_natarr .)
    ARROW2          reduce using rule 154 (expvec -> VECTOR DPUNTOS DPUNTOS exp_natarr .)
    ORSINGLE        reduce using rule 154 (expvec -> VECTOR DPUNTOS DPUNTOS exp_natarr .)


state 254

    (190) exp_natarr -> NEW . LPAR RPAR

    LPAR            shift and go to state 292


state 255

    (191) exp_natarr -> WITHCAPACITY . LPAR exp RPAR

    LPAR            shift and go to state 293


state 256

    (131) exppow -> I64 DPUNTOS DPUNTOS POW . LPAR exp COMA exp RPAR

    LPAR            shift and go to state 294


state 257

    (132) exppow -> F64 DPUNTOS DPUNTOS POWF . LPAR exp COMA exp RPAR

    LPAR            shift and go to state 295


state 258

    (48) match_statement -> LLLAV lista_brazos . RLLAV
    (50) lista_brazos -> lista_brazos . brazo
    (52) brazo -> . lista_exp_brazos ARROW2 instruccion_match COMA
    (53) brazo -> . lista_exp_brazos ARROW2 statement COMA
    (54) brazo -> . lista_exp_brazos ARROW2 statement
    (55) lista_exp_brazos -> . lista_exp_brazos ORSINGLE exp
    (56) lista_exp_brazos -> . exp
    (110) exp -> . LPAR exp RPAR
    (111) exp -> . expmath
    (112) exp -> . expop
    (113) exp -> . exprel
    (114) exp -> . exparr
    (115) exp -> . newarray
    (116) exp -> . expvec
    (117) exp -> . exparam
    (118) exp -> . exppow
    (119) exp -> . expcast
    (120) exp -> . lista_acc
    (121) exp -> . llamada
    (122) exp -> . sentencia
    (123) exp -> . valores
    (124) exp -> . exp PUNTO exp_native
    (125) expmath -> . exp MAS exp
    (126) expmath -> . exp MENOS exp
    (127) expmath -> . exp MULTIPLICACION exp
    (128) expmath -> . exp DIVISION exp
    (129) expmath -> . exp MODULO exp
    (130) expmath -> . MENOS exp
    (133) expop -> . exp AND exp
    (134) expop -> . exp OR exp
    (135) expop -> . AD exp
    (137) exprel -> . exp IGUALI exp
    (138) exprel -> . exp DIF exp
    (139) exprel -> . exp MAYOR exp
    (140) exprel -> . exp MENOR exp
    (141) exprel -> . exp MAYORI exp
    (142) exprel -> . exp MENORI exp
    (152) exparr -> . ID lista_arr
    (155) newarray -> . LCOR lista_exp RCOR
    (156) newarray -> . LCOR auxexp PCOMA exp RCOR
    (153) expvec -> . VEC AD newarray
    (154) expvec -> . VECTOR DPUNTOS DPUNTOS exp_natarr
    (148) exparam -> . MUT ID
    (149) exparam -> . MUT valores
    (150) exparam -> . ANDSINGLE MUT ID
    (151) exparam -> . ANDSINGLE MUT valores
    (131) exppow -> . I64 DPUNTOS DPUNTOS POW LPAR exp COMA exp RPAR
    (132) exppow -> . F64 DPUNTOS DPUNTOS POWF LPAR exp COMA exp RPAR
    (136) expcast -> . exp AS tipo_var
    (92) lista_acc -> . lista_acc PUNTO ID
    (93) lista_acc -> . lista_acc PUNTO exp_native
    (94) lista_acc -> . auxacc
    (176) llamada -> . ID LPAR RPAR
    (177) llamada -> . ID LPAR lista_exp RPAR
    (37) sentencia -> . if
    (38) sentencia -> . match
    (39) sentencia -> . loop
    (40) sentencia -> . while
    (41) sentencia -> . for
    (157) valores -> . ENTERO
    (158) valores -> . DECIMAL
    (159) valores -> . CADENA
    (160) valores -> . BOOLEANO
    (161) valores -> . CARACTER
    (95) auxacc -> . exparr
    (96) auxacc -> . ID
    (42) if -> . IF exp statement else
    (47) match -> . MATCH exp match_statement
    (62) loop -> . LOOP statement
    (63) while -> . WHILE exp statement
    (64) for -> . FOR ID IN foriterative statement

    RLLAV           shift and go to state 296
    LPAR            shift and go to state 29
    MENOS           shift and go to state 43
    AD              shift and go to state 44
    ID              shift and go to state 45
    LCOR            shift and go to state 46
    VEC             shift and go to state 47
    VECTOR          shift and go to state 48
    MUT             shift and go to state 49
    ANDSINGLE       shift and go to state 50
    I64             shift and go to state 51
    F64             shift and go to state 52
    ENTERO          shift and go to state 59
    DECIMAL         shift and go to state 60
    CADENA          shift and go to state 61
    BOOLEANO        shift and go to state 62
    CARACTER        shift and go to state 63
    IF              shift and go to state 12
    MATCH           shift and go to state 64
    LOOP            shift and go to state 65
    WHILE           shift and go to state 13
    FOR             shift and go to state 66

    brazo                          shift and go to state 297
    lista_exp_brazos               shift and go to state 261
    exp                            shift and go to state 262
    expmath                        shift and go to state 30
    expop                          shift and go to state 31
    exprel                         shift and go to state 32
    exparr                         shift and go to state 33
    newarray                       shift and go to state 34
    expvec                         shift and go to state 35
    exparam                        shift and go to state 36
    exppow                         shift and go to state 37
    expcast                        shift and go to state 38
    lista_acc                      shift and go to state 39
    llamada                        shift and go to state 40
    sentencia                      shift and go to state 41
    valores                        shift and go to state 42
    auxacc                         shift and go to state 53
    if                             shift and go to state 54
    match                          shift and go to state 55
    loop                           shift and go to state 56
    while                          shift and go to state 57
    for                            shift and go to state 58

state 259

    (49) match_statement -> LLLAV RLLAV .

    PUNTO           reduce using rule 49 (match_statement -> LLLAV RLLAV .)
    MAS             reduce using rule 49 (match_statement -> LLLAV RLLAV .)
    MENOS           reduce using rule 49 (match_statement -> LLLAV RLLAV .)
    MULTIPLICACION  reduce using rule 49 (match_statement -> LLLAV RLLAV .)
    DIVISION        reduce using rule 49 (match_statement -> LLLAV RLLAV .)
    MODULO          reduce using rule 49 (match_statement -> LLLAV RLLAV .)
    AND             reduce using rule 49 (match_statement -> LLLAV RLLAV .)
    OR              reduce using rule 49 (match_statement -> LLLAV RLLAV .)
    IGUALI          reduce using rule 49 (match_statement -> LLLAV RLLAV .)
    DIF             reduce using rule 49 (match_statement -> LLLAV RLLAV .)
    MAYOR           reduce using rule 49 (match_statement -> LLLAV RLLAV .)
    MENOR           reduce using rule 49 (match_statement -> LLLAV RLLAV .)
    MAYORI          reduce using rule 49 (match_statement -> LLLAV RLLAV .)
    MENORI          reduce using rule 49 (match_statement -> LLLAV RLLAV .)
    AS              reduce using rule 49 (match_statement -> LLLAV RLLAV .)
    LLLAV           reduce using rule 49 (match_statement -> LLLAV RLLAV .)
    PCOMA           reduce using rule 49 (match_statement -> LLLAV RLLAV .)
    COMA            reduce using rule 49 (match_statement -> LLLAV RLLAV .)
    RCOR            reduce using rule 49 (match_statement -> LLLAV RLLAV .)
    RPAR            reduce using rule 49 (match_statement -> LLLAV RLLAV .)
    RLLAV           reduce using rule 49 (match_statement -> LLLAV RLLAV .)
    ID              reduce using rule 49 (match_statement -> LLLAV RLLAV .)
    PRINT           reduce using rule 49 (match_statement -> LLLAV RLLAV .)
    LET             reduce using rule 49 (match_statement -> LLLAV RLLAV .)
    CONTINUE        reduce using rule 49 (match_statement -> LLLAV RLLAV .)
    BREAK           reduce using rule 49 (match_statement -> LLLAV RLLAV .)
    RETURN          reduce using rule 49 (match_statement -> LLLAV RLLAV .)
    IF              reduce using rule 49 (match_statement -> LLLAV RLLAV .)
    MATCH           reduce using rule 49 (match_statement -> LLLAV RLLAV .)
    LOOP            reduce using rule 49 (match_statement -> LLLAV RLLAV .)
    WHILE           reduce using rule 49 (match_statement -> LLLAV RLLAV .)
    FOR             reduce using rule 49 (match_statement -> LLLAV RLLAV .)
    LPAR            reduce using rule 49 (match_statement -> LLLAV RLLAV .)
    AD              reduce using rule 49 (match_statement -> LLLAV RLLAV .)
    LCOR            reduce using rule 49 (match_statement -> LLLAV RLLAV .)
    VEC             reduce using rule 49 (match_statement -> LLLAV RLLAV .)
    VECTOR          reduce using rule 49 (match_statement -> LLLAV RLLAV .)
    MUT             reduce using rule 49 (match_statement -> LLLAV RLLAV .)
    ANDSINGLE       reduce using rule 49 (match_statement -> LLLAV RLLAV .)
    I64             reduce using rule 49 (match_statement -> LLLAV RLLAV .)
    F64             reduce using rule 49 (match_statement -> LLLAV RLLAV .)
    ENTERO          reduce using rule 49 (match_statement -> LLLAV RLLAV .)
    DECIMAL         reduce using rule 49 (match_statement -> LLLAV RLLAV .)
    CADENA          reduce using rule 49 (match_statement -> LLLAV RLLAV .)
    BOOLEANO        reduce using rule 49 (match_statement -> LLLAV RLLAV .)
    CARACTER        reduce using rule 49 (match_statement -> LLLAV RLLAV .)
    ARROW2          reduce using rule 49 (match_statement -> LLLAV RLLAV .)
    ORSINGLE        reduce using rule 49 (match_statement -> LLLAV RLLAV .)


state 260

    (51) lista_brazos -> brazo .

    RLLAV           reduce using rule 51 (lista_brazos -> brazo .)
    LPAR            reduce using rule 51 (lista_brazos -> brazo .)
    MENOS           reduce using rule 51 (lista_brazos -> brazo .)
    AD              reduce using rule 51 (lista_brazos -> brazo .)
    ID              reduce using rule 51 (lista_brazos -> brazo .)
    LCOR            reduce using rule 51 (lista_brazos -> brazo .)
    VEC             reduce using rule 51 (lista_brazos -> brazo .)
    VECTOR          reduce using rule 51 (lista_brazos -> brazo .)
    MUT             reduce using rule 51 (lista_brazos -> brazo .)
    ANDSINGLE       reduce using rule 51 (lista_brazos -> brazo .)
    I64             reduce using rule 51 (lista_brazos -> brazo .)
    F64             reduce using rule 51 (lista_brazos -> brazo .)
    ENTERO          reduce using rule 51 (lista_brazos -> brazo .)
    DECIMAL         reduce using rule 51 (lista_brazos -> brazo .)
    CADENA          reduce using rule 51 (lista_brazos -> brazo .)
    BOOLEANO        reduce using rule 51 (lista_brazos -> brazo .)
    CARACTER        reduce using rule 51 (lista_brazos -> brazo .)
    IF              reduce using rule 51 (lista_brazos -> brazo .)
    MATCH           reduce using rule 51 (lista_brazos -> brazo .)
    LOOP            reduce using rule 51 (lista_brazos -> brazo .)
    WHILE           reduce using rule 51 (lista_brazos -> brazo .)
    FOR             reduce using rule 51 (lista_brazos -> brazo .)


state 261

    (52) brazo -> lista_exp_brazos . ARROW2 instruccion_match COMA
    (53) brazo -> lista_exp_brazos . ARROW2 statement COMA
    (54) brazo -> lista_exp_brazos . ARROW2 statement
    (55) lista_exp_brazos -> lista_exp_brazos . ORSINGLE exp

    ARROW2          shift and go to state 298
    ORSINGLE        shift and go to state 299


state 262

    (56) lista_exp_brazos -> exp .
    (124) exp -> exp . PUNTO exp_native
    (125) expmath -> exp . MAS exp
    (126) expmath -> exp . MENOS exp
    (127) expmath -> exp . MULTIPLICACION exp
    (128) expmath -> exp . DIVISION exp
    (129) expmath -> exp . MODULO exp
    (133) expop -> exp . AND exp
    (134) expop -> exp . OR exp
    (137) exprel -> exp . IGUALI exp
    (138) exprel -> exp . DIF exp
    (139) exprel -> exp . MAYOR exp
    (140) exprel -> exp . MENOR exp
    (141) exprel -> exp . MAYORI exp
    (142) exprel -> exp . MENORI exp
    (136) expcast -> exp . AS tipo_var

    ARROW2          reduce using rule 56 (lista_exp_brazos -> exp .)
    ORSINGLE        reduce using rule 56 (lista_exp_brazos -> exp .)
    PUNTO           shift and go to state 86
    MAS             shift and go to state 87
    MENOS           shift and go to state 88
    MULTIPLICACION  shift and go to state 89
    DIVISION        shift and go to state 90
    MODULO          shift and go to state 91
    AND             shift and go to state 92
    OR              shift and go to state 93
    IGUALI          shift and go to state 94
    DIF             shift and go to state 95
    MAYOR           shift and go to state 96
    MENOR           shift and go to state 97
    MAYORI          shift and go to state 98
    MENORI          shift and go to state 99
    AS              shift and go to state 100


state 263

    (64) for -> FOR ID IN foriterative . statement
    (73) statement -> . LLLAV instrucciones_l RLLAV
    (74) statement -> . LLLAV RLLAV

    LLLAV           shift and go to state 101

    statement                      shift and go to state 300

state 264

    (65) foriterative -> exp . PUNTO PUNTO exp
    (66) foriterative -> exp .
    (124) exp -> exp . PUNTO exp_native
    (125) expmath -> exp . MAS exp
    (126) expmath -> exp . MENOS exp
    (127) expmath -> exp . MULTIPLICACION exp
    (128) expmath -> exp . DIVISION exp
    (129) expmath -> exp . MODULO exp
    (133) expop -> exp . AND exp
    (134) expop -> exp . OR exp
    (137) exprel -> exp . IGUALI exp
    (138) exprel -> exp . DIF exp
    (139) exprel -> exp . MAYOR exp
    (140) exprel -> exp . MENOR exp
    (141) exprel -> exp . MAYORI exp
    (142) exprel -> exp . MENORI exp
    (136) expcast -> exp . AS tipo_var

    PUNTO           shift and go to state 301
    LLLAV           reduce using rule 66 (foriterative -> exp .)
    MAS             shift and go to state 87
    MENOS           shift and go to state 88
    MULTIPLICACION  shift and go to state 89
    DIVISION        shift and go to state 90
    MODULO          shift and go to state 91
    AND             shift and go to state 92
    OR              shift and go to state 93
    IGUALI          shift and go to state 94
    DIF             shift and go to state 95
    MAYOR           shift and go to state 96
    MENOR           shift and go to state 97
    MAYORI          shift and go to state 98
    MENORI          shift and go to state 99
    AS              shift and go to state 100


state 265

    (106) asignacion_simple -> MUT ID DPUNTOS ANDSINGLE MUT . tipo_var
    (162) tipo_var -> . I64
    (163) tipo_var -> . F64
    (164) tipo_var -> . STRING
    (165) tipo_var -> . ANDSINGLE aSTR
    (166) tipo_var -> . BOOL
    (167) tipo_var -> . CHAR
    (168) tipo_var -> . USIZE
    (169) tipo_var -> . lista_arr2
    (170) tipo_var -> . LCOR tipo_var RCOR
    (171) tipo_var -> . lista_classtype
    (172) tipo_var -> . VECTOR MENOR tipo_var MAYOR
    (173) tipo_var -> . VECTOR MENOR lista_classtype MAYOR
    (107) lista_arr2 -> . LCOR tipo_var PCOMA exp RCOR
    (174) lista_classtype -> . lista_classtype DPUNTOS DPUNTOS ID
    (175) lista_classtype -> . ID

    I64             shift and go to state 126
    F64             shift and go to state 127
    STRING          shift and go to state 128
    ANDSINGLE       shift and go to state 176
    BOOL            shift and go to state 129
    CHAR            shift and go to state 130
    USIZE           shift and go to state 131
    LCOR            shift and go to state 133
    VECTOR          shift and go to state 135
    ID              shift and go to state 123

    tipo_var                       shift and go to state 302
    lista_arr2                     shift and go to state 132
    lista_classtype                shift and go to state 134

state 266

    (104) asignacion_simple -> MUT ID DPUNTOS ANDSINGLE tipo_var .

    IGUAL           reduce using rule 104 (asignacion_simple -> MUT ID DPUNTOS ANDSINGLE tipo_var .)


state 267

    (105) asignacion_simple -> ID DPUNTOS ANDSINGLE MUT tipo_var .

    IGUAL           reduce using rule 105 (asignacion_simple -> ID DPUNTOS ANDSINGLE MUT tipo_var .)


state 268

    (170) tipo_var -> LCOR tipo_var RCOR .

    IGUAL           reduce using rule 170 (tipo_var -> LCOR tipo_var RCOR .)
    PUNTO           reduce using rule 170 (tipo_var -> LCOR tipo_var RCOR .)
    MAS             reduce using rule 170 (tipo_var -> LCOR tipo_var RCOR .)
    MENOS           reduce using rule 170 (tipo_var -> LCOR tipo_var RCOR .)
    MULTIPLICACION  reduce using rule 170 (tipo_var -> LCOR tipo_var RCOR .)
    DIVISION        reduce using rule 170 (tipo_var -> LCOR tipo_var RCOR .)
    MODULO          reduce using rule 170 (tipo_var -> LCOR tipo_var RCOR .)
    AND             reduce using rule 170 (tipo_var -> LCOR tipo_var RCOR .)
    OR              reduce using rule 170 (tipo_var -> LCOR tipo_var RCOR .)
    IGUALI          reduce using rule 170 (tipo_var -> LCOR tipo_var RCOR .)
    DIF             reduce using rule 170 (tipo_var -> LCOR tipo_var RCOR .)
    MAYOR           reduce using rule 170 (tipo_var -> LCOR tipo_var RCOR .)
    MENOR           reduce using rule 170 (tipo_var -> LCOR tipo_var RCOR .)
    MAYORI          reduce using rule 170 (tipo_var -> LCOR tipo_var RCOR .)
    MENORI          reduce using rule 170 (tipo_var -> LCOR tipo_var RCOR .)
    AS              reduce using rule 170 (tipo_var -> LCOR tipo_var RCOR .)
    LLLAV           reduce using rule 170 (tipo_var -> LCOR tipo_var RCOR .)
    PCOMA           reduce using rule 170 (tipo_var -> LCOR tipo_var RCOR .)
    COMA            reduce using rule 170 (tipo_var -> LCOR tipo_var RCOR .)
    RCOR            reduce using rule 170 (tipo_var -> LCOR tipo_var RCOR .)
    RPAR            reduce using rule 170 (tipo_var -> LCOR tipo_var RCOR .)
    RLLAV           reduce using rule 170 (tipo_var -> LCOR tipo_var RCOR .)
    ID              reduce using rule 170 (tipo_var -> LCOR tipo_var RCOR .)
    PRINT           reduce using rule 170 (tipo_var -> LCOR tipo_var RCOR .)
    LET             reduce using rule 170 (tipo_var -> LCOR tipo_var RCOR .)
    CONTINUE        reduce using rule 170 (tipo_var -> LCOR tipo_var RCOR .)
    BREAK           reduce using rule 170 (tipo_var -> LCOR tipo_var RCOR .)
    RETURN          reduce using rule 170 (tipo_var -> LCOR tipo_var RCOR .)
    IF              reduce using rule 170 (tipo_var -> LCOR tipo_var RCOR .)
    MATCH           reduce using rule 170 (tipo_var -> LCOR tipo_var RCOR .)
    LOOP            reduce using rule 170 (tipo_var -> LCOR tipo_var RCOR .)
    WHILE           reduce using rule 170 (tipo_var -> LCOR tipo_var RCOR .)
    FOR             reduce using rule 170 (tipo_var -> LCOR tipo_var RCOR .)
    LPAR            reduce using rule 170 (tipo_var -> LCOR tipo_var RCOR .)
    AD              reduce using rule 170 (tipo_var -> LCOR tipo_var RCOR .)
    LCOR            reduce using rule 170 (tipo_var -> LCOR tipo_var RCOR .)
    VEC             reduce using rule 170 (tipo_var -> LCOR tipo_var RCOR .)
    VECTOR          reduce using rule 170 (tipo_var -> LCOR tipo_var RCOR .)
    MUT             reduce using rule 170 (tipo_var -> LCOR tipo_var RCOR .)
    ANDSINGLE       reduce using rule 170 (tipo_var -> LCOR tipo_var RCOR .)
    I64             reduce using rule 170 (tipo_var -> LCOR tipo_var RCOR .)
    F64             reduce using rule 170 (tipo_var -> LCOR tipo_var RCOR .)
    ENTERO          reduce using rule 170 (tipo_var -> LCOR tipo_var RCOR .)
    DECIMAL         reduce using rule 170 (tipo_var -> LCOR tipo_var RCOR .)
    CADENA          reduce using rule 170 (tipo_var -> LCOR tipo_var RCOR .)
    BOOLEANO        reduce using rule 170 (tipo_var -> LCOR tipo_var RCOR .)
    CARACTER        reduce using rule 170 (tipo_var -> LCOR tipo_var RCOR .)
    ARROW2          reduce using rule 170 (tipo_var -> LCOR tipo_var RCOR .)
    ORSINGLE        reduce using rule 170 (tipo_var -> LCOR tipo_var RCOR .)


state 269

    (107) lista_arr2 -> LCOR tipo_var PCOMA . exp RCOR
    (110) exp -> . LPAR exp RPAR
    (111) exp -> . expmath
    (112) exp -> . expop
    (113) exp -> . exprel
    (114) exp -> . exparr
    (115) exp -> . newarray
    (116) exp -> . expvec
    (117) exp -> . exparam
    (118) exp -> . exppow
    (119) exp -> . expcast
    (120) exp -> . lista_acc
    (121) exp -> . llamada
    (122) exp -> . sentencia
    (123) exp -> . valores
    (124) exp -> . exp PUNTO exp_native
    (125) expmath -> . exp MAS exp
    (126) expmath -> . exp MENOS exp
    (127) expmath -> . exp MULTIPLICACION exp
    (128) expmath -> . exp DIVISION exp
    (129) expmath -> . exp MODULO exp
    (130) expmath -> . MENOS exp
    (133) expop -> . exp AND exp
    (134) expop -> . exp OR exp
    (135) expop -> . AD exp
    (137) exprel -> . exp IGUALI exp
    (138) exprel -> . exp DIF exp
    (139) exprel -> . exp MAYOR exp
    (140) exprel -> . exp MENOR exp
    (141) exprel -> . exp MAYORI exp
    (142) exprel -> . exp MENORI exp
    (152) exparr -> . ID lista_arr
    (155) newarray -> . LCOR lista_exp RCOR
    (156) newarray -> . LCOR auxexp PCOMA exp RCOR
    (153) expvec -> . VEC AD newarray
    (154) expvec -> . VECTOR DPUNTOS DPUNTOS exp_natarr
    (148) exparam -> . MUT ID
    (149) exparam -> . MUT valores
    (150) exparam -> . ANDSINGLE MUT ID
    (151) exparam -> . ANDSINGLE MUT valores
    (131) exppow -> . I64 DPUNTOS DPUNTOS POW LPAR exp COMA exp RPAR
    (132) exppow -> . F64 DPUNTOS DPUNTOS POWF LPAR exp COMA exp RPAR
    (136) expcast -> . exp AS tipo_var
    (92) lista_acc -> . lista_acc PUNTO ID
    (93) lista_acc -> . lista_acc PUNTO exp_native
    (94) lista_acc -> . auxacc
    (176) llamada -> . ID LPAR RPAR
    (177) llamada -> . ID LPAR lista_exp RPAR
    (37) sentencia -> . if
    (38) sentencia -> . match
    (39) sentencia -> . loop
    (40) sentencia -> . while
    (41) sentencia -> . for
    (157) valores -> . ENTERO
    (158) valores -> . DECIMAL
    (159) valores -> . CADENA
    (160) valores -> . BOOLEANO
    (161) valores -> . CARACTER
    (95) auxacc -> . exparr
    (96) auxacc -> . ID
    (42) if -> . IF exp statement else
    (47) match -> . MATCH exp match_statement
    (62) loop -> . LOOP statement
    (63) while -> . WHILE exp statement
    (64) for -> . FOR ID IN foriterative statement

    LPAR            shift and go to state 29
    MENOS           shift and go to state 43
    AD              shift and go to state 44
    ID              shift and go to state 45
    LCOR            shift and go to state 46
    VEC             shift and go to state 47
    VECTOR          shift and go to state 48
    MUT             shift and go to state 49
    ANDSINGLE       shift and go to state 50
    I64             shift and go to state 51
    F64             shift and go to state 52
    ENTERO          shift and go to state 59
    DECIMAL         shift and go to state 60
    CADENA          shift and go to state 61
    BOOLEANO        shift and go to state 62
    CARACTER        shift and go to state 63
    IF              shift and go to state 12
    MATCH           shift and go to state 64
    LOOP            shift and go to state 65
    WHILE           shift and go to state 13
    FOR             shift and go to state 66

    exp                            shift and go to state 303
    expmath                        shift and go to state 30
    expop                          shift and go to state 31
    exprel                         shift and go to state 32
    exparr                         shift and go to state 33
    newarray                       shift and go to state 34
    expvec                         shift and go to state 35
    exparam                        shift and go to state 36
    exppow                         shift and go to state 37
    expcast                        shift and go to state 38
    lista_acc                      shift and go to state 39
    llamada                        shift and go to state 40
    sentencia                      shift and go to state 41
    valores                        shift and go to state 42
    auxacc                         shift and go to state 53
    if                             shift and go to state 54
    match                          shift and go to state 55
    loop                           shift and go to state 56
    while                          shift and go to state 57
    for                            shift and go to state 58

state 270

    (174) lista_classtype -> lista_classtype DPUNTOS DPUNTOS . ID

    ID              shift and go to state 304


state 271

    (172) tipo_var -> VECTOR MENOR tipo_var . MAYOR

    MAYOR           shift and go to state 305


state 272

    (173) tipo_var -> VECTOR MENOR lista_classtype . MAYOR
    (171) tipo_var -> lista_classtype .
    (174) lista_classtype -> lista_classtype . DPUNTOS DPUNTOS ID

  ! shift/reduce conflict for MAYOR resolved as shift
    MAYOR           shift and go to state 306
    DPUNTOS         shift and go to state 215

  ! MAYOR           [ reduce using rule 171 (tipo_var -> lista_classtype .) ]


state 273

    (143) expstruct -> lista_classtype LLLAV lista_att RLLAV .

    PCOMA           reduce using rule 143 (expstruct -> lista_classtype LLLAV lista_att RLLAV .)
    COMA            reduce using rule 143 (expstruct -> lista_classtype LLLAV lista_att RLLAV .)
    RCOR            reduce using rule 143 (expstruct -> lista_classtype LLLAV lista_att RLLAV .)
    RPAR            reduce using rule 143 (expstruct -> lista_classtype LLLAV lista_att RLLAV .)
    RLLAV           reduce using rule 143 (expstruct -> lista_classtype LLLAV lista_att RLLAV .)
    ID              reduce using rule 143 (expstruct -> lista_classtype LLLAV lista_att RLLAV .)
    PRINT           reduce using rule 143 (expstruct -> lista_classtype LLLAV lista_att RLLAV .)
    LET             reduce using rule 143 (expstruct -> lista_classtype LLLAV lista_att RLLAV .)
    CONTINUE        reduce using rule 143 (expstruct -> lista_classtype LLLAV lista_att RLLAV .)
    BREAK           reduce using rule 143 (expstruct -> lista_classtype LLLAV lista_att RLLAV .)
    RETURN          reduce using rule 143 (expstruct -> lista_classtype LLLAV lista_att RLLAV .)
    IF              reduce using rule 143 (expstruct -> lista_classtype LLLAV lista_att RLLAV .)
    MATCH           reduce using rule 143 (expstruct -> lista_classtype LLLAV lista_att RLLAV .)
    LOOP            reduce using rule 143 (expstruct -> lista_classtype LLLAV lista_att RLLAV .)
    WHILE           reduce using rule 143 (expstruct -> lista_classtype LLLAV lista_att RLLAV .)
    FOR             reduce using rule 143 (expstruct -> lista_classtype LLLAV lista_att RLLAV .)
    LPAR            reduce using rule 143 (expstruct -> lista_classtype LLLAV lista_att RLLAV .)
    MENOS           reduce using rule 143 (expstruct -> lista_classtype LLLAV lista_att RLLAV .)
    AD              reduce using rule 143 (expstruct -> lista_classtype LLLAV lista_att RLLAV .)
    LCOR            reduce using rule 143 (expstruct -> lista_classtype LLLAV lista_att RLLAV .)
    VEC             reduce using rule 143 (expstruct -> lista_classtype LLLAV lista_att RLLAV .)
    VECTOR          reduce using rule 143 (expstruct -> lista_classtype LLLAV lista_att RLLAV .)
    MUT             reduce using rule 143 (expstruct -> lista_classtype LLLAV lista_att RLLAV .)
    ANDSINGLE       reduce using rule 143 (expstruct -> lista_classtype LLLAV lista_att RLLAV .)
    I64             reduce using rule 143 (expstruct -> lista_classtype LLLAV lista_att RLLAV .)
    F64             reduce using rule 143 (expstruct -> lista_classtype LLLAV lista_att RLLAV .)
    ENTERO          reduce using rule 143 (expstruct -> lista_classtype LLLAV lista_att RLLAV .)
    DECIMAL         reduce using rule 143 (expstruct -> lista_classtype LLLAV lista_att RLLAV .)
    CADENA          reduce using rule 143 (expstruct -> lista_classtype LLLAV lista_att RLLAV .)
    BOOLEANO        reduce using rule 143 (expstruct -> lista_classtype LLLAV lista_att RLLAV .)
    CARACTER        reduce using rule 143 (expstruct -> lista_classtype LLLAV lista_att RLLAV .)


state 274

    (146) lista_att -> lista_att COMA . ID DPUNTOS auxexp

    ID              shift and go to state 307


state 275

    (147) lista_att -> ID DPUNTOS . auxexp
    (108) auxexp -> . expstruct
    (109) auxexp -> . exp
    (143) expstruct -> . lista_classtype LLLAV lista_att RLLAV
    (144) expstruct -> . lista_classtype LLLAV RLLAV
    (145) expstruct -> . lista_classtype DPUNTOS DPUNTOS llamada
    (110) exp -> . LPAR exp RPAR
    (111) exp -> . expmath
    (112) exp -> . expop
    (113) exp -> . exprel
    (114) exp -> . exparr
    (115) exp -> . newarray
    (116) exp -> . expvec
    (117) exp -> . exparam
    (118) exp -> . exppow
    (119) exp -> . expcast
    (120) exp -> . lista_acc
    (121) exp -> . llamada
    (122) exp -> . sentencia
    (123) exp -> . valores
    (124) exp -> . exp PUNTO exp_native
    (174) lista_classtype -> . lista_classtype DPUNTOS DPUNTOS ID
    (175) lista_classtype -> . ID
    (125) expmath -> . exp MAS exp
    (126) expmath -> . exp MENOS exp
    (127) expmath -> . exp MULTIPLICACION exp
    (128) expmath -> . exp DIVISION exp
    (129) expmath -> . exp MODULO exp
    (130) expmath -> . MENOS exp
    (133) expop -> . exp AND exp
    (134) expop -> . exp OR exp
    (135) expop -> . AD exp
    (137) exprel -> . exp IGUALI exp
    (138) exprel -> . exp DIF exp
    (139) exprel -> . exp MAYOR exp
    (140) exprel -> . exp MENOR exp
    (141) exprel -> . exp MAYORI exp
    (142) exprel -> . exp MENORI exp
    (152) exparr -> . ID lista_arr
    (155) newarray -> . LCOR lista_exp RCOR
    (156) newarray -> . LCOR auxexp PCOMA exp RCOR
    (153) expvec -> . VEC AD newarray
    (154) expvec -> . VECTOR DPUNTOS DPUNTOS exp_natarr
    (148) exparam -> . MUT ID
    (149) exparam -> . MUT valores
    (150) exparam -> . ANDSINGLE MUT ID
    (151) exparam -> . ANDSINGLE MUT valores
    (131) exppow -> . I64 DPUNTOS DPUNTOS POW LPAR exp COMA exp RPAR
    (132) exppow -> . F64 DPUNTOS DPUNTOS POWF LPAR exp COMA exp RPAR
    (136) expcast -> . exp AS tipo_var
    (92) lista_acc -> . lista_acc PUNTO ID
    (93) lista_acc -> . lista_acc PUNTO exp_native
    (94) lista_acc -> . auxacc
    (176) llamada -> . ID LPAR RPAR
    (177) llamada -> . ID LPAR lista_exp RPAR
    (37) sentencia -> . if
    (38) sentencia -> . match
    (39) sentencia -> . loop
    (40) sentencia -> . while
    (41) sentencia -> . for
    (157) valores -> . ENTERO
    (158) valores -> . DECIMAL
    (159) valores -> . CADENA
    (160) valores -> . BOOLEANO
    (161) valores -> . CARACTER
    (95) auxacc -> . exparr
    (96) auxacc -> . ID
    (42) if -> . IF exp statement else
    (47) match -> . MATCH exp match_statement
    (62) loop -> . LOOP statement
    (63) while -> . WHILE exp statement
    (64) for -> . FOR ID IN foriterative statement

    LPAR            shift and go to state 29
    ID              shift and go to state 72
    MENOS           shift and go to state 43
    AD              shift and go to state 44
    LCOR            shift and go to state 46
    VEC             shift and go to state 47
    VECTOR          shift and go to state 48
    MUT             shift and go to state 49
    ANDSINGLE       shift and go to state 50
    I64             shift and go to state 51
    F64             shift and go to state 52
    ENTERO          shift and go to state 59
    DECIMAL         shift and go to state 60
    CADENA          shift and go to state 61
    BOOLEANO        shift and go to state 62
    CARACTER        shift and go to state 63
    IF              shift and go to state 12
    MATCH           shift and go to state 64
    LOOP            shift and go to state 65
    WHILE           shift and go to state 13
    FOR             shift and go to state 66

    auxexp                         shift and go to state 308
    expstruct                      shift and go to state 74
    exp                            shift and go to state 75
    lista_classtype                shift and go to state 76
    llamada                        shift and go to state 40
    expmath                        shift and go to state 30
    expop                          shift and go to state 31
    exprel                         shift and go to state 32
    exparr                         shift and go to state 33
    newarray                       shift and go to state 34
    expvec                         shift and go to state 35
    exparam                        shift and go to state 36
    exppow                         shift and go to state 37
    expcast                        shift and go to state 38
    lista_acc                      shift and go to state 39
    sentencia                      shift and go to state 41
    valores                        shift and go to state 42
    auxacc                         shift and go to state 53
    if                             shift and go to state 54
    match                          shift and go to state 55
    loop                           shift and go to state 56
    while                          shift and go to state 57
    for                            shift and go to state 58

state 276

    (145) expstruct -> lista_classtype DPUNTOS DPUNTOS llamada .

    PCOMA           reduce using rule 145 (expstruct -> lista_classtype DPUNTOS DPUNTOS llamada .)
    COMA            reduce using rule 145 (expstruct -> lista_classtype DPUNTOS DPUNTOS llamada .)
    RCOR            reduce using rule 145 (expstruct -> lista_classtype DPUNTOS DPUNTOS llamada .)
    RPAR            reduce using rule 145 (expstruct -> lista_classtype DPUNTOS DPUNTOS llamada .)
    RLLAV           reduce using rule 145 (expstruct -> lista_classtype DPUNTOS DPUNTOS llamada .)
    ID              reduce using rule 145 (expstruct -> lista_classtype DPUNTOS DPUNTOS llamada .)
    PRINT           reduce using rule 145 (expstruct -> lista_classtype DPUNTOS DPUNTOS llamada .)
    LET             reduce using rule 145 (expstruct -> lista_classtype DPUNTOS DPUNTOS llamada .)
    CONTINUE        reduce using rule 145 (expstruct -> lista_classtype DPUNTOS DPUNTOS llamada .)
    BREAK           reduce using rule 145 (expstruct -> lista_classtype DPUNTOS DPUNTOS llamada .)
    RETURN          reduce using rule 145 (expstruct -> lista_classtype DPUNTOS DPUNTOS llamada .)
    IF              reduce using rule 145 (expstruct -> lista_classtype DPUNTOS DPUNTOS llamada .)
    MATCH           reduce using rule 145 (expstruct -> lista_classtype DPUNTOS DPUNTOS llamada .)
    LOOP            reduce using rule 145 (expstruct -> lista_classtype DPUNTOS DPUNTOS llamada .)
    WHILE           reduce using rule 145 (expstruct -> lista_classtype DPUNTOS DPUNTOS llamada .)
    FOR             reduce using rule 145 (expstruct -> lista_classtype DPUNTOS DPUNTOS llamada .)
    LPAR            reduce using rule 145 (expstruct -> lista_classtype DPUNTOS DPUNTOS llamada .)
    MENOS           reduce using rule 145 (expstruct -> lista_classtype DPUNTOS DPUNTOS llamada .)
    AD              reduce using rule 145 (expstruct -> lista_classtype DPUNTOS DPUNTOS llamada .)
    LCOR            reduce using rule 145 (expstruct -> lista_classtype DPUNTOS DPUNTOS llamada .)
    VEC             reduce using rule 145 (expstruct -> lista_classtype DPUNTOS DPUNTOS llamada .)
    VECTOR          reduce using rule 145 (expstruct -> lista_classtype DPUNTOS DPUNTOS llamada .)
    MUT             reduce using rule 145 (expstruct -> lista_classtype DPUNTOS DPUNTOS llamada .)
    ANDSINGLE       reduce using rule 145 (expstruct -> lista_classtype DPUNTOS DPUNTOS llamada .)
    I64             reduce using rule 145 (expstruct -> lista_classtype DPUNTOS DPUNTOS llamada .)
    F64             reduce using rule 145 (expstruct -> lista_classtype DPUNTOS DPUNTOS llamada .)
    ENTERO          reduce using rule 145 (expstruct -> lista_classtype DPUNTOS DPUNTOS llamada .)
    DECIMAL         reduce using rule 145 (expstruct -> lista_classtype DPUNTOS DPUNTOS llamada .)
    CADENA          reduce using rule 145 (expstruct -> lista_classtype DPUNTOS DPUNTOS llamada .)
    BOOLEANO        reduce using rule 145 (expstruct -> lista_classtype DPUNTOS DPUNTOS llamada .)
    CARACTER        reduce using rule 145 (expstruct -> lista_classtype DPUNTOS DPUNTOS llamada .)


state 277

    (174) lista_classtype -> lista_classtype DPUNTOS DPUNTOS ID .
    (176) llamada -> ID . LPAR RPAR
    (177) llamada -> ID . LPAR lista_exp RPAR

    LLLAV           reduce using rule 174 (lista_classtype -> lista_classtype DPUNTOS DPUNTOS ID .)
    DPUNTOS         reduce using rule 174 (lista_classtype -> lista_classtype DPUNTOS DPUNTOS ID .)
    LPAR            shift and go to state 107


state 278

    (178) exp_native -> TOSTRING LPAR RPAR .

    PUNTO           reduce using rule 178 (exp_native -> TOSTRING LPAR RPAR .)
    MAS             reduce using rule 178 (exp_native -> TOSTRING LPAR RPAR .)
    MENOS           reduce using rule 178 (exp_native -> TOSTRING LPAR RPAR .)
    MULTIPLICACION  reduce using rule 178 (exp_native -> TOSTRING LPAR RPAR .)
    DIVISION        reduce using rule 178 (exp_native -> TOSTRING LPAR RPAR .)
    MODULO          reduce using rule 178 (exp_native -> TOSTRING LPAR RPAR .)
    AND             reduce using rule 178 (exp_native -> TOSTRING LPAR RPAR .)
    OR              reduce using rule 178 (exp_native -> TOSTRING LPAR RPAR .)
    IGUALI          reduce using rule 178 (exp_native -> TOSTRING LPAR RPAR .)
    DIF             reduce using rule 178 (exp_native -> TOSTRING LPAR RPAR .)
    MAYOR           reduce using rule 178 (exp_native -> TOSTRING LPAR RPAR .)
    MENOR           reduce using rule 178 (exp_native -> TOSTRING LPAR RPAR .)
    MAYORI          reduce using rule 178 (exp_native -> TOSTRING LPAR RPAR .)
    MENORI          reduce using rule 178 (exp_native -> TOSTRING LPAR RPAR .)
    AS              reduce using rule 178 (exp_native -> TOSTRING LPAR RPAR .)
    LLLAV           reduce using rule 178 (exp_native -> TOSTRING LPAR RPAR .)
    PCOMA           reduce using rule 178 (exp_native -> TOSTRING LPAR RPAR .)
    COMA            reduce using rule 178 (exp_native -> TOSTRING LPAR RPAR .)
    RCOR            reduce using rule 178 (exp_native -> TOSTRING LPAR RPAR .)
    RPAR            reduce using rule 178 (exp_native -> TOSTRING LPAR RPAR .)
    RLLAV           reduce using rule 178 (exp_native -> TOSTRING LPAR RPAR .)
    ID              reduce using rule 178 (exp_native -> TOSTRING LPAR RPAR .)
    PRINT           reduce using rule 178 (exp_native -> TOSTRING LPAR RPAR .)
    LET             reduce using rule 178 (exp_native -> TOSTRING LPAR RPAR .)
    CONTINUE        reduce using rule 178 (exp_native -> TOSTRING LPAR RPAR .)
    BREAK           reduce using rule 178 (exp_native -> TOSTRING LPAR RPAR .)
    RETURN          reduce using rule 178 (exp_native -> TOSTRING LPAR RPAR .)
    IF              reduce using rule 178 (exp_native -> TOSTRING LPAR RPAR .)
    MATCH           reduce using rule 178 (exp_native -> TOSTRING LPAR RPAR .)
    LOOP            reduce using rule 178 (exp_native -> TOSTRING LPAR RPAR .)
    WHILE           reduce using rule 178 (exp_native -> TOSTRING LPAR RPAR .)
    FOR             reduce using rule 178 (exp_native -> TOSTRING LPAR RPAR .)
    LPAR            reduce using rule 178 (exp_native -> TOSTRING LPAR RPAR .)
    AD              reduce using rule 178 (exp_native -> TOSTRING LPAR RPAR .)
    LCOR            reduce using rule 178 (exp_native -> TOSTRING LPAR RPAR .)
    VEC             reduce using rule 178 (exp_native -> TOSTRING LPAR RPAR .)
    VECTOR          reduce using rule 178 (exp_native -> TOSTRING LPAR RPAR .)
    MUT             reduce using rule 178 (exp_native -> TOSTRING LPAR RPAR .)
    ANDSINGLE       reduce using rule 178 (exp_native -> TOSTRING LPAR RPAR .)
    I64             reduce using rule 178 (exp_native -> TOSTRING LPAR RPAR .)
    F64             reduce using rule 178 (exp_native -> TOSTRING LPAR RPAR .)
    ENTERO          reduce using rule 178 (exp_native -> TOSTRING LPAR RPAR .)
    DECIMAL         reduce using rule 178 (exp_native -> TOSTRING LPAR RPAR .)
    CADENA          reduce using rule 178 (exp_native -> TOSTRING LPAR RPAR .)
    BOOLEANO        reduce using rule 178 (exp_native -> TOSTRING LPAR RPAR .)
    CARACTER        reduce using rule 178 (exp_native -> TOSTRING LPAR RPAR .)
    ARROW2          reduce using rule 178 (exp_native -> TOSTRING LPAR RPAR .)
    ORSINGLE        reduce using rule 178 (exp_native -> TOSTRING LPAR RPAR .)


state 279

    (179) exp_native -> TOOWNED LPAR RPAR .

    PUNTO           reduce using rule 179 (exp_native -> TOOWNED LPAR RPAR .)
    MAS             reduce using rule 179 (exp_native -> TOOWNED LPAR RPAR .)
    MENOS           reduce using rule 179 (exp_native -> TOOWNED LPAR RPAR .)
    MULTIPLICACION  reduce using rule 179 (exp_native -> TOOWNED LPAR RPAR .)
    DIVISION        reduce using rule 179 (exp_native -> TOOWNED LPAR RPAR .)
    MODULO          reduce using rule 179 (exp_native -> TOOWNED LPAR RPAR .)
    AND             reduce using rule 179 (exp_native -> TOOWNED LPAR RPAR .)
    OR              reduce using rule 179 (exp_native -> TOOWNED LPAR RPAR .)
    IGUALI          reduce using rule 179 (exp_native -> TOOWNED LPAR RPAR .)
    DIF             reduce using rule 179 (exp_native -> TOOWNED LPAR RPAR .)
    MAYOR           reduce using rule 179 (exp_native -> TOOWNED LPAR RPAR .)
    MENOR           reduce using rule 179 (exp_native -> TOOWNED LPAR RPAR .)
    MAYORI          reduce using rule 179 (exp_native -> TOOWNED LPAR RPAR .)
    MENORI          reduce using rule 179 (exp_native -> TOOWNED LPAR RPAR .)
    AS              reduce using rule 179 (exp_native -> TOOWNED LPAR RPAR .)
    LLLAV           reduce using rule 179 (exp_native -> TOOWNED LPAR RPAR .)
    PCOMA           reduce using rule 179 (exp_native -> TOOWNED LPAR RPAR .)
    COMA            reduce using rule 179 (exp_native -> TOOWNED LPAR RPAR .)
    RCOR            reduce using rule 179 (exp_native -> TOOWNED LPAR RPAR .)
    RPAR            reduce using rule 179 (exp_native -> TOOWNED LPAR RPAR .)
    RLLAV           reduce using rule 179 (exp_native -> TOOWNED LPAR RPAR .)
    ID              reduce using rule 179 (exp_native -> TOOWNED LPAR RPAR .)
    PRINT           reduce using rule 179 (exp_native -> TOOWNED LPAR RPAR .)
    LET             reduce using rule 179 (exp_native -> TOOWNED LPAR RPAR .)
    CONTINUE        reduce using rule 179 (exp_native -> TOOWNED LPAR RPAR .)
    BREAK           reduce using rule 179 (exp_native -> TOOWNED LPAR RPAR .)
    RETURN          reduce using rule 179 (exp_native -> TOOWNED LPAR RPAR .)
    IF              reduce using rule 179 (exp_native -> TOOWNED LPAR RPAR .)
    MATCH           reduce using rule 179 (exp_native -> TOOWNED LPAR RPAR .)
    LOOP            reduce using rule 179 (exp_native -> TOOWNED LPAR RPAR .)
    WHILE           reduce using rule 179 (exp_native -> TOOWNED LPAR RPAR .)
    FOR             reduce using rule 179 (exp_native -> TOOWNED LPAR RPAR .)
    LPAR            reduce using rule 179 (exp_native -> TOOWNED LPAR RPAR .)
    AD              reduce using rule 179 (exp_native -> TOOWNED LPAR RPAR .)
    LCOR            reduce using rule 179 (exp_native -> TOOWNED LPAR RPAR .)
    VEC             reduce using rule 179 (exp_native -> TOOWNED LPAR RPAR .)
    VECTOR          reduce using rule 179 (exp_native -> TOOWNED LPAR RPAR .)
    MUT             reduce using rule 179 (exp_native -> TOOWNED LPAR RPAR .)
    ANDSINGLE       reduce using rule 179 (exp_native -> TOOWNED LPAR RPAR .)
    I64             reduce using rule 179 (exp_native -> TOOWNED LPAR RPAR .)
    F64             reduce using rule 179 (exp_native -> TOOWNED LPAR RPAR .)
    ENTERO          reduce using rule 179 (exp_native -> TOOWNED LPAR RPAR .)
    DECIMAL         reduce using rule 179 (exp_native -> TOOWNED LPAR RPAR .)
    CADENA          reduce using rule 179 (exp_native -> TOOWNED LPAR RPAR .)
    BOOLEANO        reduce using rule 179 (exp_native -> TOOWNED LPAR RPAR .)
    CARACTER        reduce using rule 179 (exp_native -> TOOWNED LPAR RPAR .)
    ARROW2          reduce using rule 179 (exp_native -> TOOWNED LPAR RPAR .)
    ORSINGLE        reduce using rule 179 (exp_native -> TOOWNED LPAR RPAR .)


state 280

    (180) exp_native -> CLONE LPAR RPAR .

    PUNTO           reduce using rule 180 (exp_native -> CLONE LPAR RPAR .)
    MAS             reduce using rule 180 (exp_native -> CLONE LPAR RPAR .)
    MENOS           reduce using rule 180 (exp_native -> CLONE LPAR RPAR .)
    MULTIPLICACION  reduce using rule 180 (exp_native -> CLONE LPAR RPAR .)
    DIVISION        reduce using rule 180 (exp_native -> CLONE LPAR RPAR .)
    MODULO          reduce using rule 180 (exp_native -> CLONE LPAR RPAR .)
    AND             reduce using rule 180 (exp_native -> CLONE LPAR RPAR .)
    OR              reduce using rule 180 (exp_native -> CLONE LPAR RPAR .)
    IGUALI          reduce using rule 180 (exp_native -> CLONE LPAR RPAR .)
    DIF             reduce using rule 180 (exp_native -> CLONE LPAR RPAR .)
    MAYOR           reduce using rule 180 (exp_native -> CLONE LPAR RPAR .)
    MENOR           reduce using rule 180 (exp_native -> CLONE LPAR RPAR .)
    MAYORI          reduce using rule 180 (exp_native -> CLONE LPAR RPAR .)
    MENORI          reduce using rule 180 (exp_native -> CLONE LPAR RPAR .)
    AS              reduce using rule 180 (exp_native -> CLONE LPAR RPAR .)
    LLLAV           reduce using rule 180 (exp_native -> CLONE LPAR RPAR .)
    PCOMA           reduce using rule 180 (exp_native -> CLONE LPAR RPAR .)
    COMA            reduce using rule 180 (exp_native -> CLONE LPAR RPAR .)
    RCOR            reduce using rule 180 (exp_native -> CLONE LPAR RPAR .)
    RPAR            reduce using rule 180 (exp_native -> CLONE LPAR RPAR .)
    RLLAV           reduce using rule 180 (exp_native -> CLONE LPAR RPAR .)
    ID              reduce using rule 180 (exp_native -> CLONE LPAR RPAR .)
    PRINT           reduce using rule 180 (exp_native -> CLONE LPAR RPAR .)
    LET             reduce using rule 180 (exp_native -> CLONE LPAR RPAR .)
    CONTINUE        reduce using rule 180 (exp_native -> CLONE LPAR RPAR .)
    BREAK           reduce using rule 180 (exp_native -> CLONE LPAR RPAR .)
    RETURN          reduce using rule 180 (exp_native -> CLONE LPAR RPAR .)
    IF              reduce using rule 180 (exp_native -> CLONE LPAR RPAR .)
    MATCH           reduce using rule 180 (exp_native -> CLONE LPAR RPAR .)
    LOOP            reduce using rule 180 (exp_native -> CLONE LPAR RPAR .)
    WHILE           reduce using rule 180 (exp_native -> CLONE LPAR RPAR .)
    FOR             reduce using rule 180 (exp_native -> CLONE LPAR RPAR .)
    LPAR            reduce using rule 180 (exp_native -> CLONE LPAR RPAR .)
    AD              reduce using rule 180 (exp_native -> CLONE LPAR RPAR .)
    LCOR            reduce using rule 180 (exp_native -> CLONE LPAR RPAR .)
    VEC             reduce using rule 180 (exp_native -> CLONE LPAR RPAR .)
    VECTOR          reduce using rule 180 (exp_native -> CLONE LPAR RPAR .)
    MUT             reduce using rule 180 (exp_native -> CLONE LPAR RPAR .)
    ANDSINGLE       reduce using rule 180 (exp_native -> CLONE LPAR RPAR .)
    I64             reduce using rule 180 (exp_native -> CLONE LPAR RPAR .)
    F64             reduce using rule 180 (exp_native -> CLONE LPAR RPAR .)
    ENTERO          reduce using rule 180 (exp_native -> CLONE LPAR RPAR .)
    DECIMAL         reduce using rule 180 (exp_native -> CLONE LPAR RPAR .)
    CADENA          reduce using rule 180 (exp_native -> CLONE LPAR RPAR .)
    BOOLEANO        reduce using rule 180 (exp_native -> CLONE LPAR RPAR .)
    CARACTER        reduce using rule 180 (exp_native -> CLONE LPAR RPAR .)
    ARROW2          reduce using rule 180 (exp_native -> CLONE LPAR RPAR .)
    ORSINGLE        reduce using rule 180 (exp_native -> CLONE LPAR RPAR .)


state 281

    (181) exp_native -> LEN LPAR RPAR .

    PUNTO           reduce using rule 181 (exp_native -> LEN LPAR RPAR .)
    MAS             reduce using rule 181 (exp_native -> LEN LPAR RPAR .)
    MENOS           reduce using rule 181 (exp_native -> LEN LPAR RPAR .)
    MULTIPLICACION  reduce using rule 181 (exp_native -> LEN LPAR RPAR .)
    DIVISION        reduce using rule 181 (exp_native -> LEN LPAR RPAR .)
    MODULO          reduce using rule 181 (exp_native -> LEN LPAR RPAR .)
    AND             reduce using rule 181 (exp_native -> LEN LPAR RPAR .)
    OR              reduce using rule 181 (exp_native -> LEN LPAR RPAR .)
    IGUALI          reduce using rule 181 (exp_native -> LEN LPAR RPAR .)
    DIF             reduce using rule 181 (exp_native -> LEN LPAR RPAR .)
    MAYOR           reduce using rule 181 (exp_native -> LEN LPAR RPAR .)
    MENOR           reduce using rule 181 (exp_native -> LEN LPAR RPAR .)
    MAYORI          reduce using rule 181 (exp_native -> LEN LPAR RPAR .)
    MENORI          reduce using rule 181 (exp_native -> LEN LPAR RPAR .)
    AS              reduce using rule 181 (exp_native -> LEN LPAR RPAR .)
    LLLAV           reduce using rule 181 (exp_native -> LEN LPAR RPAR .)
    PCOMA           reduce using rule 181 (exp_native -> LEN LPAR RPAR .)
    COMA            reduce using rule 181 (exp_native -> LEN LPAR RPAR .)
    RCOR            reduce using rule 181 (exp_native -> LEN LPAR RPAR .)
    RPAR            reduce using rule 181 (exp_native -> LEN LPAR RPAR .)
    RLLAV           reduce using rule 181 (exp_native -> LEN LPAR RPAR .)
    ID              reduce using rule 181 (exp_native -> LEN LPAR RPAR .)
    PRINT           reduce using rule 181 (exp_native -> LEN LPAR RPAR .)
    LET             reduce using rule 181 (exp_native -> LEN LPAR RPAR .)
    CONTINUE        reduce using rule 181 (exp_native -> LEN LPAR RPAR .)
    BREAK           reduce using rule 181 (exp_native -> LEN LPAR RPAR .)
    RETURN          reduce using rule 181 (exp_native -> LEN LPAR RPAR .)
    IF              reduce using rule 181 (exp_native -> LEN LPAR RPAR .)
    MATCH           reduce using rule 181 (exp_native -> LEN LPAR RPAR .)
    LOOP            reduce using rule 181 (exp_native -> LEN LPAR RPAR .)
    WHILE           reduce using rule 181 (exp_native -> LEN LPAR RPAR .)
    FOR             reduce using rule 181 (exp_native -> LEN LPAR RPAR .)
    LPAR            reduce using rule 181 (exp_native -> LEN LPAR RPAR .)
    AD              reduce using rule 181 (exp_native -> LEN LPAR RPAR .)
    LCOR            reduce using rule 181 (exp_native -> LEN LPAR RPAR .)
    VEC             reduce using rule 181 (exp_native -> LEN LPAR RPAR .)
    VECTOR          reduce using rule 181 (exp_native -> LEN LPAR RPAR .)
    MUT             reduce using rule 181 (exp_native -> LEN LPAR RPAR .)
    ANDSINGLE       reduce using rule 181 (exp_native -> LEN LPAR RPAR .)
    I64             reduce using rule 181 (exp_native -> LEN LPAR RPAR .)
    F64             reduce using rule 181 (exp_native -> LEN LPAR RPAR .)
    ENTERO          reduce using rule 181 (exp_native -> LEN LPAR RPAR .)
    DECIMAL         reduce using rule 181 (exp_native -> LEN LPAR RPAR .)
    CADENA          reduce using rule 181 (exp_native -> LEN LPAR RPAR .)
    BOOLEANO        reduce using rule 181 (exp_native -> LEN LPAR RPAR .)
    CARACTER        reduce using rule 181 (exp_native -> LEN LPAR RPAR .)
    ARROW2          reduce using rule 181 (exp_native -> LEN LPAR RPAR .)
    ORSINGLE        reduce using rule 181 (exp_native -> LEN LPAR RPAR .)


state 282

    (182) exp_native -> CAPACITY LPAR RPAR .

    PUNTO           reduce using rule 182 (exp_native -> CAPACITY LPAR RPAR .)
    MAS             reduce using rule 182 (exp_native -> CAPACITY LPAR RPAR .)
    MENOS           reduce using rule 182 (exp_native -> CAPACITY LPAR RPAR .)
    MULTIPLICACION  reduce using rule 182 (exp_native -> CAPACITY LPAR RPAR .)
    DIVISION        reduce using rule 182 (exp_native -> CAPACITY LPAR RPAR .)
    MODULO          reduce using rule 182 (exp_native -> CAPACITY LPAR RPAR .)
    AND             reduce using rule 182 (exp_native -> CAPACITY LPAR RPAR .)
    OR              reduce using rule 182 (exp_native -> CAPACITY LPAR RPAR .)
    IGUALI          reduce using rule 182 (exp_native -> CAPACITY LPAR RPAR .)
    DIF             reduce using rule 182 (exp_native -> CAPACITY LPAR RPAR .)
    MAYOR           reduce using rule 182 (exp_native -> CAPACITY LPAR RPAR .)
    MENOR           reduce using rule 182 (exp_native -> CAPACITY LPAR RPAR .)
    MAYORI          reduce using rule 182 (exp_native -> CAPACITY LPAR RPAR .)
    MENORI          reduce using rule 182 (exp_native -> CAPACITY LPAR RPAR .)
    AS              reduce using rule 182 (exp_native -> CAPACITY LPAR RPAR .)
    LLLAV           reduce using rule 182 (exp_native -> CAPACITY LPAR RPAR .)
    PCOMA           reduce using rule 182 (exp_native -> CAPACITY LPAR RPAR .)
    COMA            reduce using rule 182 (exp_native -> CAPACITY LPAR RPAR .)
    RCOR            reduce using rule 182 (exp_native -> CAPACITY LPAR RPAR .)
    RPAR            reduce using rule 182 (exp_native -> CAPACITY LPAR RPAR .)
    RLLAV           reduce using rule 182 (exp_native -> CAPACITY LPAR RPAR .)
    ID              reduce using rule 182 (exp_native -> CAPACITY LPAR RPAR .)
    PRINT           reduce using rule 182 (exp_native -> CAPACITY LPAR RPAR .)
    LET             reduce using rule 182 (exp_native -> CAPACITY LPAR RPAR .)
    CONTINUE        reduce using rule 182 (exp_native -> CAPACITY LPAR RPAR .)
    BREAK           reduce using rule 182 (exp_native -> CAPACITY LPAR RPAR .)
    RETURN          reduce using rule 182 (exp_native -> CAPACITY LPAR RPAR .)
    IF              reduce using rule 182 (exp_native -> CAPACITY LPAR RPAR .)
    MATCH           reduce using rule 182 (exp_native -> CAPACITY LPAR RPAR .)
    LOOP            reduce using rule 182 (exp_native -> CAPACITY LPAR RPAR .)
    WHILE           reduce using rule 182 (exp_native -> CAPACITY LPAR RPAR .)
    FOR             reduce using rule 182 (exp_native -> CAPACITY LPAR RPAR .)
    LPAR            reduce using rule 182 (exp_native -> CAPACITY LPAR RPAR .)
    AD              reduce using rule 182 (exp_native -> CAPACITY LPAR RPAR .)
    LCOR            reduce using rule 182 (exp_native -> CAPACITY LPAR RPAR .)
    VEC             reduce using rule 182 (exp_native -> CAPACITY LPAR RPAR .)
    VECTOR          reduce using rule 182 (exp_native -> CAPACITY LPAR RPAR .)
    MUT             reduce using rule 182 (exp_native -> CAPACITY LPAR RPAR .)
    ANDSINGLE       reduce using rule 182 (exp_native -> CAPACITY LPAR RPAR .)
    I64             reduce using rule 182 (exp_native -> CAPACITY LPAR RPAR .)
    F64             reduce using rule 182 (exp_native -> CAPACITY LPAR RPAR .)
    ENTERO          reduce using rule 182 (exp_native -> CAPACITY LPAR RPAR .)
    DECIMAL         reduce using rule 182 (exp_native -> CAPACITY LPAR RPAR .)
    CADENA          reduce using rule 182 (exp_native -> CAPACITY LPAR RPAR .)
    BOOLEANO        reduce using rule 182 (exp_native -> CAPACITY LPAR RPAR .)
    CARACTER        reduce using rule 182 (exp_native -> CAPACITY LPAR RPAR .)
    ARROW2          reduce using rule 182 (exp_native -> CAPACITY LPAR RPAR .)
    ORSINGLE        reduce using rule 182 (exp_native -> CAPACITY LPAR RPAR .)


state 283

    (183) exp_native -> REMOVE LPAR auxexp . RPAR

    RPAR            shift and go to state 309


state 284

    (184) exp_native -> CONTAINS LPAR ANDSINGLE . auxexp RPAR
    (108) auxexp -> . expstruct
    (109) auxexp -> . exp
    (143) expstruct -> . lista_classtype LLLAV lista_att RLLAV
    (144) expstruct -> . lista_classtype LLLAV RLLAV
    (145) expstruct -> . lista_classtype DPUNTOS DPUNTOS llamada
    (110) exp -> . LPAR exp RPAR
    (111) exp -> . expmath
    (112) exp -> . expop
    (113) exp -> . exprel
    (114) exp -> . exparr
    (115) exp -> . newarray
    (116) exp -> . expvec
    (117) exp -> . exparam
    (118) exp -> . exppow
    (119) exp -> . expcast
    (120) exp -> . lista_acc
    (121) exp -> . llamada
    (122) exp -> . sentencia
    (123) exp -> . valores
    (124) exp -> . exp PUNTO exp_native
    (174) lista_classtype -> . lista_classtype DPUNTOS DPUNTOS ID
    (175) lista_classtype -> . ID
    (125) expmath -> . exp MAS exp
    (126) expmath -> . exp MENOS exp
    (127) expmath -> . exp MULTIPLICACION exp
    (128) expmath -> . exp DIVISION exp
    (129) expmath -> . exp MODULO exp
    (130) expmath -> . MENOS exp
    (133) expop -> . exp AND exp
    (134) expop -> . exp OR exp
    (135) expop -> . AD exp
    (137) exprel -> . exp IGUALI exp
    (138) exprel -> . exp DIF exp
    (139) exprel -> . exp MAYOR exp
    (140) exprel -> . exp MENOR exp
    (141) exprel -> . exp MAYORI exp
    (142) exprel -> . exp MENORI exp
    (152) exparr -> . ID lista_arr
    (155) newarray -> . LCOR lista_exp RCOR
    (156) newarray -> . LCOR auxexp PCOMA exp RCOR
    (153) expvec -> . VEC AD newarray
    (154) expvec -> . VECTOR DPUNTOS DPUNTOS exp_natarr
    (148) exparam -> . MUT ID
    (149) exparam -> . MUT valores
    (150) exparam -> . ANDSINGLE MUT ID
    (151) exparam -> . ANDSINGLE MUT valores
    (131) exppow -> . I64 DPUNTOS DPUNTOS POW LPAR exp COMA exp RPAR
    (132) exppow -> . F64 DPUNTOS DPUNTOS POWF LPAR exp COMA exp RPAR
    (136) expcast -> . exp AS tipo_var
    (92) lista_acc -> . lista_acc PUNTO ID
    (93) lista_acc -> . lista_acc PUNTO exp_native
    (94) lista_acc -> . auxacc
    (176) llamada -> . ID LPAR RPAR
    (177) llamada -> . ID LPAR lista_exp RPAR
    (37) sentencia -> . if
    (38) sentencia -> . match
    (39) sentencia -> . loop
    (40) sentencia -> . while
    (41) sentencia -> . for
    (157) valores -> . ENTERO
    (158) valores -> . DECIMAL
    (159) valores -> . CADENA
    (160) valores -> . BOOLEANO
    (161) valores -> . CARACTER
    (95) auxacc -> . exparr
    (96) auxacc -> . ID
    (42) if -> . IF exp statement else
    (47) match -> . MATCH exp match_statement
    (62) loop -> . LOOP statement
    (63) while -> . WHILE exp statement
    (64) for -> . FOR ID IN foriterative statement

    LPAR            shift and go to state 29
    ID              shift and go to state 72
    MENOS           shift and go to state 43
    AD              shift and go to state 44
    LCOR            shift and go to state 46
    VEC             shift and go to state 47
    VECTOR          shift and go to state 48
    MUT             shift and go to state 49
    ANDSINGLE       shift and go to state 50
    I64             shift and go to state 51
    F64             shift and go to state 52
    ENTERO          shift and go to state 59
    DECIMAL         shift and go to state 60
    CADENA          shift and go to state 61
    BOOLEANO        shift and go to state 62
    CARACTER        shift and go to state 63
    IF              shift and go to state 12
    MATCH           shift and go to state 64
    LOOP            shift and go to state 65
    WHILE           shift and go to state 13
    FOR             shift and go to state 66

    auxexp                         shift and go to state 310
    expstruct                      shift and go to state 74
    exp                            shift and go to state 75
    lista_classtype                shift and go to state 76
    llamada                        shift and go to state 40
    expmath                        shift and go to state 30
    expop                          shift and go to state 31
    exprel                         shift and go to state 32
    exparr                         shift and go to state 33
    newarray                       shift and go to state 34
    expvec                         shift and go to state 35
    exparam                        shift and go to state 36
    exppow                         shift and go to state 37
    expcast                        shift and go to state 38
    lista_acc                      shift and go to state 39
    sentencia                      shift and go to state 41
    valores                        shift and go to state 42
    auxacc                         shift and go to state 53
    if                             shift and go to state 54
    match                          shift and go to state 55
    loop                           shift and go to state 56
    while                          shift and go to state 57
    for                            shift and go to state 58

state 285

    (185) exp_native -> PUSH LPAR auxexp . RPAR

    RPAR            shift and go to state 311


state 286

    (186) exp_native -> INSERT LPAR lista_exp . RPAR
    (99) lista_exp -> lista_exp . COMA auxexp

    RPAR            shift and go to state 312
    COMA            shift and go to state 198


state 287

    (187) exp_native -> CHARS LPAR RPAR .

    PUNTO           reduce using rule 187 (exp_native -> CHARS LPAR RPAR .)
    MAS             reduce using rule 187 (exp_native -> CHARS LPAR RPAR .)
    MENOS           reduce using rule 187 (exp_native -> CHARS LPAR RPAR .)
    MULTIPLICACION  reduce using rule 187 (exp_native -> CHARS LPAR RPAR .)
    DIVISION        reduce using rule 187 (exp_native -> CHARS LPAR RPAR .)
    MODULO          reduce using rule 187 (exp_native -> CHARS LPAR RPAR .)
    AND             reduce using rule 187 (exp_native -> CHARS LPAR RPAR .)
    OR              reduce using rule 187 (exp_native -> CHARS LPAR RPAR .)
    IGUALI          reduce using rule 187 (exp_native -> CHARS LPAR RPAR .)
    DIF             reduce using rule 187 (exp_native -> CHARS LPAR RPAR .)
    MAYOR           reduce using rule 187 (exp_native -> CHARS LPAR RPAR .)
    MENOR           reduce using rule 187 (exp_native -> CHARS LPAR RPAR .)
    MAYORI          reduce using rule 187 (exp_native -> CHARS LPAR RPAR .)
    MENORI          reduce using rule 187 (exp_native -> CHARS LPAR RPAR .)
    AS              reduce using rule 187 (exp_native -> CHARS LPAR RPAR .)
    LLLAV           reduce using rule 187 (exp_native -> CHARS LPAR RPAR .)
    PCOMA           reduce using rule 187 (exp_native -> CHARS LPAR RPAR .)
    COMA            reduce using rule 187 (exp_native -> CHARS LPAR RPAR .)
    RCOR            reduce using rule 187 (exp_native -> CHARS LPAR RPAR .)
    RPAR            reduce using rule 187 (exp_native -> CHARS LPAR RPAR .)
    RLLAV           reduce using rule 187 (exp_native -> CHARS LPAR RPAR .)
    ID              reduce using rule 187 (exp_native -> CHARS LPAR RPAR .)
    PRINT           reduce using rule 187 (exp_native -> CHARS LPAR RPAR .)
    LET             reduce using rule 187 (exp_native -> CHARS LPAR RPAR .)
    CONTINUE        reduce using rule 187 (exp_native -> CHARS LPAR RPAR .)
    BREAK           reduce using rule 187 (exp_native -> CHARS LPAR RPAR .)
    RETURN          reduce using rule 187 (exp_native -> CHARS LPAR RPAR .)
    IF              reduce using rule 187 (exp_native -> CHARS LPAR RPAR .)
    MATCH           reduce using rule 187 (exp_native -> CHARS LPAR RPAR .)
    LOOP            reduce using rule 187 (exp_native -> CHARS LPAR RPAR .)
    WHILE           reduce using rule 187 (exp_native -> CHARS LPAR RPAR .)
    FOR             reduce using rule 187 (exp_native -> CHARS LPAR RPAR .)
    LPAR            reduce using rule 187 (exp_native -> CHARS LPAR RPAR .)
    AD              reduce using rule 187 (exp_native -> CHARS LPAR RPAR .)
    LCOR            reduce using rule 187 (exp_native -> CHARS LPAR RPAR .)
    VEC             reduce using rule 187 (exp_native -> CHARS LPAR RPAR .)
    VECTOR          reduce using rule 187 (exp_native -> CHARS LPAR RPAR .)
    MUT             reduce using rule 187 (exp_native -> CHARS LPAR RPAR .)
    ANDSINGLE       reduce using rule 187 (exp_native -> CHARS LPAR RPAR .)
    I64             reduce using rule 187 (exp_native -> CHARS LPAR RPAR .)
    F64             reduce using rule 187 (exp_native -> CHARS LPAR RPAR .)
    ENTERO          reduce using rule 187 (exp_native -> CHARS LPAR RPAR .)
    DECIMAL         reduce using rule 187 (exp_native -> CHARS LPAR RPAR .)
    CADENA          reduce using rule 187 (exp_native -> CHARS LPAR RPAR .)
    BOOLEANO        reduce using rule 187 (exp_native -> CHARS LPAR RPAR .)
    CARACTER        reduce using rule 187 (exp_native -> CHARS LPAR RPAR .)
    ARROW2          reduce using rule 187 (exp_native -> CHARS LPAR RPAR .)
    ORSINGLE        reduce using rule 187 (exp_native -> CHARS LPAR RPAR .)


state 288

    (188) exp_native -> SQRT LPAR RPAR .

    PUNTO           reduce using rule 188 (exp_native -> SQRT LPAR RPAR .)
    MAS             reduce using rule 188 (exp_native -> SQRT LPAR RPAR .)
    MENOS           reduce using rule 188 (exp_native -> SQRT LPAR RPAR .)
    MULTIPLICACION  reduce using rule 188 (exp_native -> SQRT LPAR RPAR .)
    DIVISION        reduce using rule 188 (exp_native -> SQRT LPAR RPAR .)
    MODULO          reduce using rule 188 (exp_native -> SQRT LPAR RPAR .)
    AND             reduce using rule 188 (exp_native -> SQRT LPAR RPAR .)
    OR              reduce using rule 188 (exp_native -> SQRT LPAR RPAR .)
    IGUALI          reduce using rule 188 (exp_native -> SQRT LPAR RPAR .)
    DIF             reduce using rule 188 (exp_native -> SQRT LPAR RPAR .)
    MAYOR           reduce using rule 188 (exp_native -> SQRT LPAR RPAR .)
    MENOR           reduce using rule 188 (exp_native -> SQRT LPAR RPAR .)
    MAYORI          reduce using rule 188 (exp_native -> SQRT LPAR RPAR .)
    MENORI          reduce using rule 188 (exp_native -> SQRT LPAR RPAR .)
    AS              reduce using rule 188 (exp_native -> SQRT LPAR RPAR .)
    LLLAV           reduce using rule 188 (exp_native -> SQRT LPAR RPAR .)
    PCOMA           reduce using rule 188 (exp_native -> SQRT LPAR RPAR .)
    COMA            reduce using rule 188 (exp_native -> SQRT LPAR RPAR .)
    RCOR            reduce using rule 188 (exp_native -> SQRT LPAR RPAR .)
    RPAR            reduce using rule 188 (exp_native -> SQRT LPAR RPAR .)
    RLLAV           reduce using rule 188 (exp_native -> SQRT LPAR RPAR .)
    ID              reduce using rule 188 (exp_native -> SQRT LPAR RPAR .)
    PRINT           reduce using rule 188 (exp_native -> SQRT LPAR RPAR .)
    LET             reduce using rule 188 (exp_native -> SQRT LPAR RPAR .)
    CONTINUE        reduce using rule 188 (exp_native -> SQRT LPAR RPAR .)
    BREAK           reduce using rule 188 (exp_native -> SQRT LPAR RPAR .)
    RETURN          reduce using rule 188 (exp_native -> SQRT LPAR RPAR .)
    IF              reduce using rule 188 (exp_native -> SQRT LPAR RPAR .)
    MATCH           reduce using rule 188 (exp_native -> SQRT LPAR RPAR .)
    LOOP            reduce using rule 188 (exp_native -> SQRT LPAR RPAR .)
    WHILE           reduce using rule 188 (exp_native -> SQRT LPAR RPAR .)
    FOR             reduce using rule 188 (exp_native -> SQRT LPAR RPAR .)
    LPAR            reduce using rule 188 (exp_native -> SQRT LPAR RPAR .)
    AD              reduce using rule 188 (exp_native -> SQRT LPAR RPAR .)
    LCOR            reduce using rule 188 (exp_native -> SQRT LPAR RPAR .)
    VEC             reduce using rule 188 (exp_native -> SQRT LPAR RPAR .)
    VECTOR          reduce using rule 188 (exp_native -> SQRT LPAR RPAR .)
    MUT             reduce using rule 188 (exp_native -> SQRT LPAR RPAR .)
    ANDSINGLE       reduce using rule 188 (exp_native -> SQRT LPAR RPAR .)
    I64             reduce using rule 188 (exp_native -> SQRT LPAR RPAR .)
    F64             reduce using rule 188 (exp_native -> SQRT LPAR RPAR .)
    ENTERO          reduce using rule 188 (exp_native -> SQRT LPAR RPAR .)
    DECIMAL         reduce using rule 188 (exp_native -> SQRT LPAR RPAR .)
    CADENA          reduce using rule 188 (exp_native -> SQRT LPAR RPAR .)
    BOOLEANO        reduce using rule 188 (exp_native -> SQRT LPAR RPAR .)
    CARACTER        reduce using rule 188 (exp_native -> SQRT LPAR RPAR .)
    ARROW2          reduce using rule 188 (exp_native -> SQRT LPAR RPAR .)
    ORSINGLE        reduce using rule 188 (exp_native -> SQRT LPAR RPAR .)


state 289

    (189) exp_native -> ABS LPAR RPAR .

    PUNTO           reduce using rule 189 (exp_native -> ABS LPAR RPAR .)
    MAS             reduce using rule 189 (exp_native -> ABS LPAR RPAR .)
    MENOS           reduce using rule 189 (exp_native -> ABS LPAR RPAR .)
    MULTIPLICACION  reduce using rule 189 (exp_native -> ABS LPAR RPAR .)
    DIVISION        reduce using rule 189 (exp_native -> ABS LPAR RPAR .)
    MODULO          reduce using rule 189 (exp_native -> ABS LPAR RPAR .)
    AND             reduce using rule 189 (exp_native -> ABS LPAR RPAR .)
    OR              reduce using rule 189 (exp_native -> ABS LPAR RPAR .)
    IGUALI          reduce using rule 189 (exp_native -> ABS LPAR RPAR .)
    DIF             reduce using rule 189 (exp_native -> ABS LPAR RPAR .)
    MAYOR           reduce using rule 189 (exp_native -> ABS LPAR RPAR .)
    MENOR           reduce using rule 189 (exp_native -> ABS LPAR RPAR .)
    MAYORI          reduce using rule 189 (exp_native -> ABS LPAR RPAR .)
    MENORI          reduce using rule 189 (exp_native -> ABS LPAR RPAR .)
    AS              reduce using rule 189 (exp_native -> ABS LPAR RPAR .)
    LLLAV           reduce using rule 189 (exp_native -> ABS LPAR RPAR .)
    PCOMA           reduce using rule 189 (exp_native -> ABS LPAR RPAR .)
    COMA            reduce using rule 189 (exp_native -> ABS LPAR RPAR .)
    RCOR            reduce using rule 189 (exp_native -> ABS LPAR RPAR .)
    RPAR            reduce using rule 189 (exp_native -> ABS LPAR RPAR .)
    RLLAV           reduce using rule 189 (exp_native -> ABS LPAR RPAR .)
    ID              reduce using rule 189 (exp_native -> ABS LPAR RPAR .)
    PRINT           reduce using rule 189 (exp_native -> ABS LPAR RPAR .)
    LET             reduce using rule 189 (exp_native -> ABS LPAR RPAR .)
    CONTINUE        reduce using rule 189 (exp_native -> ABS LPAR RPAR .)
    BREAK           reduce using rule 189 (exp_native -> ABS LPAR RPAR .)
    RETURN          reduce using rule 189 (exp_native -> ABS LPAR RPAR .)
    IF              reduce using rule 189 (exp_native -> ABS LPAR RPAR .)
    MATCH           reduce using rule 189 (exp_native -> ABS LPAR RPAR .)
    LOOP            reduce using rule 189 (exp_native -> ABS LPAR RPAR .)
    WHILE           reduce using rule 189 (exp_native -> ABS LPAR RPAR .)
    FOR             reduce using rule 189 (exp_native -> ABS LPAR RPAR .)
    LPAR            reduce using rule 189 (exp_native -> ABS LPAR RPAR .)
    AD              reduce using rule 189 (exp_native -> ABS LPAR RPAR .)
    LCOR            reduce using rule 189 (exp_native -> ABS LPAR RPAR .)
    VEC             reduce using rule 189 (exp_native -> ABS LPAR RPAR .)
    VECTOR          reduce using rule 189 (exp_native -> ABS LPAR RPAR .)
    MUT             reduce using rule 189 (exp_native -> ABS LPAR RPAR .)
    ANDSINGLE       reduce using rule 189 (exp_native -> ABS LPAR RPAR .)
    I64             reduce using rule 189 (exp_native -> ABS LPAR RPAR .)
    F64             reduce using rule 189 (exp_native -> ABS LPAR RPAR .)
    ENTERO          reduce using rule 189 (exp_native -> ABS LPAR RPAR .)
    DECIMAL         reduce using rule 189 (exp_native -> ABS LPAR RPAR .)
    CADENA          reduce using rule 189 (exp_native -> ABS LPAR RPAR .)
    BOOLEANO        reduce using rule 189 (exp_native -> ABS LPAR RPAR .)
    CARACTER        reduce using rule 189 (exp_native -> ABS LPAR RPAR .)
    ARROW2          reduce using rule 189 (exp_native -> ABS LPAR RPAR .)
    ORSINGLE        reduce using rule 189 (exp_native -> ABS LPAR RPAR .)


state 290

    (16) instruccion_l -> ID PUNTO exp_native . PCOMA

    PCOMA           shift and go to state 313


state 291

    (156) newarray -> LCOR auxexp PCOMA exp RCOR .

    PUNTO           reduce using rule 156 (newarray -> LCOR auxexp PCOMA exp RCOR .)
    MAS             reduce using rule 156 (newarray -> LCOR auxexp PCOMA exp RCOR .)
    MENOS           reduce using rule 156 (newarray -> LCOR auxexp PCOMA exp RCOR .)
    MULTIPLICACION  reduce using rule 156 (newarray -> LCOR auxexp PCOMA exp RCOR .)
    DIVISION        reduce using rule 156 (newarray -> LCOR auxexp PCOMA exp RCOR .)
    MODULO          reduce using rule 156 (newarray -> LCOR auxexp PCOMA exp RCOR .)
    AND             reduce using rule 156 (newarray -> LCOR auxexp PCOMA exp RCOR .)
    OR              reduce using rule 156 (newarray -> LCOR auxexp PCOMA exp RCOR .)
    IGUALI          reduce using rule 156 (newarray -> LCOR auxexp PCOMA exp RCOR .)
    DIF             reduce using rule 156 (newarray -> LCOR auxexp PCOMA exp RCOR .)
    MAYOR           reduce using rule 156 (newarray -> LCOR auxexp PCOMA exp RCOR .)
    MENOR           reduce using rule 156 (newarray -> LCOR auxexp PCOMA exp RCOR .)
    MAYORI          reduce using rule 156 (newarray -> LCOR auxexp PCOMA exp RCOR .)
    MENORI          reduce using rule 156 (newarray -> LCOR auxexp PCOMA exp RCOR .)
    AS              reduce using rule 156 (newarray -> LCOR auxexp PCOMA exp RCOR .)
    LLLAV           reduce using rule 156 (newarray -> LCOR auxexp PCOMA exp RCOR .)
    PCOMA           reduce using rule 156 (newarray -> LCOR auxexp PCOMA exp RCOR .)
    COMA            reduce using rule 156 (newarray -> LCOR auxexp PCOMA exp RCOR .)
    RCOR            reduce using rule 156 (newarray -> LCOR auxexp PCOMA exp RCOR .)
    RPAR            reduce using rule 156 (newarray -> LCOR auxexp PCOMA exp RCOR .)
    RLLAV           reduce using rule 156 (newarray -> LCOR auxexp PCOMA exp RCOR .)
    ID              reduce using rule 156 (newarray -> LCOR auxexp PCOMA exp RCOR .)
    PRINT           reduce using rule 156 (newarray -> LCOR auxexp PCOMA exp RCOR .)
    LET             reduce using rule 156 (newarray -> LCOR auxexp PCOMA exp RCOR .)
    CONTINUE        reduce using rule 156 (newarray -> LCOR auxexp PCOMA exp RCOR .)
    BREAK           reduce using rule 156 (newarray -> LCOR auxexp PCOMA exp RCOR .)
    RETURN          reduce using rule 156 (newarray -> LCOR auxexp PCOMA exp RCOR .)
    IF              reduce using rule 156 (newarray -> LCOR auxexp PCOMA exp RCOR .)
    MATCH           reduce using rule 156 (newarray -> LCOR auxexp PCOMA exp RCOR .)
    LOOP            reduce using rule 156 (newarray -> LCOR auxexp PCOMA exp RCOR .)
    WHILE           reduce using rule 156 (newarray -> LCOR auxexp PCOMA exp RCOR .)
    FOR             reduce using rule 156 (newarray -> LCOR auxexp PCOMA exp RCOR .)
    LPAR            reduce using rule 156 (newarray -> LCOR auxexp PCOMA exp RCOR .)
    AD              reduce using rule 156 (newarray -> LCOR auxexp PCOMA exp RCOR .)
    LCOR            reduce using rule 156 (newarray -> LCOR auxexp PCOMA exp RCOR .)
    VEC             reduce using rule 156 (newarray -> LCOR auxexp PCOMA exp RCOR .)
    VECTOR          reduce using rule 156 (newarray -> LCOR auxexp PCOMA exp RCOR .)
    MUT             reduce using rule 156 (newarray -> LCOR auxexp PCOMA exp RCOR .)
    ANDSINGLE       reduce using rule 156 (newarray -> LCOR auxexp PCOMA exp RCOR .)
    I64             reduce using rule 156 (newarray -> LCOR auxexp PCOMA exp RCOR .)
    F64             reduce using rule 156 (newarray -> LCOR auxexp PCOMA exp RCOR .)
    ENTERO          reduce using rule 156 (newarray -> LCOR auxexp PCOMA exp RCOR .)
    DECIMAL         reduce using rule 156 (newarray -> LCOR auxexp PCOMA exp RCOR .)
    CADENA          reduce using rule 156 (newarray -> LCOR auxexp PCOMA exp RCOR .)
    BOOLEANO        reduce using rule 156 (newarray -> LCOR auxexp PCOMA exp RCOR .)
    CARACTER        reduce using rule 156 (newarray -> LCOR auxexp PCOMA exp RCOR .)
    ARROW2          reduce using rule 156 (newarray -> LCOR auxexp PCOMA exp RCOR .)
    ORSINGLE        reduce using rule 156 (newarray -> LCOR auxexp PCOMA exp RCOR .)


state 292

    (190) exp_natarr -> NEW LPAR . RPAR

    RPAR            shift and go to state 314


state 293

    (191) exp_natarr -> WITHCAPACITY LPAR . exp RPAR
    (110) exp -> . LPAR exp RPAR
    (111) exp -> . expmath
    (112) exp -> . expop
    (113) exp -> . exprel
    (114) exp -> . exparr
    (115) exp -> . newarray
    (116) exp -> . expvec
    (117) exp -> . exparam
    (118) exp -> . exppow
    (119) exp -> . expcast
    (120) exp -> . lista_acc
    (121) exp -> . llamada
    (122) exp -> . sentencia
    (123) exp -> . valores
    (124) exp -> . exp PUNTO exp_native
    (125) expmath -> . exp MAS exp
    (126) expmath -> . exp MENOS exp
    (127) expmath -> . exp MULTIPLICACION exp
    (128) expmath -> . exp DIVISION exp
    (129) expmath -> . exp MODULO exp
    (130) expmath -> . MENOS exp
    (133) expop -> . exp AND exp
    (134) expop -> . exp OR exp
    (135) expop -> . AD exp
    (137) exprel -> . exp IGUALI exp
    (138) exprel -> . exp DIF exp
    (139) exprel -> . exp MAYOR exp
    (140) exprel -> . exp MENOR exp
    (141) exprel -> . exp MAYORI exp
    (142) exprel -> . exp MENORI exp
    (152) exparr -> . ID lista_arr
    (155) newarray -> . LCOR lista_exp RCOR
    (156) newarray -> . LCOR auxexp PCOMA exp RCOR
    (153) expvec -> . VEC AD newarray
    (154) expvec -> . VECTOR DPUNTOS DPUNTOS exp_natarr
    (148) exparam -> . MUT ID
    (149) exparam -> . MUT valores
    (150) exparam -> . ANDSINGLE MUT ID
    (151) exparam -> . ANDSINGLE MUT valores
    (131) exppow -> . I64 DPUNTOS DPUNTOS POW LPAR exp COMA exp RPAR
    (132) exppow -> . F64 DPUNTOS DPUNTOS POWF LPAR exp COMA exp RPAR
    (136) expcast -> . exp AS tipo_var
    (92) lista_acc -> . lista_acc PUNTO ID
    (93) lista_acc -> . lista_acc PUNTO exp_native
    (94) lista_acc -> . auxacc
    (176) llamada -> . ID LPAR RPAR
    (177) llamada -> . ID LPAR lista_exp RPAR
    (37) sentencia -> . if
    (38) sentencia -> . match
    (39) sentencia -> . loop
    (40) sentencia -> . while
    (41) sentencia -> . for
    (157) valores -> . ENTERO
    (158) valores -> . DECIMAL
    (159) valores -> . CADENA
    (160) valores -> . BOOLEANO
    (161) valores -> . CARACTER
    (95) auxacc -> . exparr
    (96) auxacc -> . ID
    (42) if -> . IF exp statement else
    (47) match -> . MATCH exp match_statement
    (62) loop -> . LOOP statement
    (63) while -> . WHILE exp statement
    (64) for -> . FOR ID IN foriterative statement

    LPAR            shift and go to state 29
    MENOS           shift and go to state 43
    AD              shift and go to state 44
    ID              shift and go to state 45
    LCOR            shift and go to state 46
    VEC             shift and go to state 47
    VECTOR          shift and go to state 48
    MUT             shift and go to state 49
    ANDSINGLE       shift and go to state 50
    I64             shift and go to state 51
    F64             shift and go to state 52
    ENTERO          shift and go to state 59
    DECIMAL         shift and go to state 60
    CADENA          shift and go to state 61
    BOOLEANO        shift and go to state 62
    CARACTER        shift and go to state 63
    IF              shift and go to state 12
    MATCH           shift and go to state 64
    LOOP            shift and go to state 65
    WHILE           shift and go to state 13
    FOR             shift and go to state 66

    exp                            shift and go to state 315
    expmath                        shift and go to state 30
    expop                          shift and go to state 31
    exprel                         shift and go to state 32
    exparr                         shift and go to state 33
    newarray                       shift and go to state 34
    expvec                         shift and go to state 35
    exparam                        shift and go to state 36
    exppow                         shift and go to state 37
    expcast                        shift and go to state 38
    lista_acc                      shift and go to state 39
    llamada                        shift and go to state 40
    sentencia                      shift and go to state 41
    valores                        shift and go to state 42
    auxacc                         shift and go to state 53
    if                             shift and go to state 54
    match                          shift and go to state 55
    loop                           shift and go to state 56
    while                          shift and go to state 57
    for                            shift and go to state 58

state 294

    (131) exppow -> I64 DPUNTOS DPUNTOS POW LPAR . exp COMA exp RPAR
    (110) exp -> . LPAR exp RPAR
    (111) exp -> . expmath
    (112) exp -> . expop
    (113) exp -> . exprel
    (114) exp -> . exparr
    (115) exp -> . newarray
    (116) exp -> . expvec
    (117) exp -> . exparam
    (118) exp -> . exppow
    (119) exp -> . expcast
    (120) exp -> . lista_acc
    (121) exp -> . llamada
    (122) exp -> . sentencia
    (123) exp -> . valores
    (124) exp -> . exp PUNTO exp_native
    (125) expmath -> . exp MAS exp
    (126) expmath -> . exp MENOS exp
    (127) expmath -> . exp MULTIPLICACION exp
    (128) expmath -> . exp DIVISION exp
    (129) expmath -> . exp MODULO exp
    (130) expmath -> . MENOS exp
    (133) expop -> . exp AND exp
    (134) expop -> . exp OR exp
    (135) expop -> . AD exp
    (137) exprel -> . exp IGUALI exp
    (138) exprel -> . exp DIF exp
    (139) exprel -> . exp MAYOR exp
    (140) exprel -> . exp MENOR exp
    (141) exprel -> . exp MAYORI exp
    (142) exprel -> . exp MENORI exp
    (152) exparr -> . ID lista_arr
    (155) newarray -> . LCOR lista_exp RCOR
    (156) newarray -> . LCOR auxexp PCOMA exp RCOR
    (153) expvec -> . VEC AD newarray
    (154) expvec -> . VECTOR DPUNTOS DPUNTOS exp_natarr
    (148) exparam -> . MUT ID
    (149) exparam -> . MUT valores
    (150) exparam -> . ANDSINGLE MUT ID
    (151) exparam -> . ANDSINGLE MUT valores
    (131) exppow -> . I64 DPUNTOS DPUNTOS POW LPAR exp COMA exp RPAR
    (132) exppow -> . F64 DPUNTOS DPUNTOS POWF LPAR exp COMA exp RPAR
    (136) expcast -> . exp AS tipo_var
    (92) lista_acc -> . lista_acc PUNTO ID
    (93) lista_acc -> . lista_acc PUNTO exp_native
    (94) lista_acc -> . auxacc
    (176) llamada -> . ID LPAR RPAR
    (177) llamada -> . ID LPAR lista_exp RPAR
    (37) sentencia -> . if
    (38) sentencia -> . match
    (39) sentencia -> . loop
    (40) sentencia -> . while
    (41) sentencia -> . for
    (157) valores -> . ENTERO
    (158) valores -> . DECIMAL
    (159) valores -> . CADENA
    (160) valores -> . BOOLEANO
    (161) valores -> . CARACTER
    (95) auxacc -> . exparr
    (96) auxacc -> . ID
    (42) if -> . IF exp statement else
    (47) match -> . MATCH exp match_statement
    (62) loop -> . LOOP statement
    (63) while -> . WHILE exp statement
    (64) for -> . FOR ID IN foriterative statement

    LPAR            shift and go to state 29
    MENOS           shift and go to state 43
    AD              shift and go to state 44
    ID              shift and go to state 45
    LCOR            shift and go to state 46
    VEC             shift and go to state 47
    VECTOR          shift and go to state 48
    MUT             shift and go to state 49
    ANDSINGLE       shift and go to state 50
    I64             shift and go to state 51
    F64             shift and go to state 52
    ENTERO          shift and go to state 59
    DECIMAL         shift and go to state 60
    CADENA          shift and go to state 61
    BOOLEANO        shift and go to state 62
    CARACTER        shift and go to state 63
    IF              shift and go to state 12
    MATCH           shift and go to state 64
    LOOP            shift and go to state 65
    WHILE           shift and go to state 13
    FOR             shift and go to state 66

    exp                            shift and go to state 316
    expmath                        shift and go to state 30
    expop                          shift and go to state 31
    exprel                         shift and go to state 32
    exparr                         shift and go to state 33
    newarray                       shift and go to state 34
    expvec                         shift and go to state 35
    exparam                        shift and go to state 36
    exppow                         shift and go to state 37
    expcast                        shift and go to state 38
    lista_acc                      shift and go to state 39
    llamada                        shift and go to state 40
    sentencia                      shift and go to state 41
    valores                        shift and go to state 42
    auxacc                         shift and go to state 53
    if                             shift and go to state 54
    match                          shift and go to state 55
    loop                           shift and go to state 56
    while                          shift and go to state 57
    for                            shift and go to state 58

state 295

    (132) exppow -> F64 DPUNTOS DPUNTOS POWF LPAR . exp COMA exp RPAR
    (110) exp -> . LPAR exp RPAR
    (111) exp -> . expmath
    (112) exp -> . expop
    (113) exp -> . exprel
    (114) exp -> . exparr
    (115) exp -> . newarray
    (116) exp -> . expvec
    (117) exp -> . exparam
    (118) exp -> . exppow
    (119) exp -> . expcast
    (120) exp -> . lista_acc
    (121) exp -> . llamada
    (122) exp -> . sentencia
    (123) exp -> . valores
    (124) exp -> . exp PUNTO exp_native
    (125) expmath -> . exp MAS exp
    (126) expmath -> . exp MENOS exp
    (127) expmath -> . exp MULTIPLICACION exp
    (128) expmath -> . exp DIVISION exp
    (129) expmath -> . exp MODULO exp
    (130) expmath -> . MENOS exp
    (133) expop -> . exp AND exp
    (134) expop -> . exp OR exp
    (135) expop -> . AD exp
    (137) exprel -> . exp IGUALI exp
    (138) exprel -> . exp DIF exp
    (139) exprel -> . exp MAYOR exp
    (140) exprel -> . exp MENOR exp
    (141) exprel -> . exp MAYORI exp
    (142) exprel -> . exp MENORI exp
    (152) exparr -> . ID lista_arr
    (155) newarray -> . LCOR lista_exp RCOR
    (156) newarray -> . LCOR auxexp PCOMA exp RCOR
    (153) expvec -> . VEC AD newarray
    (154) expvec -> . VECTOR DPUNTOS DPUNTOS exp_natarr
    (148) exparam -> . MUT ID
    (149) exparam -> . MUT valores
    (150) exparam -> . ANDSINGLE MUT ID
    (151) exparam -> . ANDSINGLE MUT valores
    (131) exppow -> . I64 DPUNTOS DPUNTOS POW LPAR exp COMA exp RPAR
    (132) exppow -> . F64 DPUNTOS DPUNTOS POWF LPAR exp COMA exp RPAR
    (136) expcast -> . exp AS tipo_var
    (92) lista_acc -> . lista_acc PUNTO ID
    (93) lista_acc -> . lista_acc PUNTO exp_native
    (94) lista_acc -> . auxacc
    (176) llamada -> . ID LPAR RPAR
    (177) llamada -> . ID LPAR lista_exp RPAR
    (37) sentencia -> . if
    (38) sentencia -> . match
    (39) sentencia -> . loop
    (40) sentencia -> . while
    (41) sentencia -> . for
    (157) valores -> . ENTERO
    (158) valores -> . DECIMAL
    (159) valores -> . CADENA
    (160) valores -> . BOOLEANO
    (161) valores -> . CARACTER
    (95) auxacc -> . exparr
    (96) auxacc -> . ID
    (42) if -> . IF exp statement else
    (47) match -> . MATCH exp match_statement
    (62) loop -> . LOOP statement
    (63) while -> . WHILE exp statement
    (64) for -> . FOR ID IN foriterative statement

    LPAR            shift and go to state 29
    MENOS           shift and go to state 43
    AD              shift and go to state 44
    ID              shift and go to state 45
    LCOR            shift and go to state 46
    VEC             shift and go to state 47
    VECTOR          shift and go to state 48
    MUT             shift and go to state 49
    ANDSINGLE       shift and go to state 50
    I64             shift and go to state 51
    F64             shift and go to state 52
    ENTERO          shift and go to state 59
    DECIMAL         shift and go to state 60
    CADENA          shift and go to state 61
    BOOLEANO        shift and go to state 62
    CARACTER        shift and go to state 63
    IF              shift and go to state 12
    MATCH           shift and go to state 64
    LOOP            shift and go to state 65
    WHILE           shift and go to state 13
    FOR             shift and go to state 66

    exp                            shift and go to state 317
    expmath                        shift and go to state 30
    expop                          shift and go to state 31
    exprel                         shift and go to state 32
    exparr                         shift and go to state 33
    newarray                       shift and go to state 34
    expvec                         shift and go to state 35
    exparam                        shift and go to state 36
    exppow                         shift and go to state 37
    expcast                        shift and go to state 38
    lista_acc                      shift and go to state 39
    llamada                        shift and go to state 40
    sentencia                      shift and go to state 41
    valores                        shift and go to state 42
    auxacc                         shift and go to state 53
    if                             shift and go to state 54
    match                          shift and go to state 55
    loop                           shift and go to state 56
    while                          shift and go to state 57
    for                            shift and go to state 58

state 296

    (48) match_statement -> LLLAV lista_brazos RLLAV .

    PUNTO           reduce using rule 48 (match_statement -> LLLAV lista_brazos RLLAV .)
    MAS             reduce using rule 48 (match_statement -> LLLAV lista_brazos RLLAV .)
    MENOS           reduce using rule 48 (match_statement -> LLLAV lista_brazos RLLAV .)
    MULTIPLICACION  reduce using rule 48 (match_statement -> LLLAV lista_brazos RLLAV .)
    DIVISION        reduce using rule 48 (match_statement -> LLLAV lista_brazos RLLAV .)
    MODULO          reduce using rule 48 (match_statement -> LLLAV lista_brazos RLLAV .)
    AND             reduce using rule 48 (match_statement -> LLLAV lista_brazos RLLAV .)
    OR              reduce using rule 48 (match_statement -> LLLAV lista_brazos RLLAV .)
    IGUALI          reduce using rule 48 (match_statement -> LLLAV lista_brazos RLLAV .)
    DIF             reduce using rule 48 (match_statement -> LLLAV lista_brazos RLLAV .)
    MAYOR           reduce using rule 48 (match_statement -> LLLAV lista_brazos RLLAV .)
    MENOR           reduce using rule 48 (match_statement -> LLLAV lista_brazos RLLAV .)
    MAYORI          reduce using rule 48 (match_statement -> LLLAV lista_brazos RLLAV .)
    MENORI          reduce using rule 48 (match_statement -> LLLAV lista_brazos RLLAV .)
    AS              reduce using rule 48 (match_statement -> LLLAV lista_brazos RLLAV .)
    LLLAV           reduce using rule 48 (match_statement -> LLLAV lista_brazos RLLAV .)
    PCOMA           reduce using rule 48 (match_statement -> LLLAV lista_brazos RLLAV .)
    COMA            reduce using rule 48 (match_statement -> LLLAV lista_brazos RLLAV .)
    RCOR            reduce using rule 48 (match_statement -> LLLAV lista_brazos RLLAV .)
    RPAR            reduce using rule 48 (match_statement -> LLLAV lista_brazos RLLAV .)
    RLLAV           reduce using rule 48 (match_statement -> LLLAV lista_brazos RLLAV .)
    ID              reduce using rule 48 (match_statement -> LLLAV lista_brazos RLLAV .)
    PRINT           reduce using rule 48 (match_statement -> LLLAV lista_brazos RLLAV .)
    LET             reduce using rule 48 (match_statement -> LLLAV lista_brazos RLLAV .)
    CONTINUE        reduce using rule 48 (match_statement -> LLLAV lista_brazos RLLAV .)
    BREAK           reduce using rule 48 (match_statement -> LLLAV lista_brazos RLLAV .)
    RETURN          reduce using rule 48 (match_statement -> LLLAV lista_brazos RLLAV .)
    IF              reduce using rule 48 (match_statement -> LLLAV lista_brazos RLLAV .)
    MATCH           reduce using rule 48 (match_statement -> LLLAV lista_brazos RLLAV .)
    LOOP            reduce using rule 48 (match_statement -> LLLAV lista_brazos RLLAV .)
    WHILE           reduce using rule 48 (match_statement -> LLLAV lista_brazos RLLAV .)
    FOR             reduce using rule 48 (match_statement -> LLLAV lista_brazos RLLAV .)
    LPAR            reduce using rule 48 (match_statement -> LLLAV lista_brazos RLLAV .)
    AD              reduce using rule 48 (match_statement -> LLLAV lista_brazos RLLAV .)
    LCOR            reduce using rule 48 (match_statement -> LLLAV lista_brazos RLLAV .)
    VEC             reduce using rule 48 (match_statement -> LLLAV lista_brazos RLLAV .)
    VECTOR          reduce using rule 48 (match_statement -> LLLAV lista_brazos RLLAV .)
    MUT             reduce using rule 48 (match_statement -> LLLAV lista_brazos RLLAV .)
    ANDSINGLE       reduce using rule 48 (match_statement -> LLLAV lista_brazos RLLAV .)
    I64             reduce using rule 48 (match_statement -> LLLAV lista_brazos RLLAV .)
    F64             reduce using rule 48 (match_statement -> LLLAV lista_brazos RLLAV .)
    ENTERO          reduce using rule 48 (match_statement -> LLLAV lista_brazos RLLAV .)
    DECIMAL         reduce using rule 48 (match_statement -> LLLAV lista_brazos RLLAV .)
    CADENA          reduce using rule 48 (match_statement -> LLLAV lista_brazos RLLAV .)
    BOOLEANO        reduce using rule 48 (match_statement -> LLLAV lista_brazos RLLAV .)
    CARACTER        reduce using rule 48 (match_statement -> LLLAV lista_brazos RLLAV .)
    ARROW2          reduce using rule 48 (match_statement -> LLLAV lista_brazos RLLAV .)
    ORSINGLE        reduce using rule 48 (match_statement -> LLLAV lista_brazos RLLAV .)


state 297

    (50) lista_brazos -> lista_brazos brazo .

    RLLAV           reduce using rule 50 (lista_brazos -> lista_brazos brazo .)
    LPAR            reduce using rule 50 (lista_brazos -> lista_brazos brazo .)
    MENOS           reduce using rule 50 (lista_brazos -> lista_brazos brazo .)
    AD              reduce using rule 50 (lista_brazos -> lista_brazos brazo .)
    ID              reduce using rule 50 (lista_brazos -> lista_brazos brazo .)
    LCOR            reduce using rule 50 (lista_brazos -> lista_brazos brazo .)
    VEC             reduce using rule 50 (lista_brazos -> lista_brazos brazo .)
    VECTOR          reduce using rule 50 (lista_brazos -> lista_brazos brazo .)
    MUT             reduce using rule 50 (lista_brazos -> lista_brazos brazo .)
    ANDSINGLE       reduce using rule 50 (lista_brazos -> lista_brazos brazo .)
    I64             reduce using rule 50 (lista_brazos -> lista_brazos brazo .)
    F64             reduce using rule 50 (lista_brazos -> lista_brazos brazo .)
    ENTERO          reduce using rule 50 (lista_brazos -> lista_brazos brazo .)
    DECIMAL         reduce using rule 50 (lista_brazos -> lista_brazos brazo .)
    CADENA          reduce using rule 50 (lista_brazos -> lista_brazos brazo .)
    BOOLEANO        reduce using rule 50 (lista_brazos -> lista_brazos brazo .)
    CARACTER        reduce using rule 50 (lista_brazos -> lista_brazos brazo .)
    IF              reduce using rule 50 (lista_brazos -> lista_brazos brazo .)
    MATCH           reduce using rule 50 (lista_brazos -> lista_brazos brazo .)
    LOOP            reduce using rule 50 (lista_brazos -> lista_brazos brazo .)
    WHILE           reduce using rule 50 (lista_brazos -> lista_brazos brazo .)
    FOR             reduce using rule 50 (lista_brazos -> lista_brazos brazo .)


state 298

    (52) brazo -> lista_exp_brazos ARROW2 . instruccion_match COMA
    (53) brazo -> lista_exp_brazos ARROW2 . statement COMA
    (54) brazo -> lista_exp_brazos ARROW2 . statement
    (57) instruccion_match -> . print
    (58) instruccion_match -> . llamada
    (59) instruccion_match -> . asignacion
    (60) instruccion_match -> . sentencia
    (61) instruccion_match -> . transferencia
    (73) statement -> . LLLAV instrucciones_l RLLAV
    (74) statement -> . LLLAV RLLAV
    (192) print -> . PRINT AD LPAR lista_exp RPAR
    (176) llamada -> . ID LPAR RPAR
    (177) llamada -> . ID LPAR lista_exp RPAR
    (84) asignacion -> . ID IGUAL auxexp
    (85) asignacion -> . ID lista_assign2 IGUAL auxexp
    (86) asignacion -> . ID lista_arr IGUAL auxexp
    (87) asignacion -> . ID lista_arr lista_assign2 IGUAL auxexp
    (37) sentencia -> . if
    (38) sentencia -> . match
    (39) sentencia -> . loop
    (40) sentencia -> . while
    (41) sentencia -> . for
    (67) transferencia -> . CONTINUE
    (68) transferencia -> . BREAK
    (69) transferencia -> . BREAK auxexp
    (70) transferencia -> . RETURN
    (71) transferencia -> . RETURN auxexp
    (72) transferencia -> . auxexp
    (42) if -> . IF exp statement else
    (47) match -> . MATCH exp match_statement
    (62) loop -> . LOOP statement
    (63) while -> . WHILE exp statement
    (64) for -> . FOR ID IN foriterative statement
    (108) auxexp -> . expstruct
    (109) auxexp -> . exp
    (143) expstruct -> . lista_classtype LLLAV lista_att RLLAV
    (144) expstruct -> . lista_classtype LLLAV RLLAV
    (145) expstruct -> . lista_classtype DPUNTOS DPUNTOS llamada
    (110) exp -> . LPAR exp RPAR
    (111) exp -> . expmath
    (112) exp -> . expop
    (113) exp -> . exprel
    (114) exp -> . exparr
    (115) exp -> . newarray
    (116) exp -> . expvec
    (117) exp -> . exparam
    (118) exp -> . exppow
    (119) exp -> . expcast
    (120) exp -> . lista_acc
    (121) exp -> . llamada
    (122) exp -> . sentencia
    (123) exp -> . valores
    (124) exp -> . exp PUNTO exp_native
    (174) lista_classtype -> . lista_classtype DPUNTOS DPUNTOS ID
    (175) lista_classtype -> . ID
    (125) expmath -> . exp MAS exp
    (126) expmath -> . exp MENOS exp
    (127) expmath -> . exp MULTIPLICACION exp
    (128) expmath -> . exp DIVISION exp
    (129) expmath -> . exp MODULO exp
    (130) expmath -> . MENOS exp
    (133) expop -> . exp AND exp
    (134) expop -> . exp OR exp
    (135) expop -> . AD exp
    (137) exprel -> . exp IGUALI exp
    (138) exprel -> . exp DIF exp
    (139) exprel -> . exp MAYOR exp
    (140) exprel -> . exp MENOR exp
    (141) exprel -> . exp MAYORI exp
    (142) exprel -> . exp MENORI exp
    (152) exparr -> . ID lista_arr
    (155) newarray -> . LCOR lista_exp RCOR
    (156) newarray -> . LCOR auxexp PCOMA exp RCOR
    (153) expvec -> . VEC AD newarray
    (154) expvec -> . VECTOR DPUNTOS DPUNTOS exp_natarr
    (148) exparam -> . MUT ID
    (149) exparam -> . MUT valores
    (150) exparam -> . ANDSINGLE MUT ID
    (151) exparam -> . ANDSINGLE MUT valores
    (131) exppow -> . I64 DPUNTOS DPUNTOS POW LPAR exp COMA exp RPAR
    (132) exppow -> . F64 DPUNTOS DPUNTOS POWF LPAR exp COMA exp RPAR
    (136) expcast -> . exp AS tipo_var
    (92) lista_acc -> . lista_acc PUNTO ID
    (93) lista_acc -> . lista_acc PUNTO exp_native
    (94) lista_acc -> . auxacc
    (157) valores -> . ENTERO
    (158) valores -> . DECIMAL
    (159) valores -> . CADENA
    (160) valores -> . BOOLEANO
    (161) valores -> . CARACTER
    (95) auxacc -> . exparr
    (96) auxacc -> . ID

    LLLAV           shift and go to state 101
    PRINT           shift and go to state 11
    ID              shift and go to state 325
    CONTINUE        shift and go to state 189
    BREAK           shift and go to state 190
    RETURN          shift and go to state 191
    IF              shift and go to state 12
    MATCH           shift and go to state 64
    LOOP            shift and go to state 65
    WHILE           shift and go to state 13
    FOR             shift and go to state 66
    LPAR            shift and go to state 29
    MENOS           shift and go to state 43
    AD              shift and go to state 44
    LCOR            shift and go to state 46
    VEC             shift and go to state 47
    VECTOR          shift and go to state 48
    MUT             shift and go to state 49
    ANDSINGLE       shift and go to state 50
    I64             shift and go to state 51
    F64             shift and go to state 52
    ENTERO          shift and go to state 59
    DECIMAL         shift and go to state 60
    CADENA          shift and go to state 61
    BOOLEANO        shift and go to state 62
    CARACTER        shift and go to state 63

    instruccion_match              shift and go to state 318
    statement                      shift and go to state 319
    print                          shift and go to state 320
    llamada                        shift and go to state 321
    asignacion                     shift and go to state 322
    sentencia                      shift and go to state 323
    transferencia                  shift and go to state 324
    auxexp                         shift and go to state 188
    if                             shift and go to state 54
    match                          shift and go to state 55
    loop                           shift and go to state 56
    while                          shift and go to state 57
    for                            shift and go to state 58
    exp                            shift and go to state 75
    expstruct                      shift and go to state 74
    lista_classtype                shift and go to state 76
    expmath                        shift and go to state 30
    expop                          shift and go to state 31
    exprel                         shift and go to state 32
    exparr                         shift and go to state 33
    newarray                       shift and go to state 34
    expvec                         shift and go to state 35
    exparam                        shift and go to state 36
    exppow                         shift and go to state 37
    expcast                        shift and go to state 38
    lista_acc                      shift and go to state 39
    valores                        shift and go to state 42
    auxacc                         shift and go to state 53

state 299

    (55) lista_exp_brazos -> lista_exp_brazos ORSINGLE . exp
    (110) exp -> . LPAR exp RPAR
    (111) exp -> . expmath
    (112) exp -> . expop
    (113) exp -> . exprel
    (114) exp -> . exparr
    (115) exp -> . newarray
    (116) exp -> . expvec
    (117) exp -> . exparam
    (118) exp -> . exppow
    (119) exp -> . expcast
    (120) exp -> . lista_acc
    (121) exp -> . llamada
    (122) exp -> . sentencia
    (123) exp -> . valores
    (124) exp -> . exp PUNTO exp_native
    (125) expmath -> . exp MAS exp
    (126) expmath -> . exp MENOS exp
    (127) expmath -> . exp MULTIPLICACION exp
    (128) expmath -> . exp DIVISION exp
    (129) expmath -> . exp MODULO exp
    (130) expmath -> . MENOS exp
    (133) expop -> . exp AND exp
    (134) expop -> . exp OR exp
    (135) expop -> . AD exp
    (137) exprel -> . exp IGUALI exp
    (138) exprel -> . exp DIF exp
    (139) exprel -> . exp MAYOR exp
    (140) exprel -> . exp MENOR exp
    (141) exprel -> . exp MAYORI exp
    (142) exprel -> . exp MENORI exp
    (152) exparr -> . ID lista_arr
    (155) newarray -> . LCOR lista_exp RCOR
    (156) newarray -> . LCOR auxexp PCOMA exp RCOR
    (153) expvec -> . VEC AD newarray
    (154) expvec -> . VECTOR DPUNTOS DPUNTOS exp_natarr
    (148) exparam -> . MUT ID
    (149) exparam -> . MUT valores
    (150) exparam -> . ANDSINGLE MUT ID
    (151) exparam -> . ANDSINGLE MUT valores
    (131) exppow -> . I64 DPUNTOS DPUNTOS POW LPAR exp COMA exp RPAR
    (132) exppow -> . F64 DPUNTOS DPUNTOS POWF LPAR exp COMA exp RPAR
    (136) expcast -> . exp AS tipo_var
    (92) lista_acc -> . lista_acc PUNTO ID
    (93) lista_acc -> . lista_acc PUNTO exp_native
    (94) lista_acc -> . auxacc
    (176) llamada -> . ID LPAR RPAR
    (177) llamada -> . ID LPAR lista_exp RPAR
    (37) sentencia -> . if
    (38) sentencia -> . match
    (39) sentencia -> . loop
    (40) sentencia -> . while
    (41) sentencia -> . for
    (157) valores -> . ENTERO
    (158) valores -> . DECIMAL
    (159) valores -> . CADENA
    (160) valores -> . BOOLEANO
    (161) valores -> . CARACTER
    (95) auxacc -> . exparr
    (96) auxacc -> . ID
    (42) if -> . IF exp statement else
    (47) match -> . MATCH exp match_statement
    (62) loop -> . LOOP statement
    (63) while -> . WHILE exp statement
    (64) for -> . FOR ID IN foriterative statement

    LPAR            shift and go to state 29
    MENOS           shift and go to state 43
    AD              shift and go to state 44
    ID              shift and go to state 45
    LCOR            shift and go to state 46
    VEC             shift and go to state 47
    VECTOR          shift and go to state 48
    MUT             shift and go to state 49
    ANDSINGLE       shift and go to state 50
    I64             shift and go to state 51
    F64             shift and go to state 52
    ENTERO          shift and go to state 59
    DECIMAL         shift and go to state 60
    CADENA          shift and go to state 61
    BOOLEANO        shift and go to state 62
    CARACTER        shift and go to state 63
    IF              shift and go to state 12
    MATCH           shift and go to state 64
    LOOP            shift and go to state 65
    WHILE           shift and go to state 13
    FOR             shift and go to state 66

    exp                            shift and go to state 326
    expmath                        shift and go to state 30
    expop                          shift and go to state 31
    exprel                         shift and go to state 32
    exparr                         shift and go to state 33
    newarray                       shift and go to state 34
    expvec                         shift and go to state 35
    exparam                        shift and go to state 36
    exppow                         shift and go to state 37
    expcast                        shift and go to state 38
    lista_acc                      shift and go to state 39
    llamada                        shift and go to state 40
    sentencia                      shift and go to state 41
    valores                        shift and go to state 42
    auxacc                         shift and go to state 53
    if                             shift and go to state 54
    match                          shift and go to state 55
    loop                           shift and go to state 56
    while                          shift and go to state 57
    for                            shift and go to state 58

state 300

    (64) for -> FOR ID IN foriterative statement .

    PUNTO           reduce using rule 64 (for -> FOR ID IN foriterative statement .)
    MAS             reduce using rule 64 (for -> FOR ID IN foriterative statement .)
    MENOS           reduce using rule 64 (for -> FOR ID IN foriterative statement .)
    MULTIPLICACION  reduce using rule 64 (for -> FOR ID IN foriterative statement .)
    DIVISION        reduce using rule 64 (for -> FOR ID IN foriterative statement .)
    MODULO          reduce using rule 64 (for -> FOR ID IN foriterative statement .)
    AND             reduce using rule 64 (for -> FOR ID IN foriterative statement .)
    OR              reduce using rule 64 (for -> FOR ID IN foriterative statement .)
    IGUALI          reduce using rule 64 (for -> FOR ID IN foriterative statement .)
    DIF             reduce using rule 64 (for -> FOR ID IN foriterative statement .)
    MAYOR           reduce using rule 64 (for -> FOR ID IN foriterative statement .)
    MENOR           reduce using rule 64 (for -> FOR ID IN foriterative statement .)
    MAYORI          reduce using rule 64 (for -> FOR ID IN foriterative statement .)
    MENORI          reduce using rule 64 (for -> FOR ID IN foriterative statement .)
    AS              reduce using rule 64 (for -> FOR ID IN foriterative statement .)
    LLLAV           reduce using rule 64 (for -> FOR ID IN foriterative statement .)
    PCOMA           reduce using rule 64 (for -> FOR ID IN foriterative statement .)
    COMA            reduce using rule 64 (for -> FOR ID IN foriterative statement .)
    RCOR            reduce using rule 64 (for -> FOR ID IN foriterative statement .)
    RPAR            reduce using rule 64 (for -> FOR ID IN foriterative statement .)
    RLLAV           reduce using rule 64 (for -> FOR ID IN foriterative statement .)
    ID              reduce using rule 64 (for -> FOR ID IN foriterative statement .)
    PRINT           reduce using rule 64 (for -> FOR ID IN foriterative statement .)
    LET             reduce using rule 64 (for -> FOR ID IN foriterative statement .)
    CONTINUE        reduce using rule 64 (for -> FOR ID IN foriterative statement .)
    BREAK           reduce using rule 64 (for -> FOR ID IN foriterative statement .)
    RETURN          reduce using rule 64 (for -> FOR ID IN foriterative statement .)
    IF              reduce using rule 64 (for -> FOR ID IN foriterative statement .)
    MATCH           reduce using rule 64 (for -> FOR ID IN foriterative statement .)
    LOOP            reduce using rule 64 (for -> FOR ID IN foriterative statement .)
    WHILE           reduce using rule 64 (for -> FOR ID IN foriterative statement .)
    FOR             reduce using rule 64 (for -> FOR ID IN foriterative statement .)
    LPAR            reduce using rule 64 (for -> FOR ID IN foriterative statement .)
    AD              reduce using rule 64 (for -> FOR ID IN foriterative statement .)
    LCOR            reduce using rule 64 (for -> FOR ID IN foriterative statement .)
    VEC             reduce using rule 64 (for -> FOR ID IN foriterative statement .)
    VECTOR          reduce using rule 64 (for -> FOR ID IN foriterative statement .)
    MUT             reduce using rule 64 (for -> FOR ID IN foriterative statement .)
    ANDSINGLE       reduce using rule 64 (for -> FOR ID IN foriterative statement .)
    I64             reduce using rule 64 (for -> FOR ID IN foriterative statement .)
    F64             reduce using rule 64 (for -> FOR ID IN foriterative statement .)
    ENTERO          reduce using rule 64 (for -> FOR ID IN foriterative statement .)
    DECIMAL         reduce using rule 64 (for -> FOR ID IN foriterative statement .)
    CADENA          reduce using rule 64 (for -> FOR ID IN foriterative statement .)
    BOOLEANO        reduce using rule 64 (for -> FOR ID IN foriterative statement .)
    CARACTER        reduce using rule 64 (for -> FOR ID IN foriterative statement .)
    ARROW2          reduce using rule 64 (for -> FOR ID IN foriterative statement .)
    ORSINGLE        reduce using rule 64 (for -> FOR ID IN foriterative statement .)


state 301

    (65) foriterative -> exp PUNTO . PUNTO exp
    (124) exp -> exp PUNTO . exp_native
    (178) exp_native -> . TOSTRING LPAR RPAR
    (179) exp_native -> . TOOWNED LPAR RPAR
    (180) exp_native -> . CLONE LPAR RPAR
    (181) exp_native -> . LEN LPAR RPAR
    (182) exp_native -> . CAPACITY LPAR RPAR
    (183) exp_native -> . REMOVE LPAR auxexp RPAR
    (184) exp_native -> . CONTAINS LPAR ANDSINGLE auxexp RPAR
    (185) exp_native -> . PUSH LPAR auxexp RPAR
    (186) exp_native -> . INSERT LPAR lista_exp RPAR
    (187) exp_native -> . CHARS LPAR RPAR
    (188) exp_native -> . SQRT LPAR RPAR
    (189) exp_native -> . ABS LPAR RPAR

    PUNTO           shift and go to state 327
    TOSTRING        shift and go to state 150
    TOOWNED         shift and go to state 151
    CLONE           shift and go to state 152
    LEN             shift and go to state 153
    CAPACITY        shift and go to state 154
    REMOVE          shift and go to state 155
    CONTAINS        shift and go to state 156
    PUSH            shift and go to state 157
    INSERT          shift and go to state 158
    CHARS           shift and go to state 159
    SQRT            shift and go to state 160
    ABS             shift and go to state 161

    exp_native                     shift and go to state 149

state 302

    (106) asignacion_simple -> MUT ID DPUNTOS ANDSINGLE MUT tipo_var .

    IGUAL           reduce using rule 106 (asignacion_simple -> MUT ID DPUNTOS ANDSINGLE MUT tipo_var .)


state 303

    (107) lista_arr2 -> LCOR tipo_var PCOMA exp . RCOR
    (124) exp -> exp . PUNTO exp_native
    (125) expmath -> exp . MAS exp
    (126) expmath -> exp . MENOS exp
    (127) expmath -> exp . MULTIPLICACION exp
    (128) expmath -> exp . DIVISION exp
    (129) expmath -> exp . MODULO exp
    (133) expop -> exp . AND exp
    (134) expop -> exp . OR exp
    (137) exprel -> exp . IGUALI exp
    (138) exprel -> exp . DIF exp
    (139) exprel -> exp . MAYOR exp
    (140) exprel -> exp . MENOR exp
    (141) exprel -> exp . MAYORI exp
    (142) exprel -> exp . MENORI exp
    (136) expcast -> exp . AS tipo_var

    RCOR            shift and go to state 328
    PUNTO           shift and go to state 86
    MAS             shift and go to state 87
    MENOS           shift and go to state 88
    MULTIPLICACION  shift and go to state 89
    DIVISION        shift and go to state 90
    MODULO          shift and go to state 91
    AND             shift and go to state 92
    OR              shift and go to state 93
    IGUALI          shift and go to state 94
    DIF             shift and go to state 95
    MAYOR           shift and go to state 96
    MENOR           shift and go to state 97
    MAYORI          shift and go to state 98
    MENORI          shift and go to state 99
    AS              shift and go to state 100


state 304

    (174) lista_classtype -> lista_classtype DPUNTOS DPUNTOS ID .

    DPUNTOS         reduce using rule 174 (lista_classtype -> lista_classtype DPUNTOS DPUNTOS ID .)
    IGUAL           reduce using rule 174 (lista_classtype -> lista_classtype DPUNTOS DPUNTOS ID .)
    PUNTO           reduce using rule 174 (lista_classtype -> lista_classtype DPUNTOS DPUNTOS ID .)
    MAS             reduce using rule 174 (lista_classtype -> lista_classtype DPUNTOS DPUNTOS ID .)
    MENOS           reduce using rule 174 (lista_classtype -> lista_classtype DPUNTOS DPUNTOS ID .)
    MULTIPLICACION  reduce using rule 174 (lista_classtype -> lista_classtype DPUNTOS DPUNTOS ID .)
    DIVISION        reduce using rule 174 (lista_classtype -> lista_classtype DPUNTOS DPUNTOS ID .)
    MODULO          reduce using rule 174 (lista_classtype -> lista_classtype DPUNTOS DPUNTOS ID .)
    AND             reduce using rule 174 (lista_classtype -> lista_classtype DPUNTOS DPUNTOS ID .)
    OR              reduce using rule 174 (lista_classtype -> lista_classtype DPUNTOS DPUNTOS ID .)
    IGUALI          reduce using rule 174 (lista_classtype -> lista_classtype DPUNTOS DPUNTOS ID .)
    DIF             reduce using rule 174 (lista_classtype -> lista_classtype DPUNTOS DPUNTOS ID .)
    MAYOR           reduce using rule 174 (lista_classtype -> lista_classtype DPUNTOS DPUNTOS ID .)
    MENOR           reduce using rule 174 (lista_classtype -> lista_classtype DPUNTOS DPUNTOS ID .)
    MAYORI          reduce using rule 174 (lista_classtype -> lista_classtype DPUNTOS DPUNTOS ID .)
    MENORI          reduce using rule 174 (lista_classtype -> lista_classtype DPUNTOS DPUNTOS ID .)
    AS              reduce using rule 174 (lista_classtype -> lista_classtype DPUNTOS DPUNTOS ID .)
    LLLAV           reduce using rule 174 (lista_classtype -> lista_classtype DPUNTOS DPUNTOS ID .)
    PCOMA           reduce using rule 174 (lista_classtype -> lista_classtype DPUNTOS DPUNTOS ID .)
    COMA            reduce using rule 174 (lista_classtype -> lista_classtype DPUNTOS DPUNTOS ID .)
    RCOR            reduce using rule 174 (lista_classtype -> lista_classtype DPUNTOS DPUNTOS ID .)
    RPAR            reduce using rule 174 (lista_classtype -> lista_classtype DPUNTOS DPUNTOS ID .)
    RLLAV           reduce using rule 174 (lista_classtype -> lista_classtype DPUNTOS DPUNTOS ID .)
    ID              reduce using rule 174 (lista_classtype -> lista_classtype DPUNTOS DPUNTOS ID .)
    PRINT           reduce using rule 174 (lista_classtype -> lista_classtype DPUNTOS DPUNTOS ID .)
    LET             reduce using rule 174 (lista_classtype -> lista_classtype DPUNTOS DPUNTOS ID .)
    CONTINUE        reduce using rule 174 (lista_classtype -> lista_classtype DPUNTOS DPUNTOS ID .)
    BREAK           reduce using rule 174 (lista_classtype -> lista_classtype DPUNTOS DPUNTOS ID .)
    RETURN          reduce using rule 174 (lista_classtype -> lista_classtype DPUNTOS DPUNTOS ID .)
    IF              reduce using rule 174 (lista_classtype -> lista_classtype DPUNTOS DPUNTOS ID .)
    MATCH           reduce using rule 174 (lista_classtype -> lista_classtype DPUNTOS DPUNTOS ID .)
    LOOP            reduce using rule 174 (lista_classtype -> lista_classtype DPUNTOS DPUNTOS ID .)
    WHILE           reduce using rule 174 (lista_classtype -> lista_classtype DPUNTOS DPUNTOS ID .)
    FOR             reduce using rule 174 (lista_classtype -> lista_classtype DPUNTOS DPUNTOS ID .)
    LPAR            reduce using rule 174 (lista_classtype -> lista_classtype DPUNTOS DPUNTOS ID .)
    AD              reduce using rule 174 (lista_classtype -> lista_classtype DPUNTOS DPUNTOS ID .)
    LCOR            reduce using rule 174 (lista_classtype -> lista_classtype DPUNTOS DPUNTOS ID .)
    VEC             reduce using rule 174 (lista_classtype -> lista_classtype DPUNTOS DPUNTOS ID .)
    VECTOR          reduce using rule 174 (lista_classtype -> lista_classtype DPUNTOS DPUNTOS ID .)
    MUT             reduce using rule 174 (lista_classtype -> lista_classtype DPUNTOS DPUNTOS ID .)
    ANDSINGLE       reduce using rule 174 (lista_classtype -> lista_classtype DPUNTOS DPUNTOS ID .)
    I64             reduce using rule 174 (lista_classtype -> lista_classtype DPUNTOS DPUNTOS ID .)
    F64             reduce using rule 174 (lista_classtype -> lista_classtype DPUNTOS DPUNTOS ID .)
    ENTERO          reduce using rule 174 (lista_classtype -> lista_classtype DPUNTOS DPUNTOS ID .)
    DECIMAL         reduce using rule 174 (lista_classtype -> lista_classtype DPUNTOS DPUNTOS ID .)
    CADENA          reduce using rule 174 (lista_classtype -> lista_classtype DPUNTOS DPUNTOS ID .)
    BOOLEANO        reduce using rule 174 (lista_classtype -> lista_classtype DPUNTOS DPUNTOS ID .)
    CARACTER        reduce using rule 174 (lista_classtype -> lista_classtype DPUNTOS DPUNTOS ID .)
    ARROW2          reduce using rule 174 (lista_classtype -> lista_classtype DPUNTOS DPUNTOS ID .)
    ORSINGLE        reduce using rule 174 (lista_classtype -> lista_classtype DPUNTOS DPUNTOS ID .)


state 305

    (172) tipo_var -> VECTOR MENOR tipo_var MAYOR .

    IGUAL           reduce using rule 172 (tipo_var -> VECTOR MENOR tipo_var MAYOR .)
    PUNTO           reduce using rule 172 (tipo_var -> VECTOR MENOR tipo_var MAYOR .)
    MAS             reduce using rule 172 (tipo_var -> VECTOR MENOR tipo_var MAYOR .)
    MENOS           reduce using rule 172 (tipo_var -> VECTOR MENOR tipo_var MAYOR .)
    MULTIPLICACION  reduce using rule 172 (tipo_var -> VECTOR MENOR tipo_var MAYOR .)
    DIVISION        reduce using rule 172 (tipo_var -> VECTOR MENOR tipo_var MAYOR .)
    MODULO          reduce using rule 172 (tipo_var -> VECTOR MENOR tipo_var MAYOR .)
    AND             reduce using rule 172 (tipo_var -> VECTOR MENOR tipo_var MAYOR .)
    OR              reduce using rule 172 (tipo_var -> VECTOR MENOR tipo_var MAYOR .)
    IGUALI          reduce using rule 172 (tipo_var -> VECTOR MENOR tipo_var MAYOR .)
    DIF             reduce using rule 172 (tipo_var -> VECTOR MENOR tipo_var MAYOR .)
    MAYOR           reduce using rule 172 (tipo_var -> VECTOR MENOR tipo_var MAYOR .)
    MENOR           reduce using rule 172 (tipo_var -> VECTOR MENOR tipo_var MAYOR .)
    MAYORI          reduce using rule 172 (tipo_var -> VECTOR MENOR tipo_var MAYOR .)
    MENORI          reduce using rule 172 (tipo_var -> VECTOR MENOR tipo_var MAYOR .)
    AS              reduce using rule 172 (tipo_var -> VECTOR MENOR tipo_var MAYOR .)
    LLLAV           reduce using rule 172 (tipo_var -> VECTOR MENOR tipo_var MAYOR .)
    PCOMA           reduce using rule 172 (tipo_var -> VECTOR MENOR tipo_var MAYOR .)
    COMA            reduce using rule 172 (tipo_var -> VECTOR MENOR tipo_var MAYOR .)
    RCOR            reduce using rule 172 (tipo_var -> VECTOR MENOR tipo_var MAYOR .)
    RPAR            reduce using rule 172 (tipo_var -> VECTOR MENOR tipo_var MAYOR .)
    RLLAV           reduce using rule 172 (tipo_var -> VECTOR MENOR tipo_var MAYOR .)
    ID              reduce using rule 172 (tipo_var -> VECTOR MENOR tipo_var MAYOR .)
    PRINT           reduce using rule 172 (tipo_var -> VECTOR MENOR tipo_var MAYOR .)
    LET             reduce using rule 172 (tipo_var -> VECTOR MENOR tipo_var MAYOR .)
    CONTINUE        reduce using rule 172 (tipo_var -> VECTOR MENOR tipo_var MAYOR .)
    BREAK           reduce using rule 172 (tipo_var -> VECTOR MENOR tipo_var MAYOR .)
    RETURN          reduce using rule 172 (tipo_var -> VECTOR MENOR tipo_var MAYOR .)
    IF              reduce using rule 172 (tipo_var -> VECTOR MENOR tipo_var MAYOR .)
    MATCH           reduce using rule 172 (tipo_var -> VECTOR MENOR tipo_var MAYOR .)
    LOOP            reduce using rule 172 (tipo_var -> VECTOR MENOR tipo_var MAYOR .)
    WHILE           reduce using rule 172 (tipo_var -> VECTOR MENOR tipo_var MAYOR .)
    FOR             reduce using rule 172 (tipo_var -> VECTOR MENOR tipo_var MAYOR .)
    LPAR            reduce using rule 172 (tipo_var -> VECTOR MENOR tipo_var MAYOR .)
    AD              reduce using rule 172 (tipo_var -> VECTOR MENOR tipo_var MAYOR .)
    LCOR            reduce using rule 172 (tipo_var -> VECTOR MENOR tipo_var MAYOR .)
    VEC             reduce using rule 172 (tipo_var -> VECTOR MENOR tipo_var MAYOR .)
    VECTOR          reduce using rule 172 (tipo_var -> VECTOR MENOR tipo_var MAYOR .)
    MUT             reduce using rule 172 (tipo_var -> VECTOR MENOR tipo_var MAYOR .)
    ANDSINGLE       reduce using rule 172 (tipo_var -> VECTOR MENOR tipo_var MAYOR .)
    I64             reduce using rule 172 (tipo_var -> VECTOR MENOR tipo_var MAYOR .)
    F64             reduce using rule 172 (tipo_var -> VECTOR MENOR tipo_var MAYOR .)
    ENTERO          reduce using rule 172 (tipo_var -> VECTOR MENOR tipo_var MAYOR .)
    DECIMAL         reduce using rule 172 (tipo_var -> VECTOR MENOR tipo_var MAYOR .)
    CADENA          reduce using rule 172 (tipo_var -> VECTOR MENOR tipo_var MAYOR .)
    BOOLEANO        reduce using rule 172 (tipo_var -> VECTOR MENOR tipo_var MAYOR .)
    CARACTER        reduce using rule 172 (tipo_var -> VECTOR MENOR tipo_var MAYOR .)
    ARROW2          reduce using rule 172 (tipo_var -> VECTOR MENOR tipo_var MAYOR .)
    ORSINGLE        reduce using rule 172 (tipo_var -> VECTOR MENOR tipo_var MAYOR .)


state 306

    (173) tipo_var -> VECTOR MENOR lista_classtype MAYOR .

    IGUAL           reduce using rule 173 (tipo_var -> VECTOR MENOR lista_classtype MAYOR .)
    PUNTO           reduce using rule 173 (tipo_var -> VECTOR MENOR lista_classtype MAYOR .)
    MAS             reduce using rule 173 (tipo_var -> VECTOR MENOR lista_classtype MAYOR .)
    MENOS           reduce using rule 173 (tipo_var -> VECTOR MENOR lista_classtype MAYOR .)
    MULTIPLICACION  reduce using rule 173 (tipo_var -> VECTOR MENOR lista_classtype MAYOR .)
    DIVISION        reduce using rule 173 (tipo_var -> VECTOR MENOR lista_classtype MAYOR .)
    MODULO          reduce using rule 173 (tipo_var -> VECTOR MENOR lista_classtype MAYOR .)
    AND             reduce using rule 173 (tipo_var -> VECTOR MENOR lista_classtype MAYOR .)
    OR              reduce using rule 173 (tipo_var -> VECTOR MENOR lista_classtype MAYOR .)
    IGUALI          reduce using rule 173 (tipo_var -> VECTOR MENOR lista_classtype MAYOR .)
    DIF             reduce using rule 173 (tipo_var -> VECTOR MENOR lista_classtype MAYOR .)
    MAYOR           reduce using rule 173 (tipo_var -> VECTOR MENOR lista_classtype MAYOR .)
    MENOR           reduce using rule 173 (tipo_var -> VECTOR MENOR lista_classtype MAYOR .)
    MAYORI          reduce using rule 173 (tipo_var -> VECTOR MENOR lista_classtype MAYOR .)
    MENORI          reduce using rule 173 (tipo_var -> VECTOR MENOR lista_classtype MAYOR .)
    AS              reduce using rule 173 (tipo_var -> VECTOR MENOR lista_classtype MAYOR .)
    LLLAV           reduce using rule 173 (tipo_var -> VECTOR MENOR lista_classtype MAYOR .)
    PCOMA           reduce using rule 173 (tipo_var -> VECTOR MENOR lista_classtype MAYOR .)
    COMA            reduce using rule 173 (tipo_var -> VECTOR MENOR lista_classtype MAYOR .)
    RCOR            reduce using rule 173 (tipo_var -> VECTOR MENOR lista_classtype MAYOR .)
    RPAR            reduce using rule 173 (tipo_var -> VECTOR MENOR lista_classtype MAYOR .)
    RLLAV           reduce using rule 173 (tipo_var -> VECTOR MENOR lista_classtype MAYOR .)
    ID              reduce using rule 173 (tipo_var -> VECTOR MENOR lista_classtype MAYOR .)
    PRINT           reduce using rule 173 (tipo_var -> VECTOR MENOR lista_classtype MAYOR .)
    LET             reduce using rule 173 (tipo_var -> VECTOR MENOR lista_classtype MAYOR .)
    CONTINUE        reduce using rule 173 (tipo_var -> VECTOR MENOR lista_classtype MAYOR .)
    BREAK           reduce using rule 173 (tipo_var -> VECTOR MENOR lista_classtype MAYOR .)
    RETURN          reduce using rule 173 (tipo_var -> VECTOR MENOR lista_classtype MAYOR .)
    IF              reduce using rule 173 (tipo_var -> VECTOR MENOR lista_classtype MAYOR .)
    MATCH           reduce using rule 173 (tipo_var -> VECTOR MENOR lista_classtype MAYOR .)
    LOOP            reduce using rule 173 (tipo_var -> VECTOR MENOR lista_classtype MAYOR .)
    WHILE           reduce using rule 173 (tipo_var -> VECTOR MENOR lista_classtype MAYOR .)
    FOR             reduce using rule 173 (tipo_var -> VECTOR MENOR lista_classtype MAYOR .)
    LPAR            reduce using rule 173 (tipo_var -> VECTOR MENOR lista_classtype MAYOR .)
    AD              reduce using rule 173 (tipo_var -> VECTOR MENOR lista_classtype MAYOR .)
    LCOR            reduce using rule 173 (tipo_var -> VECTOR MENOR lista_classtype MAYOR .)
    VEC             reduce using rule 173 (tipo_var -> VECTOR MENOR lista_classtype MAYOR .)
    VECTOR          reduce using rule 173 (tipo_var -> VECTOR MENOR lista_classtype MAYOR .)
    MUT             reduce using rule 173 (tipo_var -> VECTOR MENOR lista_classtype MAYOR .)
    ANDSINGLE       reduce using rule 173 (tipo_var -> VECTOR MENOR lista_classtype MAYOR .)
    I64             reduce using rule 173 (tipo_var -> VECTOR MENOR lista_classtype MAYOR .)
    F64             reduce using rule 173 (tipo_var -> VECTOR MENOR lista_classtype MAYOR .)
    ENTERO          reduce using rule 173 (tipo_var -> VECTOR MENOR lista_classtype MAYOR .)
    DECIMAL         reduce using rule 173 (tipo_var -> VECTOR MENOR lista_classtype MAYOR .)
    CADENA          reduce using rule 173 (tipo_var -> VECTOR MENOR lista_classtype MAYOR .)
    BOOLEANO        reduce using rule 173 (tipo_var -> VECTOR MENOR lista_classtype MAYOR .)
    CARACTER        reduce using rule 173 (tipo_var -> VECTOR MENOR lista_classtype MAYOR .)
    ARROW2          reduce using rule 173 (tipo_var -> VECTOR MENOR lista_classtype MAYOR .)
    ORSINGLE        reduce using rule 173 (tipo_var -> VECTOR MENOR lista_classtype MAYOR .)


state 307

    (146) lista_att -> lista_att COMA ID . DPUNTOS auxexp

    DPUNTOS         shift and go to state 329


state 308

    (147) lista_att -> ID DPUNTOS auxexp .

    RLLAV           reduce using rule 147 (lista_att -> ID DPUNTOS auxexp .)
    COMA            reduce using rule 147 (lista_att -> ID DPUNTOS auxexp .)


state 309

    (183) exp_native -> REMOVE LPAR auxexp RPAR .

    PUNTO           reduce using rule 183 (exp_native -> REMOVE LPAR auxexp RPAR .)
    MAS             reduce using rule 183 (exp_native -> REMOVE LPAR auxexp RPAR .)
    MENOS           reduce using rule 183 (exp_native -> REMOVE LPAR auxexp RPAR .)
    MULTIPLICACION  reduce using rule 183 (exp_native -> REMOVE LPAR auxexp RPAR .)
    DIVISION        reduce using rule 183 (exp_native -> REMOVE LPAR auxexp RPAR .)
    MODULO          reduce using rule 183 (exp_native -> REMOVE LPAR auxexp RPAR .)
    AND             reduce using rule 183 (exp_native -> REMOVE LPAR auxexp RPAR .)
    OR              reduce using rule 183 (exp_native -> REMOVE LPAR auxexp RPAR .)
    IGUALI          reduce using rule 183 (exp_native -> REMOVE LPAR auxexp RPAR .)
    DIF             reduce using rule 183 (exp_native -> REMOVE LPAR auxexp RPAR .)
    MAYOR           reduce using rule 183 (exp_native -> REMOVE LPAR auxexp RPAR .)
    MENOR           reduce using rule 183 (exp_native -> REMOVE LPAR auxexp RPAR .)
    MAYORI          reduce using rule 183 (exp_native -> REMOVE LPAR auxexp RPAR .)
    MENORI          reduce using rule 183 (exp_native -> REMOVE LPAR auxexp RPAR .)
    AS              reduce using rule 183 (exp_native -> REMOVE LPAR auxexp RPAR .)
    LLLAV           reduce using rule 183 (exp_native -> REMOVE LPAR auxexp RPAR .)
    PCOMA           reduce using rule 183 (exp_native -> REMOVE LPAR auxexp RPAR .)
    COMA            reduce using rule 183 (exp_native -> REMOVE LPAR auxexp RPAR .)
    RCOR            reduce using rule 183 (exp_native -> REMOVE LPAR auxexp RPAR .)
    RPAR            reduce using rule 183 (exp_native -> REMOVE LPAR auxexp RPAR .)
    RLLAV           reduce using rule 183 (exp_native -> REMOVE LPAR auxexp RPAR .)
    ID              reduce using rule 183 (exp_native -> REMOVE LPAR auxexp RPAR .)
    PRINT           reduce using rule 183 (exp_native -> REMOVE LPAR auxexp RPAR .)
    LET             reduce using rule 183 (exp_native -> REMOVE LPAR auxexp RPAR .)
    CONTINUE        reduce using rule 183 (exp_native -> REMOVE LPAR auxexp RPAR .)
    BREAK           reduce using rule 183 (exp_native -> REMOVE LPAR auxexp RPAR .)
    RETURN          reduce using rule 183 (exp_native -> REMOVE LPAR auxexp RPAR .)
    IF              reduce using rule 183 (exp_native -> REMOVE LPAR auxexp RPAR .)
    MATCH           reduce using rule 183 (exp_native -> REMOVE LPAR auxexp RPAR .)
    LOOP            reduce using rule 183 (exp_native -> REMOVE LPAR auxexp RPAR .)
    WHILE           reduce using rule 183 (exp_native -> REMOVE LPAR auxexp RPAR .)
    FOR             reduce using rule 183 (exp_native -> REMOVE LPAR auxexp RPAR .)
    LPAR            reduce using rule 183 (exp_native -> REMOVE LPAR auxexp RPAR .)
    AD              reduce using rule 183 (exp_native -> REMOVE LPAR auxexp RPAR .)
    LCOR            reduce using rule 183 (exp_native -> REMOVE LPAR auxexp RPAR .)
    VEC             reduce using rule 183 (exp_native -> REMOVE LPAR auxexp RPAR .)
    VECTOR          reduce using rule 183 (exp_native -> REMOVE LPAR auxexp RPAR .)
    MUT             reduce using rule 183 (exp_native -> REMOVE LPAR auxexp RPAR .)
    ANDSINGLE       reduce using rule 183 (exp_native -> REMOVE LPAR auxexp RPAR .)
    I64             reduce using rule 183 (exp_native -> REMOVE LPAR auxexp RPAR .)
    F64             reduce using rule 183 (exp_native -> REMOVE LPAR auxexp RPAR .)
    ENTERO          reduce using rule 183 (exp_native -> REMOVE LPAR auxexp RPAR .)
    DECIMAL         reduce using rule 183 (exp_native -> REMOVE LPAR auxexp RPAR .)
    CADENA          reduce using rule 183 (exp_native -> REMOVE LPAR auxexp RPAR .)
    BOOLEANO        reduce using rule 183 (exp_native -> REMOVE LPAR auxexp RPAR .)
    CARACTER        reduce using rule 183 (exp_native -> REMOVE LPAR auxexp RPAR .)
    ARROW2          reduce using rule 183 (exp_native -> REMOVE LPAR auxexp RPAR .)
    ORSINGLE        reduce using rule 183 (exp_native -> REMOVE LPAR auxexp RPAR .)


state 310

    (184) exp_native -> CONTAINS LPAR ANDSINGLE auxexp . RPAR

    RPAR            shift and go to state 330


state 311

    (185) exp_native -> PUSH LPAR auxexp RPAR .

    PUNTO           reduce using rule 185 (exp_native -> PUSH LPAR auxexp RPAR .)
    MAS             reduce using rule 185 (exp_native -> PUSH LPAR auxexp RPAR .)
    MENOS           reduce using rule 185 (exp_native -> PUSH LPAR auxexp RPAR .)
    MULTIPLICACION  reduce using rule 185 (exp_native -> PUSH LPAR auxexp RPAR .)
    DIVISION        reduce using rule 185 (exp_native -> PUSH LPAR auxexp RPAR .)
    MODULO          reduce using rule 185 (exp_native -> PUSH LPAR auxexp RPAR .)
    AND             reduce using rule 185 (exp_native -> PUSH LPAR auxexp RPAR .)
    OR              reduce using rule 185 (exp_native -> PUSH LPAR auxexp RPAR .)
    IGUALI          reduce using rule 185 (exp_native -> PUSH LPAR auxexp RPAR .)
    DIF             reduce using rule 185 (exp_native -> PUSH LPAR auxexp RPAR .)
    MAYOR           reduce using rule 185 (exp_native -> PUSH LPAR auxexp RPAR .)
    MENOR           reduce using rule 185 (exp_native -> PUSH LPAR auxexp RPAR .)
    MAYORI          reduce using rule 185 (exp_native -> PUSH LPAR auxexp RPAR .)
    MENORI          reduce using rule 185 (exp_native -> PUSH LPAR auxexp RPAR .)
    AS              reduce using rule 185 (exp_native -> PUSH LPAR auxexp RPAR .)
    LLLAV           reduce using rule 185 (exp_native -> PUSH LPAR auxexp RPAR .)
    PCOMA           reduce using rule 185 (exp_native -> PUSH LPAR auxexp RPAR .)
    COMA            reduce using rule 185 (exp_native -> PUSH LPAR auxexp RPAR .)
    RCOR            reduce using rule 185 (exp_native -> PUSH LPAR auxexp RPAR .)
    RPAR            reduce using rule 185 (exp_native -> PUSH LPAR auxexp RPAR .)
    RLLAV           reduce using rule 185 (exp_native -> PUSH LPAR auxexp RPAR .)
    ID              reduce using rule 185 (exp_native -> PUSH LPAR auxexp RPAR .)
    PRINT           reduce using rule 185 (exp_native -> PUSH LPAR auxexp RPAR .)
    LET             reduce using rule 185 (exp_native -> PUSH LPAR auxexp RPAR .)
    CONTINUE        reduce using rule 185 (exp_native -> PUSH LPAR auxexp RPAR .)
    BREAK           reduce using rule 185 (exp_native -> PUSH LPAR auxexp RPAR .)
    RETURN          reduce using rule 185 (exp_native -> PUSH LPAR auxexp RPAR .)
    IF              reduce using rule 185 (exp_native -> PUSH LPAR auxexp RPAR .)
    MATCH           reduce using rule 185 (exp_native -> PUSH LPAR auxexp RPAR .)
    LOOP            reduce using rule 185 (exp_native -> PUSH LPAR auxexp RPAR .)
    WHILE           reduce using rule 185 (exp_native -> PUSH LPAR auxexp RPAR .)
    FOR             reduce using rule 185 (exp_native -> PUSH LPAR auxexp RPAR .)
    LPAR            reduce using rule 185 (exp_native -> PUSH LPAR auxexp RPAR .)
    AD              reduce using rule 185 (exp_native -> PUSH LPAR auxexp RPAR .)
    LCOR            reduce using rule 185 (exp_native -> PUSH LPAR auxexp RPAR .)
    VEC             reduce using rule 185 (exp_native -> PUSH LPAR auxexp RPAR .)
    VECTOR          reduce using rule 185 (exp_native -> PUSH LPAR auxexp RPAR .)
    MUT             reduce using rule 185 (exp_native -> PUSH LPAR auxexp RPAR .)
    ANDSINGLE       reduce using rule 185 (exp_native -> PUSH LPAR auxexp RPAR .)
    I64             reduce using rule 185 (exp_native -> PUSH LPAR auxexp RPAR .)
    F64             reduce using rule 185 (exp_native -> PUSH LPAR auxexp RPAR .)
    ENTERO          reduce using rule 185 (exp_native -> PUSH LPAR auxexp RPAR .)
    DECIMAL         reduce using rule 185 (exp_native -> PUSH LPAR auxexp RPAR .)
    CADENA          reduce using rule 185 (exp_native -> PUSH LPAR auxexp RPAR .)
    BOOLEANO        reduce using rule 185 (exp_native -> PUSH LPAR auxexp RPAR .)
    CARACTER        reduce using rule 185 (exp_native -> PUSH LPAR auxexp RPAR .)
    ARROW2          reduce using rule 185 (exp_native -> PUSH LPAR auxexp RPAR .)
    ORSINGLE        reduce using rule 185 (exp_native -> PUSH LPAR auxexp RPAR .)


state 312

    (186) exp_native -> INSERT LPAR lista_exp RPAR .

    PUNTO           reduce using rule 186 (exp_native -> INSERT LPAR lista_exp RPAR .)
    MAS             reduce using rule 186 (exp_native -> INSERT LPAR lista_exp RPAR .)
    MENOS           reduce using rule 186 (exp_native -> INSERT LPAR lista_exp RPAR .)
    MULTIPLICACION  reduce using rule 186 (exp_native -> INSERT LPAR lista_exp RPAR .)
    DIVISION        reduce using rule 186 (exp_native -> INSERT LPAR lista_exp RPAR .)
    MODULO          reduce using rule 186 (exp_native -> INSERT LPAR lista_exp RPAR .)
    AND             reduce using rule 186 (exp_native -> INSERT LPAR lista_exp RPAR .)
    OR              reduce using rule 186 (exp_native -> INSERT LPAR lista_exp RPAR .)
    IGUALI          reduce using rule 186 (exp_native -> INSERT LPAR lista_exp RPAR .)
    DIF             reduce using rule 186 (exp_native -> INSERT LPAR lista_exp RPAR .)
    MAYOR           reduce using rule 186 (exp_native -> INSERT LPAR lista_exp RPAR .)
    MENOR           reduce using rule 186 (exp_native -> INSERT LPAR lista_exp RPAR .)
    MAYORI          reduce using rule 186 (exp_native -> INSERT LPAR lista_exp RPAR .)
    MENORI          reduce using rule 186 (exp_native -> INSERT LPAR lista_exp RPAR .)
    AS              reduce using rule 186 (exp_native -> INSERT LPAR lista_exp RPAR .)
    LLLAV           reduce using rule 186 (exp_native -> INSERT LPAR lista_exp RPAR .)
    PCOMA           reduce using rule 186 (exp_native -> INSERT LPAR lista_exp RPAR .)
    COMA            reduce using rule 186 (exp_native -> INSERT LPAR lista_exp RPAR .)
    RCOR            reduce using rule 186 (exp_native -> INSERT LPAR lista_exp RPAR .)
    RPAR            reduce using rule 186 (exp_native -> INSERT LPAR lista_exp RPAR .)
    RLLAV           reduce using rule 186 (exp_native -> INSERT LPAR lista_exp RPAR .)
    ID              reduce using rule 186 (exp_native -> INSERT LPAR lista_exp RPAR .)
    PRINT           reduce using rule 186 (exp_native -> INSERT LPAR lista_exp RPAR .)
    LET             reduce using rule 186 (exp_native -> INSERT LPAR lista_exp RPAR .)
    CONTINUE        reduce using rule 186 (exp_native -> INSERT LPAR lista_exp RPAR .)
    BREAK           reduce using rule 186 (exp_native -> INSERT LPAR lista_exp RPAR .)
    RETURN          reduce using rule 186 (exp_native -> INSERT LPAR lista_exp RPAR .)
    IF              reduce using rule 186 (exp_native -> INSERT LPAR lista_exp RPAR .)
    MATCH           reduce using rule 186 (exp_native -> INSERT LPAR lista_exp RPAR .)
    LOOP            reduce using rule 186 (exp_native -> INSERT LPAR lista_exp RPAR .)
    WHILE           reduce using rule 186 (exp_native -> INSERT LPAR lista_exp RPAR .)
    FOR             reduce using rule 186 (exp_native -> INSERT LPAR lista_exp RPAR .)
    LPAR            reduce using rule 186 (exp_native -> INSERT LPAR lista_exp RPAR .)
    AD              reduce using rule 186 (exp_native -> INSERT LPAR lista_exp RPAR .)
    LCOR            reduce using rule 186 (exp_native -> INSERT LPAR lista_exp RPAR .)
    VEC             reduce using rule 186 (exp_native -> INSERT LPAR lista_exp RPAR .)
    VECTOR          reduce using rule 186 (exp_native -> INSERT LPAR lista_exp RPAR .)
    MUT             reduce using rule 186 (exp_native -> INSERT LPAR lista_exp RPAR .)
    ANDSINGLE       reduce using rule 186 (exp_native -> INSERT LPAR lista_exp RPAR .)
    I64             reduce using rule 186 (exp_native -> INSERT LPAR lista_exp RPAR .)
    F64             reduce using rule 186 (exp_native -> INSERT LPAR lista_exp RPAR .)
    ENTERO          reduce using rule 186 (exp_native -> INSERT LPAR lista_exp RPAR .)
    DECIMAL         reduce using rule 186 (exp_native -> INSERT LPAR lista_exp RPAR .)
    CADENA          reduce using rule 186 (exp_native -> INSERT LPAR lista_exp RPAR .)
    BOOLEANO        reduce using rule 186 (exp_native -> INSERT LPAR lista_exp RPAR .)
    CARACTER        reduce using rule 186 (exp_native -> INSERT LPAR lista_exp RPAR .)
    ARROW2          reduce using rule 186 (exp_native -> INSERT LPAR lista_exp RPAR .)
    ORSINGLE        reduce using rule 186 (exp_native -> INSERT LPAR lista_exp RPAR .)


state 313

    (16) instruccion_l -> ID PUNTO exp_native PCOMA .

    RLLAV           reduce using rule 16 (instruccion_l -> ID PUNTO exp_native PCOMA .)
    ID              reduce using rule 16 (instruccion_l -> ID PUNTO exp_native PCOMA .)
    PRINT           reduce using rule 16 (instruccion_l -> ID PUNTO exp_native PCOMA .)
    LET             reduce using rule 16 (instruccion_l -> ID PUNTO exp_native PCOMA .)
    CONTINUE        reduce using rule 16 (instruccion_l -> ID PUNTO exp_native PCOMA .)
    BREAK           reduce using rule 16 (instruccion_l -> ID PUNTO exp_native PCOMA .)
    RETURN          reduce using rule 16 (instruccion_l -> ID PUNTO exp_native PCOMA .)
    IF              reduce using rule 16 (instruccion_l -> ID PUNTO exp_native PCOMA .)
    MATCH           reduce using rule 16 (instruccion_l -> ID PUNTO exp_native PCOMA .)
    LOOP            reduce using rule 16 (instruccion_l -> ID PUNTO exp_native PCOMA .)
    WHILE           reduce using rule 16 (instruccion_l -> ID PUNTO exp_native PCOMA .)
    FOR             reduce using rule 16 (instruccion_l -> ID PUNTO exp_native PCOMA .)
    LPAR            reduce using rule 16 (instruccion_l -> ID PUNTO exp_native PCOMA .)
    MENOS           reduce using rule 16 (instruccion_l -> ID PUNTO exp_native PCOMA .)
    AD              reduce using rule 16 (instruccion_l -> ID PUNTO exp_native PCOMA .)
    LCOR            reduce using rule 16 (instruccion_l -> ID PUNTO exp_native PCOMA .)
    VEC             reduce using rule 16 (instruccion_l -> ID PUNTO exp_native PCOMA .)
    VECTOR          reduce using rule 16 (instruccion_l -> ID PUNTO exp_native PCOMA .)
    MUT             reduce using rule 16 (instruccion_l -> ID PUNTO exp_native PCOMA .)
    ANDSINGLE       reduce using rule 16 (instruccion_l -> ID PUNTO exp_native PCOMA .)
    I64             reduce using rule 16 (instruccion_l -> ID PUNTO exp_native PCOMA .)
    F64             reduce using rule 16 (instruccion_l -> ID PUNTO exp_native PCOMA .)
    ENTERO          reduce using rule 16 (instruccion_l -> ID PUNTO exp_native PCOMA .)
    DECIMAL         reduce using rule 16 (instruccion_l -> ID PUNTO exp_native PCOMA .)
    CADENA          reduce using rule 16 (instruccion_l -> ID PUNTO exp_native PCOMA .)
    BOOLEANO        reduce using rule 16 (instruccion_l -> ID PUNTO exp_native PCOMA .)
    CARACTER        reduce using rule 16 (instruccion_l -> ID PUNTO exp_native PCOMA .)


state 314

    (190) exp_natarr -> NEW LPAR RPAR .

    PUNTO           reduce using rule 190 (exp_natarr -> NEW LPAR RPAR .)
    MAS             reduce using rule 190 (exp_natarr -> NEW LPAR RPAR .)
    MENOS           reduce using rule 190 (exp_natarr -> NEW LPAR RPAR .)
    MULTIPLICACION  reduce using rule 190 (exp_natarr -> NEW LPAR RPAR .)
    DIVISION        reduce using rule 190 (exp_natarr -> NEW LPAR RPAR .)
    MODULO          reduce using rule 190 (exp_natarr -> NEW LPAR RPAR .)
    AND             reduce using rule 190 (exp_natarr -> NEW LPAR RPAR .)
    OR              reduce using rule 190 (exp_natarr -> NEW LPAR RPAR .)
    IGUALI          reduce using rule 190 (exp_natarr -> NEW LPAR RPAR .)
    DIF             reduce using rule 190 (exp_natarr -> NEW LPAR RPAR .)
    MAYOR           reduce using rule 190 (exp_natarr -> NEW LPAR RPAR .)
    MENOR           reduce using rule 190 (exp_natarr -> NEW LPAR RPAR .)
    MAYORI          reduce using rule 190 (exp_natarr -> NEW LPAR RPAR .)
    MENORI          reduce using rule 190 (exp_natarr -> NEW LPAR RPAR .)
    AS              reduce using rule 190 (exp_natarr -> NEW LPAR RPAR .)
    LLLAV           reduce using rule 190 (exp_natarr -> NEW LPAR RPAR .)
    PCOMA           reduce using rule 190 (exp_natarr -> NEW LPAR RPAR .)
    COMA            reduce using rule 190 (exp_natarr -> NEW LPAR RPAR .)
    RCOR            reduce using rule 190 (exp_natarr -> NEW LPAR RPAR .)
    RPAR            reduce using rule 190 (exp_natarr -> NEW LPAR RPAR .)
    RLLAV           reduce using rule 190 (exp_natarr -> NEW LPAR RPAR .)
    ID              reduce using rule 190 (exp_natarr -> NEW LPAR RPAR .)
    PRINT           reduce using rule 190 (exp_natarr -> NEW LPAR RPAR .)
    LET             reduce using rule 190 (exp_natarr -> NEW LPAR RPAR .)
    CONTINUE        reduce using rule 190 (exp_natarr -> NEW LPAR RPAR .)
    BREAK           reduce using rule 190 (exp_natarr -> NEW LPAR RPAR .)
    RETURN          reduce using rule 190 (exp_natarr -> NEW LPAR RPAR .)
    IF              reduce using rule 190 (exp_natarr -> NEW LPAR RPAR .)
    MATCH           reduce using rule 190 (exp_natarr -> NEW LPAR RPAR .)
    LOOP            reduce using rule 190 (exp_natarr -> NEW LPAR RPAR .)
    WHILE           reduce using rule 190 (exp_natarr -> NEW LPAR RPAR .)
    FOR             reduce using rule 190 (exp_natarr -> NEW LPAR RPAR .)
    LPAR            reduce using rule 190 (exp_natarr -> NEW LPAR RPAR .)
    AD              reduce using rule 190 (exp_natarr -> NEW LPAR RPAR .)
    LCOR            reduce using rule 190 (exp_natarr -> NEW LPAR RPAR .)
    VEC             reduce using rule 190 (exp_natarr -> NEW LPAR RPAR .)
    VECTOR          reduce using rule 190 (exp_natarr -> NEW LPAR RPAR .)
    MUT             reduce using rule 190 (exp_natarr -> NEW LPAR RPAR .)
    ANDSINGLE       reduce using rule 190 (exp_natarr -> NEW LPAR RPAR .)
    I64             reduce using rule 190 (exp_natarr -> NEW LPAR RPAR .)
    F64             reduce using rule 190 (exp_natarr -> NEW LPAR RPAR .)
    ENTERO          reduce using rule 190 (exp_natarr -> NEW LPAR RPAR .)
    DECIMAL         reduce using rule 190 (exp_natarr -> NEW LPAR RPAR .)
    CADENA          reduce using rule 190 (exp_natarr -> NEW LPAR RPAR .)
    BOOLEANO        reduce using rule 190 (exp_natarr -> NEW LPAR RPAR .)
    CARACTER        reduce using rule 190 (exp_natarr -> NEW LPAR RPAR .)
    ARROW2          reduce using rule 190 (exp_natarr -> NEW LPAR RPAR .)
    ORSINGLE        reduce using rule 190 (exp_natarr -> NEW LPAR RPAR .)


state 315

    (191) exp_natarr -> WITHCAPACITY LPAR exp . RPAR
    (124) exp -> exp . PUNTO exp_native
    (125) expmath -> exp . MAS exp
    (126) expmath -> exp . MENOS exp
    (127) expmath -> exp . MULTIPLICACION exp
    (128) expmath -> exp . DIVISION exp
    (129) expmath -> exp . MODULO exp
    (133) expop -> exp . AND exp
    (134) expop -> exp . OR exp
    (137) exprel -> exp . IGUALI exp
    (138) exprel -> exp . DIF exp
    (139) exprel -> exp . MAYOR exp
    (140) exprel -> exp . MENOR exp
    (141) exprel -> exp . MAYORI exp
    (142) exprel -> exp . MENORI exp
    (136) expcast -> exp . AS tipo_var

    RPAR            shift and go to state 331
    PUNTO           shift and go to state 86
    MAS             shift and go to state 87
    MENOS           shift and go to state 88
    MULTIPLICACION  shift and go to state 89
    DIVISION        shift and go to state 90
    MODULO          shift and go to state 91
    AND             shift and go to state 92
    OR              shift and go to state 93
    IGUALI          shift and go to state 94
    DIF             shift and go to state 95
    MAYOR           shift and go to state 96
    MENOR           shift and go to state 97
    MAYORI          shift and go to state 98
    MENORI          shift and go to state 99
    AS              shift and go to state 100


state 316

    (131) exppow -> I64 DPUNTOS DPUNTOS POW LPAR exp . COMA exp RPAR
    (124) exp -> exp . PUNTO exp_native
    (125) expmath -> exp . MAS exp
    (126) expmath -> exp . MENOS exp
    (127) expmath -> exp . MULTIPLICACION exp
    (128) expmath -> exp . DIVISION exp
    (129) expmath -> exp . MODULO exp
    (133) expop -> exp . AND exp
    (134) expop -> exp . OR exp
    (137) exprel -> exp . IGUALI exp
    (138) exprel -> exp . DIF exp
    (139) exprel -> exp . MAYOR exp
    (140) exprel -> exp . MENOR exp
    (141) exprel -> exp . MAYORI exp
    (142) exprel -> exp . MENORI exp
    (136) expcast -> exp . AS tipo_var

    COMA            shift and go to state 332
    PUNTO           shift and go to state 86
    MAS             shift and go to state 87
    MENOS           shift and go to state 88
    MULTIPLICACION  shift and go to state 89
    DIVISION        shift and go to state 90
    MODULO          shift and go to state 91
    AND             shift and go to state 92
    OR              shift and go to state 93
    IGUALI          shift and go to state 94
    DIF             shift and go to state 95
    MAYOR           shift and go to state 96
    MENOR           shift and go to state 97
    MAYORI          shift and go to state 98
    MENORI          shift and go to state 99
    AS              shift and go to state 100


state 317

    (132) exppow -> F64 DPUNTOS DPUNTOS POWF LPAR exp . COMA exp RPAR
    (124) exp -> exp . PUNTO exp_native
    (125) expmath -> exp . MAS exp
    (126) expmath -> exp . MENOS exp
    (127) expmath -> exp . MULTIPLICACION exp
    (128) expmath -> exp . DIVISION exp
    (129) expmath -> exp . MODULO exp
    (133) expop -> exp . AND exp
    (134) expop -> exp . OR exp
    (137) exprel -> exp . IGUALI exp
    (138) exprel -> exp . DIF exp
    (139) exprel -> exp . MAYOR exp
    (140) exprel -> exp . MENOR exp
    (141) exprel -> exp . MAYORI exp
    (142) exprel -> exp . MENORI exp
    (136) expcast -> exp . AS tipo_var

    COMA            shift and go to state 333
    PUNTO           shift and go to state 86
    MAS             shift and go to state 87
    MENOS           shift and go to state 88
    MULTIPLICACION  shift and go to state 89
    DIVISION        shift and go to state 90
    MODULO          shift and go to state 91
    AND             shift and go to state 92
    OR              shift and go to state 93
    IGUALI          shift and go to state 94
    DIF             shift and go to state 95
    MAYOR           shift and go to state 96
    MENOR           shift and go to state 97
    MAYORI          shift and go to state 98
    MENORI          shift and go to state 99
    AS              shift and go to state 100


state 318

    (52) brazo -> lista_exp_brazos ARROW2 instruccion_match . COMA

    COMA            shift and go to state 334


state 319

    (53) brazo -> lista_exp_brazos ARROW2 statement . COMA
    (54) brazo -> lista_exp_brazos ARROW2 statement .

    COMA            shift and go to state 335
    RLLAV           reduce using rule 54 (brazo -> lista_exp_brazos ARROW2 statement .)
    LPAR            reduce using rule 54 (brazo -> lista_exp_brazos ARROW2 statement .)
    MENOS           reduce using rule 54 (brazo -> lista_exp_brazos ARROW2 statement .)
    AD              reduce using rule 54 (brazo -> lista_exp_brazos ARROW2 statement .)
    ID              reduce using rule 54 (brazo -> lista_exp_brazos ARROW2 statement .)
    LCOR            reduce using rule 54 (brazo -> lista_exp_brazos ARROW2 statement .)
    VEC             reduce using rule 54 (brazo -> lista_exp_brazos ARROW2 statement .)
    VECTOR          reduce using rule 54 (brazo -> lista_exp_brazos ARROW2 statement .)
    MUT             reduce using rule 54 (brazo -> lista_exp_brazos ARROW2 statement .)
    ANDSINGLE       reduce using rule 54 (brazo -> lista_exp_brazos ARROW2 statement .)
    I64             reduce using rule 54 (brazo -> lista_exp_brazos ARROW2 statement .)
    F64             reduce using rule 54 (brazo -> lista_exp_brazos ARROW2 statement .)
    ENTERO          reduce using rule 54 (brazo -> lista_exp_brazos ARROW2 statement .)
    DECIMAL         reduce using rule 54 (brazo -> lista_exp_brazos ARROW2 statement .)
    CADENA          reduce using rule 54 (brazo -> lista_exp_brazos ARROW2 statement .)
    BOOLEANO        reduce using rule 54 (brazo -> lista_exp_brazos ARROW2 statement .)
    CARACTER        reduce using rule 54 (brazo -> lista_exp_brazos ARROW2 statement .)
    IF              reduce using rule 54 (brazo -> lista_exp_brazos ARROW2 statement .)
    MATCH           reduce using rule 54 (brazo -> lista_exp_brazos ARROW2 statement .)
    LOOP            reduce using rule 54 (brazo -> lista_exp_brazos ARROW2 statement .)
    WHILE           reduce using rule 54 (brazo -> lista_exp_brazos ARROW2 statement .)
    FOR             reduce using rule 54 (brazo -> lista_exp_brazos ARROW2 statement .)


state 320

    (57) instruccion_match -> print .

    COMA            reduce using rule 57 (instruccion_match -> print .)


state 321

    (58) instruccion_match -> llamada .
    (121) exp -> llamada .

  ! reduce/reduce conflict for COMA resolved using rule 58 (instruccion_match -> llamada .)
    COMA            reduce using rule 58 (instruccion_match -> llamada .)
    PUNTO           reduce using rule 121 (exp -> llamada .)
    MAS             reduce using rule 121 (exp -> llamada .)
    MENOS           reduce using rule 121 (exp -> llamada .)
    MULTIPLICACION  reduce using rule 121 (exp -> llamada .)
    DIVISION        reduce using rule 121 (exp -> llamada .)
    MODULO          reduce using rule 121 (exp -> llamada .)
    AND             reduce using rule 121 (exp -> llamada .)
    OR              reduce using rule 121 (exp -> llamada .)
    IGUALI          reduce using rule 121 (exp -> llamada .)
    DIF             reduce using rule 121 (exp -> llamada .)
    MAYOR           reduce using rule 121 (exp -> llamada .)
    MENOR           reduce using rule 121 (exp -> llamada .)
    MAYORI          reduce using rule 121 (exp -> llamada .)
    MENORI          reduce using rule 121 (exp -> llamada .)
    AS              reduce using rule 121 (exp -> llamada .)

  ! COMA            [ reduce using rule 121 (exp -> llamada .) ]


state 322

    (59) instruccion_match -> asignacion .

    COMA            reduce using rule 59 (instruccion_match -> asignacion .)


state 323

    (60) instruccion_match -> sentencia .
    (122) exp -> sentencia .

  ! reduce/reduce conflict for COMA resolved using rule 60 (instruccion_match -> sentencia .)
    COMA            reduce using rule 60 (instruccion_match -> sentencia .)
    PUNTO           reduce using rule 122 (exp -> sentencia .)
    MAS             reduce using rule 122 (exp -> sentencia .)
    MENOS           reduce using rule 122 (exp -> sentencia .)
    MULTIPLICACION  reduce using rule 122 (exp -> sentencia .)
    DIVISION        reduce using rule 122 (exp -> sentencia .)
    MODULO          reduce using rule 122 (exp -> sentencia .)
    AND             reduce using rule 122 (exp -> sentencia .)
    OR              reduce using rule 122 (exp -> sentencia .)
    IGUALI          reduce using rule 122 (exp -> sentencia .)
    DIF             reduce using rule 122 (exp -> sentencia .)
    MAYOR           reduce using rule 122 (exp -> sentencia .)
    MENOR           reduce using rule 122 (exp -> sentencia .)
    MAYORI          reduce using rule 122 (exp -> sentencia .)
    MENORI          reduce using rule 122 (exp -> sentencia .)
    AS              reduce using rule 122 (exp -> sentencia .)

  ! COMA            [ reduce using rule 122 (exp -> sentencia .) ]


state 324

    (61) instruccion_match -> transferencia .

    COMA            reduce using rule 61 (instruccion_match -> transferencia .)


state 325

    (176) llamada -> ID . LPAR RPAR
    (177) llamada -> ID . LPAR lista_exp RPAR
    (84) asignacion -> ID . IGUAL auxexp
    (85) asignacion -> ID . lista_assign2 IGUAL auxexp
    (86) asignacion -> ID . lista_arr IGUAL auxexp
    (87) asignacion -> ID . lista_arr lista_assign2 IGUAL auxexp
    (175) lista_classtype -> ID .
    (152) exparr -> ID . lista_arr
    (96) auxacc -> ID .
    (88) lista_assign2 -> . lista_assign2 PUNTO ID
    (89) lista_assign2 -> . PUNTO ID
    (97) lista_arr -> . lista_arr LCOR auxexp RCOR
    (98) lista_arr -> . LCOR auxexp RCOR

  ! shift/reduce conflict for PUNTO resolved as shift
    LPAR            shift and go to state 107
    IGUAL           shift and go to state 22
    LLLAV           reduce using rule 175 (lista_classtype -> ID .)
    DPUNTOS         reduce using rule 175 (lista_classtype -> ID .)
    MAS             reduce using rule 96 (auxacc -> ID .)
    MENOS           reduce using rule 96 (auxacc -> ID .)
    MULTIPLICACION  reduce using rule 96 (auxacc -> ID .)
    DIVISION        reduce using rule 96 (auxacc -> ID .)
    MODULO          reduce using rule 96 (auxacc -> ID .)
    AND             reduce using rule 96 (auxacc -> ID .)
    OR              reduce using rule 96 (auxacc -> ID .)
    IGUALI          reduce using rule 96 (auxacc -> ID .)
    DIF             reduce using rule 96 (auxacc -> ID .)
    MAYOR           reduce using rule 96 (auxacc -> ID .)
    MENOR           reduce using rule 96 (auxacc -> ID .)
    MAYORI          reduce using rule 96 (auxacc -> ID .)
    MENORI          reduce using rule 96 (auxacc -> ID .)
    AS              reduce using rule 96 (auxacc -> ID .)
    COMA            reduce using rule 96 (auxacc -> ID .)
    PUNTO           shift and go to state 25
    LCOR            shift and go to state 26

  ! PUNTO           [ reduce using rule 96 (auxacc -> ID .) ]

    lista_assign2                  shift and go to state 23
    lista_arr                      shift and go to state 246

state 326

    (55) lista_exp_brazos -> lista_exp_brazos ORSINGLE exp .
    (124) exp -> exp . PUNTO exp_native
    (125) expmath -> exp . MAS exp
    (126) expmath -> exp . MENOS exp
    (127) expmath -> exp . MULTIPLICACION exp
    (128) expmath -> exp . DIVISION exp
    (129) expmath -> exp . MODULO exp
    (133) expop -> exp . AND exp
    (134) expop -> exp . OR exp
    (137) exprel -> exp . IGUALI exp
    (138) exprel -> exp . DIF exp
    (139) exprel -> exp . MAYOR exp
    (140) exprel -> exp . MENOR exp
    (141) exprel -> exp . MAYORI exp
    (142) exprel -> exp . MENORI exp
    (136) expcast -> exp . AS tipo_var

    ARROW2          reduce using rule 55 (lista_exp_brazos -> lista_exp_brazos ORSINGLE exp .)
    ORSINGLE        reduce using rule 55 (lista_exp_brazos -> lista_exp_brazos ORSINGLE exp .)
    PUNTO           shift and go to state 86
    MAS             shift and go to state 87
    MENOS           shift and go to state 88
    MULTIPLICACION  shift and go to state 89
    DIVISION        shift and go to state 90
    MODULO          shift and go to state 91
    AND             shift and go to state 92
    OR              shift and go to state 93
    IGUALI          shift and go to state 94
    DIF             shift and go to state 95
    MAYOR           shift and go to state 96
    MENOR           shift and go to state 97
    MAYORI          shift and go to state 98
    MENORI          shift and go to state 99
    AS              shift and go to state 100


state 327

    (65) foriterative -> exp PUNTO PUNTO . exp
    (110) exp -> . LPAR exp RPAR
    (111) exp -> . expmath
    (112) exp -> . expop
    (113) exp -> . exprel
    (114) exp -> . exparr
    (115) exp -> . newarray
    (116) exp -> . expvec
    (117) exp -> . exparam
    (118) exp -> . exppow
    (119) exp -> . expcast
    (120) exp -> . lista_acc
    (121) exp -> . llamada
    (122) exp -> . sentencia
    (123) exp -> . valores
    (124) exp -> . exp PUNTO exp_native
    (125) expmath -> . exp MAS exp
    (126) expmath -> . exp MENOS exp
    (127) expmath -> . exp MULTIPLICACION exp
    (128) expmath -> . exp DIVISION exp
    (129) expmath -> . exp MODULO exp
    (130) expmath -> . MENOS exp
    (133) expop -> . exp AND exp
    (134) expop -> . exp OR exp
    (135) expop -> . AD exp
    (137) exprel -> . exp IGUALI exp
    (138) exprel -> . exp DIF exp
    (139) exprel -> . exp MAYOR exp
    (140) exprel -> . exp MENOR exp
    (141) exprel -> . exp MAYORI exp
    (142) exprel -> . exp MENORI exp
    (152) exparr -> . ID lista_arr
    (155) newarray -> . LCOR lista_exp RCOR
    (156) newarray -> . LCOR auxexp PCOMA exp RCOR
    (153) expvec -> . VEC AD newarray
    (154) expvec -> . VECTOR DPUNTOS DPUNTOS exp_natarr
    (148) exparam -> . MUT ID
    (149) exparam -> . MUT valores
    (150) exparam -> . ANDSINGLE MUT ID
    (151) exparam -> . ANDSINGLE MUT valores
    (131) exppow -> . I64 DPUNTOS DPUNTOS POW LPAR exp COMA exp RPAR
    (132) exppow -> . F64 DPUNTOS DPUNTOS POWF LPAR exp COMA exp RPAR
    (136) expcast -> . exp AS tipo_var
    (92) lista_acc -> . lista_acc PUNTO ID
    (93) lista_acc -> . lista_acc PUNTO exp_native
    (94) lista_acc -> . auxacc
    (176) llamada -> . ID LPAR RPAR
    (177) llamada -> . ID LPAR lista_exp RPAR
    (37) sentencia -> . if
    (38) sentencia -> . match
    (39) sentencia -> . loop
    (40) sentencia -> . while
    (41) sentencia -> . for
    (157) valores -> . ENTERO
    (158) valores -> . DECIMAL
    (159) valores -> . CADENA
    (160) valores -> . BOOLEANO
    (161) valores -> . CARACTER
    (95) auxacc -> . exparr
    (96) auxacc -> . ID
    (42) if -> . IF exp statement else
    (47) match -> . MATCH exp match_statement
    (62) loop -> . LOOP statement
    (63) while -> . WHILE exp statement
    (64) for -> . FOR ID IN foriterative statement

    LPAR            shift and go to state 29
    MENOS           shift and go to state 43
    AD              shift and go to state 44
    ID              shift and go to state 45
    LCOR            shift and go to state 46
    VEC             shift and go to state 47
    VECTOR          shift and go to state 48
    MUT             shift and go to state 49
    ANDSINGLE       shift and go to state 50
    I64             shift and go to state 51
    F64             shift and go to state 52
    ENTERO          shift and go to state 59
    DECIMAL         shift and go to state 60
    CADENA          shift and go to state 61
    BOOLEANO        shift and go to state 62
    CARACTER        shift and go to state 63
    IF              shift and go to state 12
    MATCH           shift and go to state 64
    LOOP            shift and go to state 65
    WHILE           shift and go to state 13
    FOR             shift and go to state 66

    exp                            shift and go to state 336
    expmath                        shift and go to state 30
    expop                          shift and go to state 31
    exprel                         shift and go to state 32
    exparr                         shift and go to state 33
    newarray                       shift and go to state 34
    expvec                         shift and go to state 35
    exparam                        shift and go to state 36
    exppow                         shift and go to state 37
    expcast                        shift and go to state 38
    lista_acc                      shift and go to state 39
    llamada                        shift and go to state 40
    sentencia                      shift and go to state 41
    valores                        shift and go to state 42
    auxacc                         shift and go to state 53
    if                             shift and go to state 54
    match                          shift and go to state 55
    loop                           shift and go to state 56
    while                          shift and go to state 57
    for                            shift and go to state 58

state 328

    (107) lista_arr2 -> LCOR tipo_var PCOMA exp RCOR .

    IGUAL           reduce using rule 107 (lista_arr2 -> LCOR tipo_var PCOMA exp RCOR .)
    PUNTO           reduce using rule 107 (lista_arr2 -> LCOR tipo_var PCOMA exp RCOR .)
    MAS             reduce using rule 107 (lista_arr2 -> LCOR tipo_var PCOMA exp RCOR .)
    MENOS           reduce using rule 107 (lista_arr2 -> LCOR tipo_var PCOMA exp RCOR .)
    MULTIPLICACION  reduce using rule 107 (lista_arr2 -> LCOR tipo_var PCOMA exp RCOR .)
    DIVISION        reduce using rule 107 (lista_arr2 -> LCOR tipo_var PCOMA exp RCOR .)
    MODULO          reduce using rule 107 (lista_arr2 -> LCOR tipo_var PCOMA exp RCOR .)
    AND             reduce using rule 107 (lista_arr2 -> LCOR tipo_var PCOMA exp RCOR .)
    OR              reduce using rule 107 (lista_arr2 -> LCOR tipo_var PCOMA exp RCOR .)
    IGUALI          reduce using rule 107 (lista_arr2 -> LCOR tipo_var PCOMA exp RCOR .)
    DIF             reduce using rule 107 (lista_arr2 -> LCOR tipo_var PCOMA exp RCOR .)
    MAYOR           reduce using rule 107 (lista_arr2 -> LCOR tipo_var PCOMA exp RCOR .)
    MENOR           reduce using rule 107 (lista_arr2 -> LCOR tipo_var PCOMA exp RCOR .)
    MAYORI          reduce using rule 107 (lista_arr2 -> LCOR tipo_var PCOMA exp RCOR .)
    MENORI          reduce using rule 107 (lista_arr2 -> LCOR tipo_var PCOMA exp RCOR .)
    AS              reduce using rule 107 (lista_arr2 -> LCOR tipo_var PCOMA exp RCOR .)
    LLLAV           reduce using rule 107 (lista_arr2 -> LCOR tipo_var PCOMA exp RCOR .)
    PCOMA           reduce using rule 107 (lista_arr2 -> LCOR tipo_var PCOMA exp RCOR .)
    COMA            reduce using rule 107 (lista_arr2 -> LCOR tipo_var PCOMA exp RCOR .)
    RCOR            reduce using rule 107 (lista_arr2 -> LCOR tipo_var PCOMA exp RCOR .)
    RPAR            reduce using rule 107 (lista_arr2 -> LCOR tipo_var PCOMA exp RCOR .)
    RLLAV           reduce using rule 107 (lista_arr2 -> LCOR tipo_var PCOMA exp RCOR .)
    ID              reduce using rule 107 (lista_arr2 -> LCOR tipo_var PCOMA exp RCOR .)
    PRINT           reduce using rule 107 (lista_arr2 -> LCOR tipo_var PCOMA exp RCOR .)
    LET             reduce using rule 107 (lista_arr2 -> LCOR tipo_var PCOMA exp RCOR .)
    CONTINUE        reduce using rule 107 (lista_arr2 -> LCOR tipo_var PCOMA exp RCOR .)
    BREAK           reduce using rule 107 (lista_arr2 -> LCOR tipo_var PCOMA exp RCOR .)
    RETURN          reduce using rule 107 (lista_arr2 -> LCOR tipo_var PCOMA exp RCOR .)
    IF              reduce using rule 107 (lista_arr2 -> LCOR tipo_var PCOMA exp RCOR .)
    MATCH           reduce using rule 107 (lista_arr2 -> LCOR tipo_var PCOMA exp RCOR .)
    LOOP            reduce using rule 107 (lista_arr2 -> LCOR tipo_var PCOMA exp RCOR .)
    WHILE           reduce using rule 107 (lista_arr2 -> LCOR tipo_var PCOMA exp RCOR .)
    FOR             reduce using rule 107 (lista_arr2 -> LCOR tipo_var PCOMA exp RCOR .)
    LPAR            reduce using rule 107 (lista_arr2 -> LCOR tipo_var PCOMA exp RCOR .)
    AD              reduce using rule 107 (lista_arr2 -> LCOR tipo_var PCOMA exp RCOR .)
    LCOR            reduce using rule 107 (lista_arr2 -> LCOR tipo_var PCOMA exp RCOR .)
    VEC             reduce using rule 107 (lista_arr2 -> LCOR tipo_var PCOMA exp RCOR .)
    VECTOR          reduce using rule 107 (lista_arr2 -> LCOR tipo_var PCOMA exp RCOR .)
    MUT             reduce using rule 107 (lista_arr2 -> LCOR tipo_var PCOMA exp RCOR .)
    ANDSINGLE       reduce using rule 107 (lista_arr2 -> LCOR tipo_var PCOMA exp RCOR .)
    I64             reduce using rule 107 (lista_arr2 -> LCOR tipo_var PCOMA exp RCOR .)
    F64             reduce using rule 107 (lista_arr2 -> LCOR tipo_var PCOMA exp RCOR .)
    ENTERO          reduce using rule 107 (lista_arr2 -> LCOR tipo_var PCOMA exp RCOR .)
    DECIMAL         reduce using rule 107 (lista_arr2 -> LCOR tipo_var PCOMA exp RCOR .)
    CADENA          reduce using rule 107 (lista_arr2 -> LCOR tipo_var PCOMA exp RCOR .)
    BOOLEANO        reduce using rule 107 (lista_arr2 -> LCOR tipo_var PCOMA exp RCOR .)
    CARACTER        reduce using rule 107 (lista_arr2 -> LCOR tipo_var PCOMA exp RCOR .)
    ARROW2          reduce using rule 107 (lista_arr2 -> LCOR tipo_var PCOMA exp RCOR .)
    ORSINGLE        reduce using rule 107 (lista_arr2 -> LCOR tipo_var PCOMA exp RCOR .)


state 329

    (146) lista_att -> lista_att COMA ID DPUNTOS . auxexp
    (108) auxexp -> . expstruct
    (109) auxexp -> . exp
    (143) expstruct -> . lista_classtype LLLAV lista_att RLLAV
    (144) expstruct -> . lista_classtype LLLAV RLLAV
    (145) expstruct -> . lista_classtype DPUNTOS DPUNTOS llamada
    (110) exp -> . LPAR exp RPAR
    (111) exp -> . expmath
    (112) exp -> . expop
    (113) exp -> . exprel
    (114) exp -> . exparr
    (115) exp -> . newarray
    (116) exp -> . expvec
    (117) exp -> . exparam
    (118) exp -> . exppow
    (119) exp -> . expcast
    (120) exp -> . lista_acc
    (121) exp -> . llamada
    (122) exp -> . sentencia
    (123) exp -> . valores
    (124) exp -> . exp PUNTO exp_native
    (174) lista_classtype -> . lista_classtype DPUNTOS DPUNTOS ID
    (175) lista_classtype -> . ID
    (125) expmath -> . exp MAS exp
    (126) expmath -> . exp MENOS exp
    (127) expmath -> . exp MULTIPLICACION exp
    (128) expmath -> . exp DIVISION exp
    (129) expmath -> . exp MODULO exp
    (130) expmath -> . MENOS exp
    (133) expop -> . exp AND exp
    (134) expop -> . exp OR exp
    (135) expop -> . AD exp
    (137) exprel -> . exp IGUALI exp
    (138) exprel -> . exp DIF exp
    (139) exprel -> . exp MAYOR exp
    (140) exprel -> . exp MENOR exp
    (141) exprel -> . exp MAYORI exp
    (142) exprel -> . exp MENORI exp
    (152) exparr -> . ID lista_arr
    (155) newarray -> . LCOR lista_exp RCOR
    (156) newarray -> . LCOR auxexp PCOMA exp RCOR
    (153) expvec -> . VEC AD newarray
    (154) expvec -> . VECTOR DPUNTOS DPUNTOS exp_natarr
    (148) exparam -> . MUT ID
    (149) exparam -> . MUT valores
    (150) exparam -> . ANDSINGLE MUT ID
    (151) exparam -> . ANDSINGLE MUT valores
    (131) exppow -> . I64 DPUNTOS DPUNTOS POW LPAR exp COMA exp RPAR
    (132) exppow -> . F64 DPUNTOS DPUNTOS POWF LPAR exp COMA exp RPAR
    (136) expcast -> . exp AS tipo_var
    (92) lista_acc -> . lista_acc PUNTO ID
    (93) lista_acc -> . lista_acc PUNTO exp_native
    (94) lista_acc -> . auxacc
    (176) llamada -> . ID LPAR RPAR
    (177) llamada -> . ID LPAR lista_exp RPAR
    (37) sentencia -> . if
    (38) sentencia -> . match
    (39) sentencia -> . loop
    (40) sentencia -> . while
    (41) sentencia -> . for
    (157) valores -> . ENTERO
    (158) valores -> . DECIMAL
    (159) valores -> . CADENA
    (160) valores -> . BOOLEANO
    (161) valores -> . CARACTER
    (95) auxacc -> . exparr
    (96) auxacc -> . ID
    (42) if -> . IF exp statement else
    (47) match -> . MATCH exp match_statement
    (62) loop -> . LOOP statement
    (63) while -> . WHILE exp statement
    (64) for -> . FOR ID IN foriterative statement

    LPAR            shift and go to state 29
    ID              shift and go to state 72
    MENOS           shift and go to state 43
    AD              shift and go to state 44
    LCOR            shift and go to state 46
    VEC             shift and go to state 47
    VECTOR          shift and go to state 48
    MUT             shift and go to state 49
    ANDSINGLE       shift and go to state 50
    I64             shift and go to state 51
    F64             shift and go to state 52
    ENTERO          shift and go to state 59
    DECIMAL         shift and go to state 60
    CADENA          shift and go to state 61
    BOOLEANO        shift and go to state 62
    CARACTER        shift and go to state 63
    IF              shift and go to state 12
    MATCH           shift and go to state 64
    LOOP            shift and go to state 65
    WHILE           shift and go to state 13
    FOR             shift and go to state 66

    auxexp                         shift and go to state 337
    expstruct                      shift and go to state 74
    exp                            shift and go to state 75
    lista_classtype                shift and go to state 76
    llamada                        shift and go to state 40
    expmath                        shift and go to state 30
    expop                          shift and go to state 31
    exprel                         shift and go to state 32
    exparr                         shift and go to state 33
    newarray                       shift and go to state 34
    expvec                         shift and go to state 35
    exparam                        shift and go to state 36
    exppow                         shift and go to state 37
    expcast                        shift and go to state 38
    lista_acc                      shift and go to state 39
    sentencia                      shift and go to state 41
    valores                        shift and go to state 42
    auxacc                         shift and go to state 53
    if                             shift and go to state 54
    match                          shift and go to state 55
    loop                           shift and go to state 56
    while                          shift and go to state 57
    for                            shift and go to state 58

state 330

    (184) exp_native -> CONTAINS LPAR ANDSINGLE auxexp RPAR .

    PUNTO           reduce using rule 184 (exp_native -> CONTAINS LPAR ANDSINGLE auxexp RPAR .)
    MAS             reduce using rule 184 (exp_native -> CONTAINS LPAR ANDSINGLE auxexp RPAR .)
    MENOS           reduce using rule 184 (exp_native -> CONTAINS LPAR ANDSINGLE auxexp RPAR .)
    MULTIPLICACION  reduce using rule 184 (exp_native -> CONTAINS LPAR ANDSINGLE auxexp RPAR .)
    DIVISION        reduce using rule 184 (exp_native -> CONTAINS LPAR ANDSINGLE auxexp RPAR .)
    MODULO          reduce using rule 184 (exp_native -> CONTAINS LPAR ANDSINGLE auxexp RPAR .)
    AND             reduce using rule 184 (exp_native -> CONTAINS LPAR ANDSINGLE auxexp RPAR .)
    OR              reduce using rule 184 (exp_native -> CONTAINS LPAR ANDSINGLE auxexp RPAR .)
    IGUALI          reduce using rule 184 (exp_native -> CONTAINS LPAR ANDSINGLE auxexp RPAR .)
    DIF             reduce using rule 184 (exp_native -> CONTAINS LPAR ANDSINGLE auxexp RPAR .)
    MAYOR           reduce using rule 184 (exp_native -> CONTAINS LPAR ANDSINGLE auxexp RPAR .)
    MENOR           reduce using rule 184 (exp_native -> CONTAINS LPAR ANDSINGLE auxexp RPAR .)
    MAYORI          reduce using rule 184 (exp_native -> CONTAINS LPAR ANDSINGLE auxexp RPAR .)
    MENORI          reduce using rule 184 (exp_native -> CONTAINS LPAR ANDSINGLE auxexp RPAR .)
    AS              reduce using rule 184 (exp_native -> CONTAINS LPAR ANDSINGLE auxexp RPAR .)
    LLLAV           reduce using rule 184 (exp_native -> CONTAINS LPAR ANDSINGLE auxexp RPAR .)
    PCOMA           reduce using rule 184 (exp_native -> CONTAINS LPAR ANDSINGLE auxexp RPAR .)
    COMA            reduce using rule 184 (exp_native -> CONTAINS LPAR ANDSINGLE auxexp RPAR .)
    RCOR            reduce using rule 184 (exp_native -> CONTAINS LPAR ANDSINGLE auxexp RPAR .)
    RPAR            reduce using rule 184 (exp_native -> CONTAINS LPAR ANDSINGLE auxexp RPAR .)
    RLLAV           reduce using rule 184 (exp_native -> CONTAINS LPAR ANDSINGLE auxexp RPAR .)
    ID              reduce using rule 184 (exp_native -> CONTAINS LPAR ANDSINGLE auxexp RPAR .)
    PRINT           reduce using rule 184 (exp_native -> CONTAINS LPAR ANDSINGLE auxexp RPAR .)
    LET             reduce using rule 184 (exp_native -> CONTAINS LPAR ANDSINGLE auxexp RPAR .)
    CONTINUE        reduce using rule 184 (exp_native -> CONTAINS LPAR ANDSINGLE auxexp RPAR .)
    BREAK           reduce using rule 184 (exp_native -> CONTAINS LPAR ANDSINGLE auxexp RPAR .)
    RETURN          reduce using rule 184 (exp_native -> CONTAINS LPAR ANDSINGLE auxexp RPAR .)
    IF              reduce using rule 184 (exp_native -> CONTAINS LPAR ANDSINGLE auxexp RPAR .)
    MATCH           reduce using rule 184 (exp_native -> CONTAINS LPAR ANDSINGLE auxexp RPAR .)
    LOOP            reduce using rule 184 (exp_native -> CONTAINS LPAR ANDSINGLE auxexp RPAR .)
    WHILE           reduce using rule 184 (exp_native -> CONTAINS LPAR ANDSINGLE auxexp RPAR .)
    FOR             reduce using rule 184 (exp_native -> CONTAINS LPAR ANDSINGLE auxexp RPAR .)
    LPAR            reduce using rule 184 (exp_native -> CONTAINS LPAR ANDSINGLE auxexp RPAR .)
    AD              reduce using rule 184 (exp_native -> CONTAINS LPAR ANDSINGLE auxexp RPAR .)
    LCOR            reduce using rule 184 (exp_native -> CONTAINS LPAR ANDSINGLE auxexp RPAR .)
    VEC             reduce using rule 184 (exp_native -> CONTAINS LPAR ANDSINGLE auxexp RPAR .)
    VECTOR          reduce using rule 184 (exp_native -> CONTAINS LPAR ANDSINGLE auxexp RPAR .)
    MUT             reduce using rule 184 (exp_native -> CONTAINS LPAR ANDSINGLE auxexp RPAR .)
    ANDSINGLE       reduce using rule 184 (exp_native -> CONTAINS LPAR ANDSINGLE auxexp RPAR .)
    I64             reduce using rule 184 (exp_native -> CONTAINS LPAR ANDSINGLE auxexp RPAR .)
    F64             reduce using rule 184 (exp_native -> CONTAINS LPAR ANDSINGLE auxexp RPAR .)
    ENTERO          reduce using rule 184 (exp_native -> CONTAINS LPAR ANDSINGLE auxexp RPAR .)
    DECIMAL         reduce using rule 184 (exp_native -> CONTAINS LPAR ANDSINGLE auxexp RPAR .)
    CADENA          reduce using rule 184 (exp_native -> CONTAINS LPAR ANDSINGLE auxexp RPAR .)
    BOOLEANO        reduce using rule 184 (exp_native -> CONTAINS LPAR ANDSINGLE auxexp RPAR .)
    CARACTER        reduce using rule 184 (exp_native -> CONTAINS LPAR ANDSINGLE auxexp RPAR .)
    ARROW2          reduce using rule 184 (exp_native -> CONTAINS LPAR ANDSINGLE auxexp RPAR .)
    ORSINGLE        reduce using rule 184 (exp_native -> CONTAINS LPAR ANDSINGLE auxexp RPAR .)


state 331

    (191) exp_natarr -> WITHCAPACITY LPAR exp RPAR .

    PUNTO           reduce using rule 191 (exp_natarr -> WITHCAPACITY LPAR exp RPAR .)
    MAS             reduce using rule 191 (exp_natarr -> WITHCAPACITY LPAR exp RPAR .)
    MENOS           reduce using rule 191 (exp_natarr -> WITHCAPACITY LPAR exp RPAR .)
    MULTIPLICACION  reduce using rule 191 (exp_natarr -> WITHCAPACITY LPAR exp RPAR .)
    DIVISION        reduce using rule 191 (exp_natarr -> WITHCAPACITY LPAR exp RPAR .)
    MODULO          reduce using rule 191 (exp_natarr -> WITHCAPACITY LPAR exp RPAR .)
    AND             reduce using rule 191 (exp_natarr -> WITHCAPACITY LPAR exp RPAR .)
    OR              reduce using rule 191 (exp_natarr -> WITHCAPACITY LPAR exp RPAR .)
    IGUALI          reduce using rule 191 (exp_natarr -> WITHCAPACITY LPAR exp RPAR .)
    DIF             reduce using rule 191 (exp_natarr -> WITHCAPACITY LPAR exp RPAR .)
    MAYOR           reduce using rule 191 (exp_natarr -> WITHCAPACITY LPAR exp RPAR .)
    MENOR           reduce using rule 191 (exp_natarr -> WITHCAPACITY LPAR exp RPAR .)
    MAYORI          reduce using rule 191 (exp_natarr -> WITHCAPACITY LPAR exp RPAR .)
    MENORI          reduce using rule 191 (exp_natarr -> WITHCAPACITY LPAR exp RPAR .)
    AS              reduce using rule 191 (exp_natarr -> WITHCAPACITY LPAR exp RPAR .)
    LLLAV           reduce using rule 191 (exp_natarr -> WITHCAPACITY LPAR exp RPAR .)
    PCOMA           reduce using rule 191 (exp_natarr -> WITHCAPACITY LPAR exp RPAR .)
    COMA            reduce using rule 191 (exp_natarr -> WITHCAPACITY LPAR exp RPAR .)
    RCOR            reduce using rule 191 (exp_natarr -> WITHCAPACITY LPAR exp RPAR .)
    RPAR            reduce using rule 191 (exp_natarr -> WITHCAPACITY LPAR exp RPAR .)
    RLLAV           reduce using rule 191 (exp_natarr -> WITHCAPACITY LPAR exp RPAR .)
    ID              reduce using rule 191 (exp_natarr -> WITHCAPACITY LPAR exp RPAR .)
    PRINT           reduce using rule 191 (exp_natarr -> WITHCAPACITY LPAR exp RPAR .)
    LET             reduce using rule 191 (exp_natarr -> WITHCAPACITY LPAR exp RPAR .)
    CONTINUE        reduce using rule 191 (exp_natarr -> WITHCAPACITY LPAR exp RPAR .)
    BREAK           reduce using rule 191 (exp_natarr -> WITHCAPACITY LPAR exp RPAR .)
    RETURN          reduce using rule 191 (exp_natarr -> WITHCAPACITY LPAR exp RPAR .)
    IF              reduce using rule 191 (exp_natarr -> WITHCAPACITY LPAR exp RPAR .)
    MATCH           reduce using rule 191 (exp_natarr -> WITHCAPACITY LPAR exp RPAR .)
    LOOP            reduce using rule 191 (exp_natarr -> WITHCAPACITY LPAR exp RPAR .)
    WHILE           reduce using rule 191 (exp_natarr -> WITHCAPACITY LPAR exp RPAR .)
    FOR             reduce using rule 191 (exp_natarr -> WITHCAPACITY LPAR exp RPAR .)
    LPAR            reduce using rule 191 (exp_natarr -> WITHCAPACITY LPAR exp RPAR .)
    AD              reduce using rule 191 (exp_natarr -> WITHCAPACITY LPAR exp RPAR .)
    LCOR            reduce using rule 191 (exp_natarr -> WITHCAPACITY LPAR exp RPAR .)
    VEC             reduce using rule 191 (exp_natarr -> WITHCAPACITY LPAR exp RPAR .)
    VECTOR          reduce using rule 191 (exp_natarr -> WITHCAPACITY LPAR exp RPAR .)
    MUT             reduce using rule 191 (exp_natarr -> WITHCAPACITY LPAR exp RPAR .)
    ANDSINGLE       reduce using rule 191 (exp_natarr -> WITHCAPACITY LPAR exp RPAR .)
    I64             reduce using rule 191 (exp_natarr -> WITHCAPACITY LPAR exp RPAR .)
    F64             reduce using rule 191 (exp_natarr -> WITHCAPACITY LPAR exp RPAR .)
    ENTERO          reduce using rule 191 (exp_natarr -> WITHCAPACITY LPAR exp RPAR .)
    DECIMAL         reduce using rule 191 (exp_natarr -> WITHCAPACITY LPAR exp RPAR .)
    CADENA          reduce using rule 191 (exp_natarr -> WITHCAPACITY LPAR exp RPAR .)
    BOOLEANO        reduce using rule 191 (exp_natarr -> WITHCAPACITY LPAR exp RPAR .)
    CARACTER        reduce using rule 191 (exp_natarr -> WITHCAPACITY LPAR exp RPAR .)
    ARROW2          reduce using rule 191 (exp_natarr -> WITHCAPACITY LPAR exp RPAR .)
    ORSINGLE        reduce using rule 191 (exp_natarr -> WITHCAPACITY LPAR exp RPAR .)


state 332

    (131) exppow -> I64 DPUNTOS DPUNTOS POW LPAR exp COMA . exp RPAR
    (110) exp -> . LPAR exp RPAR
    (111) exp -> . expmath
    (112) exp -> . expop
    (113) exp -> . exprel
    (114) exp -> . exparr
    (115) exp -> . newarray
    (116) exp -> . expvec
    (117) exp -> . exparam
    (118) exp -> . exppow
    (119) exp -> . expcast
    (120) exp -> . lista_acc
    (121) exp -> . llamada
    (122) exp -> . sentencia
    (123) exp -> . valores
    (124) exp -> . exp PUNTO exp_native
    (125) expmath -> . exp MAS exp
    (126) expmath -> . exp MENOS exp
    (127) expmath -> . exp MULTIPLICACION exp
    (128) expmath -> . exp DIVISION exp
    (129) expmath -> . exp MODULO exp
    (130) expmath -> . MENOS exp
    (133) expop -> . exp AND exp
    (134) expop -> . exp OR exp
    (135) expop -> . AD exp
    (137) exprel -> . exp IGUALI exp
    (138) exprel -> . exp DIF exp
    (139) exprel -> . exp MAYOR exp
    (140) exprel -> . exp MENOR exp
    (141) exprel -> . exp MAYORI exp
    (142) exprel -> . exp MENORI exp
    (152) exparr -> . ID lista_arr
    (155) newarray -> . LCOR lista_exp RCOR
    (156) newarray -> . LCOR auxexp PCOMA exp RCOR
    (153) expvec -> . VEC AD newarray
    (154) expvec -> . VECTOR DPUNTOS DPUNTOS exp_natarr
    (148) exparam -> . MUT ID
    (149) exparam -> . MUT valores
    (150) exparam -> . ANDSINGLE MUT ID
    (151) exparam -> . ANDSINGLE MUT valores
    (131) exppow -> . I64 DPUNTOS DPUNTOS POW LPAR exp COMA exp RPAR
    (132) exppow -> . F64 DPUNTOS DPUNTOS POWF LPAR exp COMA exp RPAR
    (136) expcast -> . exp AS tipo_var
    (92) lista_acc -> . lista_acc PUNTO ID
    (93) lista_acc -> . lista_acc PUNTO exp_native
    (94) lista_acc -> . auxacc
    (176) llamada -> . ID LPAR RPAR
    (177) llamada -> . ID LPAR lista_exp RPAR
    (37) sentencia -> . if
    (38) sentencia -> . match
    (39) sentencia -> . loop
    (40) sentencia -> . while
    (41) sentencia -> . for
    (157) valores -> . ENTERO
    (158) valores -> . DECIMAL
    (159) valores -> . CADENA
    (160) valores -> . BOOLEANO
    (161) valores -> . CARACTER
    (95) auxacc -> . exparr
    (96) auxacc -> . ID
    (42) if -> . IF exp statement else
    (47) match -> . MATCH exp match_statement
    (62) loop -> . LOOP statement
    (63) while -> . WHILE exp statement
    (64) for -> . FOR ID IN foriterative statement

    LPAR            shift and go to state 29
    MENOS           shift and go to state 43
    AD              shift and go to state 44
    ID              shift and go to state 45
    LCOR            shift and go to state 46
    VEC             shift and go to state 47
    VECTOR          shift and go to state 48
    MUT             shift and go to state 49
    ANDSINGLE       shift and go to state 50
    I64             shift and go to state 51
    F64             shift and go to state 52
    ENTERO          shift and go to state 59
    DECIMAL         shift and go to state 60
    CADENA          shift and go to state 61
    BOOLEANO        shift and go to state 62
    CARACTER        shift and go to state 63
    IF              shift and go to state 12
    MATCH           shift and go to state 64
    LOOP            shift and go to state 65
    WHILE           shift and go to state 13
    FOR             shift and go to state 66

    exp                            shift and go to state 338
    expmath                        shift and go to state 30
    expop                          shift and go to state 31
    exprel                         shift and go to state 32
    exparr                         shift and go to state 33
    newarray                       shift and go to state 34
    expvec                         shift and go to state 35
    exparam                        shift and go to state 36
    exppow                         shift and go to state 37
    expcast                        shift and go to state 38
    lista_acc                      shift and go to state 39
    llamada                        shift and go to state 40
    sentencia                      shift and go to state 41
    valores                        shift and go to state 42
    auxacc                         shift and go to state 53
    if                             shift and go to state 54
    match                          shift and go to state 55
    loop                           shift and go to state 56
    while                          shift and go to state 57
    for                            shift and go to state 58

state 333

    (132) exppow -> F64 DPUNTOS DPUNTOS POWF LPAR exp COMA . exp RPAR
    (110) exp -> . LPAR exp RPAR
    (111) exp -> . expmath
    (112) exp -> . expop
    (113) exp -> . exprel
    (114) exp -> . exparr
    (115) exp -> . newarray
    (116) exp -> . expvec
    (117) exp -> . exparam
    (118) exp -> . exppow
    (119) exp -> . expcast
    (120) exp -> . lista_acc
    (121) exp -> . llamada
    (122) exp -> . sentencia
    (123) exp -> . valores
    (124) exp -> . exp PUNTO exp_native
    (125) expmath -> . exp MAS exp
    (126) expmath -> . exp MENOS exp
    (127) expmath -> . exp MULTIPLICACION exp
    (128) expmath -> . exp DIVISION exp
    (129) expmath -> . exp MODULO exp
    (130) expmath -> . MENOS exp
    (133) expop -> . exp AND exp
    (134) expop -> . exp OR exp
    (135) expop -> . AD exp
    (137) exprel -> . exp IGUALI exp
    (138) exprel -> . exp DIF exp
    (139) exprel -> . exp MAYOR exp
    (140) exprel -> . exp MENOR exp
    (141) exprel -> . exp MAYORI exp
    (142) exprel -> . exp MENORI exp
    (152) exparr -> . ID lista_arr
    (155) newarray -> . LCOR lista_exp RCOR
    (156) newarray -> . LCOR auxexp PCOMA exp RCOR
    (153) expvec -> . VEC AD newarray
    (154) expvec -> . VECTOR DPUNTOS DPUNTOS exp_natarr
    (148) exparam -> . MUT ID
    (149) exparam -> . MUT valores
    (150) exparam -> . ANDSINGLE MUT ID
    (151) exparam -> . ANDSINGLE MUT valores
    (131) exppow -> . I64 DPUNTOS DPUNTOS POW LPAR exp COMA exp RPAR
    (132) exppow -> . F64 DPUNTOS DPUNTOS POWF LPAR exp COMA exp RPAR
    (136) expcast -> . exp AS tipo_var
    (92) lista_acc -> . lista_acc PUNTO ID
    (93) lista_acc -> . lista_acc PUNTO exp_native
    (94) lista_acc -> . auxacc
    (176) llamada -> . ID LPAR RPAR
    (177) llamada -> . ID LPAR lista_exp RPAR
    (37) sentencia -> . if
    (38) sentencia -> . match
    (39) sentencia -> . loop
    (40) sentencia -> . while
    (41) sentencia -> . for
    (157) valores -> . ENTERO
    (158) valores -> . DECIMAL
    (159) valores -> . CADENA
    (160) valores -> . BOOLEANO
    (161) valores -> . CARACTER
    (95) auxacc -> . exparr
    (96) auxacc -> . ID
    (42) if -> . IF exp statement else
    (47) match -> . MATCH exp match_statement
    (62) loop -> . LOOP statement
    (63) while -> . WHILE exp statement
    (64) for -> . FOR ID IN foriterative statement

    LPAR            shift and go to state 29
    MENOS           shift and go to state 43
    AD              shift and go to state 44
    ID              shift and go to state 45
    LCOR            shift and go to state 46
    VEC             shift and go to state 47
    VECTOR          shift and go to state 48
    MUT             shift and go to state 49
    ANDSINGLE       shift and go to state 50
    I64             shift and go to state 51
    F64             shift and go to state 52
    ENTERO          shift and go to state 59
    DECIMAL         shift and go to state 60
    CADENA          shift and go to state 61
    BOOLEANO        shift and go to state 62
    CARACTER        shift and go to state 63
    IF              shift and go to state 12
    MATCH           shift and go to state 64
    LOOP            shift and go to state 65
    WHILE           shift and go to state 13
    FOR             shift and go to state 66

    exp                            shift and go to state 339
    expmath                        shift and go to state 30
    expop                          shift and go to state 31
    exprel                         shift and go to state 32
    exparr                         shift and go to state 33
    newarray                       shift and go to state 34
    expvec                         shift and go to state 35
    exparam                        shift and go to state 36
    exppow                         shift and go to state 37
    expcast                        shift and go to state 38
    lista_acc                      shift and go to state 39
    llamada                        shift and go to state 40
    sentencia                      shift and go to state 41
    valores                        shift and go to state 42
    auxacc                         shift and go to state 53
    if                             shift and go to state 54
    match                          shift and go to state 55
    loop                           shift and go to state 56
    while                          shift and go to state 57
    for                            shift and go to state 58

state 334

    (52) brazo -> lista_exp_brazos ARROW2 instruccion_match COMA .

    RLLAV           reduce using rule 52 (brazo -> lista_exp_brazos ARROW2 instruccion_match COMA .)
    LPAR            reduce using rule 52 (brazo -> lista_exp_brazos ARROW2 instruccion_match COMA .)
    MENOS           reduce using rule 52 (brazo -> lista_exp_brazos ARROW2 instruccion_match COMA .)
    AD              reduce using rule 52 (brazo -> lista_exp_brazos ARROW2 instruccion_match COMA .)
    ID              reduce using rule 52 (brazo -> lista_exp_brazos ARROW2 instruccion_match COMA .)
    LCOR            reduce using rule 52 (brazo -> lista_exp_brazos ARROW2 instruccion_match COMA .)
    VEC             reduce using rule 52 (brazo -> lista_exp_brazos ARROW2 instruccion_match COMA .)
    VECTOR          reduce using rule 52 (brazo -> lista_exp_brazos ARROW2 instruccion_match COMA .)
    MUT             reduce using rule 52 (brazo -> lista_exp_brazos ARROW2 instruccion_match COMA .)
    ANDSINGLE       reduce using rule 52 (brazo -> lista_exp_brazos ARROW2 instruccion_match COMA .)
    I64             reduce using rule 52 (brazo -> lista_exp_brazos ARROW2 instruccion_match COMA .)
    F64             reduce using rule 52 (brazo -> lista_exp_brazos ARROW2 instruccion_match COMA .)
    ENTERO          reduce using rule 52 (brazo -> lista_exp_brazos ARROW2 instruccion_match COMA .)
    DECIMAL         reduce using rule 52 (brazo -> lista_exp_brazos ARROW2 instruccion_match COMA .)
    CADENA          reduce using rule 52 (brazo -> lista_exp_brazos ARROW2 instruccion_match COMA .)
    BOOLEANO        reduce using rule 52 (brazo -> lista_exp_brazos ARROW2 instruccion_match COMA .)
    CARACTER        reduce using rule 52 (brazo -> lista_exp_brazos ARROW2 instruccion_match COMA .)
    IF              reduce using rule 52 (brazo -> lista_exp_brazos ARROW2 instruccion_match COMA .)
    MATCH           reduce using rule 52 (brazo -> lista_exp_brazos ARROW2 instruccion_match COMA .)
    LOOP            reduce using rule 52 (brazo -> lista_exp_brazos ARROW2 instruccion_match COMA .)
    WHILE           reduce using rule 52 (brazo -> lista_exp_brazos ARROW2 instruccion_match COMA .)
    FOR             reduce using rule 52 (brazo -> lista_exp_brazos ARROW2 instruccion_match COMA .)


state 335

    (53) brazo -> lista_exp_brazos ARROW2 statement COMA .

    RLLAV           reduce using rule 53 (brazo -> lista_exp_brazos ARROW2 statement COMA .)
    LPAR            reduce using rule 53 (brazo -> lista_exp_brazos ARROW2 statement COMA .)
    MENOS           reduce using rule 53 (brazo -> lista_exp_brazos ARROW2 statement COMA .)
    AD              reduce using rule 53 (brazo -> lista_exp_brazos ARROW2 statement COMA .)
    ID              reduce using rule 53 (brazo -> lista_exp_brazos ARROW2 statement COMA .)
    LCOR            reduce using rule 53 (brazo -> lista_exp_brazos ARROW2 statement COMA .)
    VEC             reduce using rule 53 (brazo -> lista_exp_brazos ARROW2 statement COMA .)
    VECTOR          reduce using rule 53 (brazo -> lista_exp_brazos ARROW2 statement COMA .)
    MUT             reduce using rule 53 (brazo -> lista_exp_brazos ARROW2 statement COMA .)
    ANDSINGLE       reduce using rule 53 (brazo -> lista_exp_brazos ARROW2 statement COMA .)
    I64             reduce using rule 53 (brazo -> lista_exp_brazos ARROW2 statement COMA .)
    F64             reduce using rule 53 (brazo -> lista_exp_brazos ARROW2 statement COMA .)
    ENTERO          reduce using rule 53 (brazo -> lista_exp_brazos ARROW2 statement COMA .)
    DECIMAL         reduce using rule 53 (brazo -> lista_exp_brazos ARROW2 statement COMA .)
    CADENA          reduce using rule 53 (brazo -> lista_exp_brazos ARROW2 statement COMA .)
    BOOLEANO        reduce using rule 53 (brazo -> lista_exp_brazos ARROW2 statement COMA .)
    CARACTER        reduce using rule 53 (brazo -> lista_exp_brazos ARROW2 statement COMA .)
    IF              reduce using rule 53 (brazo -> lista_exp_brazos ARROW2 statement COMA .)
    MATCH           reduce using rule 53 (brazo -> lista_exp_brazos ARROW2 statement COMA .)
    LOOP            reduce using rule 53 (brazo -> lista_exp_brazos ARROW2 statement COMA .)
    WHILE           reduce using rule 53 (brazo -> lista_exp_brazos ARROW2 statement COMA .)
    FOR             reduce using rule 53 (brazo -> lista_exp_brazos ARROW2 statement COMA .)


state 336

    (65) foriterative -> exp PUNTO PUNTO exp .
    (124) exp -> exp . PUNTO exp_native
    (125) expmath -> exp . MAS exp
    (126) expmath -> exp . MENOS exp
    (127) expmath -> exp . MULTIPLICACION exp
    (128) expmath -> exp . DIVISION exp
    (129) expmath -> exp . MODULO exp
    (133) expop -> exp . AND exp
    (134) expop -> exp . OR exp
    (137) exprel -> exp . IGUALI exp
    (138) exprel -> exp . DIF exp
    (139) exprel -> exp . MAYOR exp
    (140) exprel -> exp . MENOR exp
    (141) exprel -> exp . MAYORI exp
    (142) exprel -> exp . MENORI exp
    (136) expcast -> exp . AS tipo_var

    LLLAV           reduce using rule 65 (foriterative -> exp PUNTO PUNTO exp .)
    PUNTO           shift and go to state 86
    MAS             shift and go to state 87
    MENOS           shift and go to state 88
    MULTIPLICACION  shift and go to state 89
    DIVISION        shift and go to state 90
    MODULO          shift and go to state 91
    AND             shift and go to state 92
    OR              shift and go to state 93
    IGUALI          shift and go to state 94
    DIF             shift and go to state 95
    MAYOR           shift and go to state 96
    MENOR           shift and go to state 97
    MAYORI          shift and go to state 98
    MENORI          shift and go to state 99
    AS              shift and go to state 100


state 337

    (146) lista_att -> lista_att COMA ID DPUNTOS auxexp .

    RLLAV           reduce using rule 146 (lista_att -> lista_att COMA ID DPUNTOS auxexp .)
    COMA            reduce using rule 146 (lista_att -> lista_att COMA ID DPUNTOS auxexp .)


state 338

    (131) exppow -> I64 DPUNTOS DPUNTOS POW LPAR exp COMA exp . RPAR
    (124) exp -> exp . PUNTO exp_native
    (125) expmath -> exp . MAS exp
    (126) expmath -> exp . MENOS exp
    (127) expmath -> exp . MULTIPLICACION exp
    (128) expmath -> exp . DIVISION exp
    (129) expmath -> exp . MODULO exp
    (133) expop -> exp . AND exp
    (134) expop -> exp . OR exp
    (137) exprel -> exp . IGUALI exp
    (138) exprel -> exp . DIF exp
    (139) exprel -> exp . MAYOR exp
    (140) exprel -> exp . MENOR exp
    (141) exprel -> exp . MAYORI exp
    (142) exprel -> exp . MENORI exp
    (136) expcast -> exp . AS tipo_var

    RPAR            shift and go to state 340
    PUNTO           shift and go to state 86
    MAS             shift and go to state 87
    MENOS           shift and go to state 88
    MULTIPLICACION  shift and go to state 89
    DIVISION        shift and go to state 90
    MODULO          shift and go to state 91
    AND             shift and go to state 92
    OR              shift and go to state 93
    IGUALI          shift and go to state 94
    DIF             shift and go to state 95
    MAYOR           shift and go to state 96
    MENOR           shift and go to state 97
    MAYORI          shift and go to state 98
    MENORI          shift and go to state 99
    AS              shift and go to state 100


state 339

    (132) exppow -> F64 DPUNTOS DPUNTOS POWF LPAR exp COMA exp . RPAR
    (124) exp -> exp . PUNTO exp_native
    (125) expmath -> exp . MAS exp
    (126) expmath -> exp . MENOS exp
    (127) expmath -> exp . MULTIPLICACION exp
    (128) expmath -> exp . DIVISION exp
    (129) expmath -> exp . MODULO exp
    (133) expop -> exp . AND exp
    (134) expop -> exp . OR exp
    (137) exprel -> exp . IGUALI exp
    (138) exprel -> exp . DIF exp
    (139) exprel -> exp . MAYOR exp
    (140) exprel -> exp . MENOR exp
    (141) exprel -> exp . MAYORI exp
    (142) exprel -> exp . MENORI exp
    (136) expcast -> exp . AS tipo_var

    RPAR            shift and go to state 341
    PUNTO           shift and go to state 86
    MAS             shift and go to state 87
    MENOS           shift and go to state 88
    MULTIPLICACION  shift and go to state 89
    DIVISION        shift and go to state 90
    MODULO          shift and go to state 91
    AND             shift and go to state 92
    OR              shift and go to state 93
    IGUALI          shift and go to state 94
    DIF             shift and go to state 95
    MAYOR           shift and go to state 96
    MENOR           shift and go to state 97
    MAYORI          shift and go to state 98
    MENORI          shift and go to state 99
    AS              shift and go to state 100


state 340

    (131) exppow -> I64 DPUNTOS DPUNTOS POW LPAR exp COMA exp RPAR .

    PUNTO           reduce using rule 131 (exppow -> I64 DPUNTOS DPUNTOS POW LPAR exp COMA exp RPAR .)
    MAS             reduce using rule 131 (exppow -> I64 DPUNTOS DPUNTOS POW LPAR exp COMA exp RPAR .)
    MENOS           reduce using rule 131 (exppow -> I64 DPUNTOS DPUNTOS POW LPAR exp COMA exp RPAR .)
    MULTIPLICACION  reduce using rule 131 (exppow -> I64 DPUNTOS DPUNTOS POW LPAR exp COMA exp RPAR .)
    DIVISION        reduce using rule 131 (exppow -> I64 DPUNTOS DPUNTOS POW LPAR exp COMA exp RPAR .)
    MODULO          reduce using rule 131 (exppow -> I64 DPUNTOS DPUNTOS POW LPAR exp COMA exp RPAR .)
    AND             reduce using rule 131 (exppow -> I64 DPUNTOS DPUNTOS POW LPAR exp COMA exp RPAR .)
    OR              reduce using rule 131 (exppow -> I64 DPUNTOS DPUNTOS POW LPAR exp COMA exp RPAR .)
    IGUALI          reduce using rule 131 (exppow -> I64 DPUNTOS DPUNTOS POW LPAR exp COMA exp RPAR .)
    DIF             reduce using rule 131 (exppow -> I64 DPUNTOS DPUNTOS POW LPAR exp COMA exp RPAR .)
    MAYOR           reduce using rule 131 (exppow -> I64 DPUNTOS DPUNTOS POW LPAR exp COMA exp RPAR .)
    MENOR           reduce using rule 131 (exppow -> I64 DPUNTOS DPUNTOS POW LPAR exp COMA exp RPAR .)
    MAYORI          reduce using rule 131 (exppow -> I64 DPUNTOS DPUNTOS POW LPAR exp COMA exp RPAR .)
    MENORI          reduce using rule 131 (exppow -> I64 DPUNTOS DPUNTOS POW LPAR exp COMA exp RPAR .)
    AS              reduce using rule 131 (exppow -> I64 DPUNTOS DPUNTOS POW LPAR exp COMA exp RPAR .)
    LLLAV           reduce using rule 131 (exppow -> I64 DPUNTOS DPUNTOS POW LPAR exp COMA exp RPAR .)
    PCOMA           reduce using rule 131 (exppow -> I64 DPUNTOS DPUNTOS POW LPAR exp COMA exp RPAR .)
    COMA            reduce using rule 131 (exppow -> I64 DPUNTOS DPUNTOS POW LPAR exp COMA exp RPAR .)
    RCOR            reduce using rule 131 (exppow -> I64 DPUNTOS DPUNTOS POW LPAR exp COMA exp RPAR .)
    RPAR            reduce using rule 131 (exppow -> I64 DPUNTOS DPUNTOS POW LPAR exp COMA exp RPAR .)
    RLLAV           reduce using rule 131 (exppow -> I64 DPUNTOS DPUNTOS POW LPAR exp COMA exp RPAR .)
    ID              reduce using rule 131 (exppow -> I64 DPUNTOS DPUNTOS POW LPAR exp COMA exp RPAR .)
    PRINT           reduce using rule 131 (exppow -> I64 DPUNTOS DPUNTOS POW LPAR exp COMA exp RPAR .)
    LET             reduce using rule 131 (exppow -> I64 DPUNTOS DPUNTOS POW LPAR exp COMA exp RPAR .)
    CONTINUE        reduce using rule 131 (exppow -> I64 DPUNTOS DPUNTOS POW LPAR exp COMA exp RPAR .)
    BREAK           reduce using rule 131 (exppow -> I64 DPUNTOS DPUNTOS POW LPAR exp COMA exp RPAR .)
    RETURN          reduce using rule 131 (exppow -> I64 DPUNTOS DPUNTOS POW LPAR exp COMA exp RPAR .)
    IF              reduce using rule 131 (exppow -> I64 DPUNTOS DPUNTOS POW LPAR exp COMA exp RPAR .)
    MATCH           reduce using rule 131 (exppow -> I64 DPUNTOS DPUNTOS POW LPAR exp COMA exp RPAR .)
    LOOP            reduce using rule 131 (exppow -> I64 DPUNTOS DPUNTOS POW LPAR exp COMA exp RPAR .)
    WHILE           reduce using rule 131 (exppow -> I64 DPUNTOS DPUNTOS POW LPAR exp COMA exp RPAR .)
    FOR             reduce using rule 131 (exppow -> I64 DPUNTOS DPUNTOS POW LPAR exp COMA exp RPAR .)
    LPAR            reduce using rule 131 (exppow -> I64 DPUNTOS DPUNTOS POW LPAR exp COMA exp RPAR .)
    AD              reduce using rule 131 (exppow -> I64 DPUNTOS DPUNTOS POW LPAR exp COMA exp RPAR .)
    LCOR            reduce using rule 131 (exppow -> I64 DPUNTOS DPUNTOS POW LPAR exp COMA exp RPAR .)
    VEC             reduce using rule 131 (exppow -> I64 DPUNTOS DPUNTOS POW LPAR exp COMA exp RPAR .)
    VECTOR          reduce using rule 131 (exppow -> I64 DPUNTOS DPUNTOS POW LPAR exp COMA exp RPAR .)
    MUT             reduce using rule 131 (exppow -> I64 DPUNTOS DPUNTOS POW LPAR exp COMA exp RPAR .)
    ANDSINGLE       reduce using rule 131 (exppow -> I64 DPUNTOS DPUNTOS POW LPAR exp COMA exp RPAR .)
    I64             reduce using rule 131 (exppow -> I64 DPUNTOS DPUNTOS POW LPAR exp COMA exp RPAR .)
    F64             reduce using rule 131 (exppow -> I64 DPUNTOS DPUNTOS POW LPAR exp COMA exp RPAR .)
    ENTERO          reduce using rule 131 (exppow -> I64 DPUNTOS DPUNTOS POW LPAR exp COMA exp RPAR .)
    DECIMAL         reduce using rule 131 (exppow -> I64 DPUNTOS DPUNTOS POW LPAR exp COMA exp RPAR .)
    CADENA          reduce using rule 131 (exppow -> I64 DPUNTOS DPUNTOS POW LPAR exp COMA exp RPAR .)
    BOOLEANO        reduce using rule 131 (exppow -> I64 DPUNTOS DPUNTOS POW LPAR exp COMA exp RPAR .)
    CARACTER        reduce using rule 131 (exppow -> I64 DPUNTOS DPUNTOS POW LPAR exp COMA exp RPAR .)
    ARROW2          reduce using rule 131 (exppow -> I64 DPUNTOS DPUNTOS POW LPAR exp COMA exp RPAR .)
    ORSINGLE        reduce using rule 131 (exppow -> I64 DPUNTOS DPUNTOS POW LPAR exp COMA exp RPAR .)


state 341

    (132) exppow -> F64 DPUNTOS DPUNTOS POWF LPAR exp COMA exp RPAR .

    PUNTO           reduce using rule 132 (exppow -> F64 DPUNTOS DPUNTOS POWF LPAR exp COMA exp RPAR .)
    MAS             reduce using rule 132 (exppow -> F64 DPUNTOS DPUNTOS POWF LPAR exp COMA exp RPAR .)
    MENOS           reduce using rule 132 (exppow -> F64 DPUNTOS DPUNTOS POWF LPAR exp COMA exp RPAR .)
    MULTIPLICACION  reduce using rule 132 (exppow -> F64 DPUNTOS DPUNTOS POWF LPAR exp COMA exp RPAR .)
    DIVISION        reduce using rule 132 (exppow -> F64 DPUNTOS DPUNTOS POWF LPAR exp COMA exp RPAR .)
    MODULO          reduce using rule 132 (exppow -> F64 DPUNTOS DPUNTOS POWF LPAR exp COMA exp RPAR .)
    AND             reduce using rule 132 (exppow -> F64 DPUNTOS DPUNTOS POWF LPAR exp COMA exp RPAR .)
    OR              reduce using rule 132 (exppow -> F64 DPUNTOS DPUNTOS POWF LPAR exp COMA exp RPAR .)
    IGUALI          reduce using rule 132 (exppow -> F64 DPUNTOS DPUNTOS POWF LPAR exp COMA exp RPAR .)
    DIF             reduce using rule 132 (exppow -> F64 DPUNTOS DPUNTOS POWF LPAR exp COMA exp RPAR .)
    MAYOR           reduce using rule 132 (exppow -> F64 DPUNTOS DPUNTOS POWF LPAR exp COMA exp RPAR .)
    MENOR           reduce using rule 132 (exppow -> F64 DPUNTOS DPUNTOS POWF LPAR exp COMA exp RPAR .)
    MAYORI          reduce using rule 132 (exppow -> F64 DPUNTOS DPUNTOS POWF LPAR exp COMA exp RPAR .)
    MENORI          reduce using rule 132 (exppow -> F64 DPUNTOS DPUNTOS POWF LPAR exp COMA exp RPAR .)
    AS              reduce using rule 132 (exppow -> F64 DPUNTOS DPUNTOS POWF LPAR exp COMA exp RPAR .)
    LLLAV           reduce using rule 132 (exppow -> F64 DPUNTOS DPUNTOS POWF LPAR exp COMA exp RPAR .)
    PCOMA           reduce using rule 132 (exppow -> F64 DPUNTOS DPUNTOS POWF LPAR exp COMA exp RPAR .)
    COMA            reduce using rule 132 (exppow -> F64 DPUNTOS DPUNTOS POWF LPAR exp COMA exp RPAR .)
    RCOR            reduce using rule 132 (exppow -> F64 DPUNTOS DPUNTOS POWF LPAR exp COMA exp RPAR .)
    RPAR            reduce using rule 132 (exppow -> F64 DPUNTOS DPUNTOS POWF LPAR exp COMA exp RPAR .)
    RLLAV           reduce using rule 132 (exppow -> F64 DPUNTOS DPUNTOS POWF LPAR exp COMA exp RPAR .)
    ID              reduce using rule 132 (exppow -> F64 DPUNTOS DPUNTOS POWF LPAR exp COMA exp RPAR .)
    PRINT           reduce using rule 132 (exppow -> F64 DPUNTOS DPUNTOS POWF LPAR exp COMA exp RPAR .)
    LET             reduce using rule 132 (exppow -> F64 DPUNTOS DPUNTOS POWF LPAR exp COMA exp RPAR .)
    CONTINUE        reduce using rule 132 (exppow -> F64 DPUNTOS DPUNTOS POWF LPAR exp COMA exp RPAR .)
    BREAK           reduce using rule 132 (exppow -> F64 DPUNTOS DPUNTOS POWF LPAR exp COMA exp RPAR .)
    RETURN          reduce using rule 132 (exppow -> F64 DPUNTOS DPUNTOS POWF LPAR exp COMA exp RPAR .)
    IF              reduce using rule 132 (exppow -> F64 DPUNTOS DPUNTOS POWF LPAR exp COMA exp RPAR .)
    MATCH           reduce using rule 132 (exppow -> F64 DPUNTOS DPUNTOS POWF LPAR exp COMA exp RPAR .)
    LOOP            reduce using rule 132 (exppow -> F64 DPUNTOS DPUNTOS POWF LPAR exp COMA exp RPAR .)
    WHILE           reduce using rule 132 (exppow -> F64 DPUNTOS DPUNTOS POWF LPAR exp COMA exp RPAR .)
    FOR             reduce using rule 132 (exppow -> F64 DPUNTOS DPUNTOS POWF LPAR exp COMA exp RPAR .)
    LPAR            reduce using rule 132 (exppow -> F64 DPUNTOS DPUNTOS POWF LPAR exp COMA exp RPAR .)
    AD              reduce using rule 132 (exppow -> F64 DPUNTOS DPUNTOS POWF LPAR exp COMA exp RPAR .)
    LCOR            reduce using rule 132 (exppow -> F64 DPUNTOS DPUNTOS POWF LPAR exp COMA exp RPAR .)
    VEC             reduce using rule 132 (exppow -> F64 DPUNTOS DPUNTOS POWF LPAR exp COMA exp RPAR .)
    VECTOR          reduce using rule 132 (exppow -> F64 DPUNTOS DPUNTOS POWF LPAR exp COMA exp RPAR .)
    MUT             reduce using rule 132 (exppow -> F64 DPUNTOS DPUNTOS POWF LPAR exp COMA exp RPAR .)
    ANDSINGLE       reduce using rule 132 (exppow -> F64 DPUNTOS DPUNTOS POWF LPAR exp COMA exp RPAR .)
    I64             reduce using rule 132 (exppow -> F64 DPUNTOS DPUNTOS POWF LPAR exp COMA exp RPAR .)
    F64             reduce using rule 132 (exppow -> F64 DPUNTOS DPUNTOS POWF LPAR exp COMA exp RPAR .)
    ENTERO          reduce using rule 132 (exppow -> F64 DPUNTOS DPUNTOS POWF LPAR exp COMA exp RPAR .)
    DECIMAL         reduce using rule 132 (exppow -> F64 DPUNTOS DPUNTOS POWF LPAR exp COMA exp RPAR .)
    CADENA          reduce using rule 132 (exppow -> F64 DPUNTOS DPUNTOS POWF LPAR exp COMA exp RPAR .)
    BOOLEANO        reduce using rule 132 (exppow -> F64 DPUNTOS DPUNTOS POWF LPAR exp COMA exp RPAR .)
    CARACTER        reduce using rule 132 (exppow -> F64 DPUNTOS DPUNTOS POWF LPAR exp COMA exp RPAR .)
    ARROW2          reduce using rule 132 (exppow -> F64 DPUNTOS DPUNTOS POWF LPAR exp COMA exp RPAR .)
    ORSINGLE        reduce using rule 132 (exppow -> F64 DPUNTOS DPUNTOS POWF LPAR exp COMA exp RPAR .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for PUNTO in state 39 resolved as shift
WARNING: shift/reduce conflict for LPAR in state 45 resolved as shift
WARNING: shift/reduce conflict for LCOR in state 45 resolved as shift
WARNING: shift/reduce conflict for LPAR in state 72 resolved as shift
WARNING: shift/reduce conflict for LCOR in state 72 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 75 resolved as shift
WARNING: shift/reduce conflict for LCOR in state 106 resolved as shift
WARNING: shift/reduce conflict for PCOMA in state 183 resolved as shift
WARNING: shift/reduce conflict for PCOMA in state 184 resolved as shift
WARNING: shift/reduce conflict for PUNTO in state 185 resolved as shift
WARNING: shift/reduce conflict for LPAR in state 185 resolved as shift
WARNING: shift/reduce conflict for LCOR in state 185 resolved as shift
WARNING: shift/reduce conflict for LPAR in state 190 resolved as shift
WARNING: shift/reduce conflict for ID in state 190 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 190 resolved as shift
WARNING: shift/reduce conflict for AD in state 190 resolved as shift
WARNING: shift/reduce conflict for LCOR in state 190 resolved as shift
WARNING: shift/reduce conflict for VEC in state 190 resolved as shift
WARNING: shift/reduce conflict for VECTOR in state 190 resolved as shift
WARNING: shift/reduce conflict for MUT in state 190 resolved as shift
WARNING: shift/reduce conflict for ANDSINGLE in state 190 resolved as shift
WARNING: shift/reduce conflict for I64 in state 190 resolved as shift
WARNING: shift/reduce conflict for F64 in state 190 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 190 resolved as shift
WARNING: shift/reduce conflict for DECIMAL in state 190 resolved as shift
WARNING: shift/reduce conflict for CADENA in state 190 resolved as shift
WARNING: shift/reduce conflict for BOOLEANO in state 190 resolved as shift
WARNING: shift/reduce conflict for CARACTER in state 190 resolved as shift
WARNING: shift/reduce conflict for IF in state 190 resolved as shift
WARNING: shift/reduce conflict for MATCH in state 190 resolved as shift
WARNING: shift/reduce conflict for LOOP in state 190 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 190 resolved as shift
WARNING: shift/reduce conflict for FOR in state 190 resolved as shift
WARNING: shift/reduce conflict for LPAR in state 191 resolved as shift
WARNING: shift/reduce conflict for ID in state 191 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 191 resolved as shift
WARNING: shift/reduce conflict for AD in state 191 resolved as shift
WARNING: shift/reduce conflict for LCOR in state 191 resolved as shift
WARNING: shift/reduce conflict for VEC in state 191 resolved as shift
WARNING: shift/reduce conflict for VECTOR in state 191 resolved as shift
WARNING: shift/reduce conflict for MUT in state 191 resolved as shift
WARNING: shift/reduce conflict for ANDSINGLE in state 191 resolved as shift
WARNING: shift/reduce conflict for I64 in state 191 resolved as shift
WARNING: shift/reduce conflict for F64 in state 191 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 191 resolved as shift
WARNING: shift/reduce conflict for DECIMAL in state 191 resolved as shift
WARNING: shift/reduce conflict for CADENA in state 191 resolved as shift
WARNING: shift/reduce conflict for BOOLEANO in state 191 resolved as shift
WARNING: shift/reduce conflict for CARACTER in state 191 resolved as shift
WARNING: shift/reduce conflict for IF in state 191 resolved as shift
WARNING: shift/reduce conflict for MATCH in state 191 resolved as shift
WARNING: shift/reduce conflict for LOOP in state 191 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 191 resolved as shift
WARNING: shift/reduce conflict for FOR in state 191 resolved as shift
WARNING: shift/reduce conflict for LCOR in state 246 resolved as shift
WARNING: shift/reduce conflict for PUNTO in state 246 resolved as shift
WARNING: shift/reduce conflict for MAYOR in state 272 resolved as shift
WARNING: shift/reduce conflict for PUNTO in state 325 resolved as shift
WARNING: reduce/reduce conflict in state 33 resolved using rule (auxacc -> exparr)
WARNING: rejected rule (exp -> exparr) in state 33
WARNING: reduce/reduce conflict in state 186 resolved using rule (instruccion_l -> sentencia)
WARNING: rejected rule (exp -> sentencia) in state 186
WARNING: reduce/reduce conflict in state 321 resolved using rule (instruccion_match -> llamada)
WARNING: rejected rule (exp -> llamada) in state 321
WARNING: reduce/reduce conflict in state 323 resolved using rule (instruccion_match -> sentencia)
WARNING: rejected rule (exp -> sentencia) in state 323
WARNING: Rule (exp -> exparr) is never reduced
